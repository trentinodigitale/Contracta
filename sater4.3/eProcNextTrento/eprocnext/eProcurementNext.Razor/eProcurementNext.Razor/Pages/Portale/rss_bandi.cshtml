@page "/Portale/rss_bandi.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule
@using eProcurementNext.DashBoard
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.HTML.BasicFunction;
@using static eProcurementNext.DashBoard.Basic;
@inject IHttpContextAccessor accessor;
@inject IConfiguration configuration;
@using Microsoft.VisualBasic;
@model eProcurementNext.Razor.Pages.Portale.rss_bandiModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new EprocResponse(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
}
@{
	string sort = GetParamURL(Request.QueryString.ToString(), "sort");
	if (string.IsNullOrEmpty(sort))
	{
		sort = "DtScadenzaBandoTecnical";
	}
	string sortOrder = GetParamURL(Request.QueryString.ToString(), "sortorder");
	if(string.IsNullOrEmpty(sortOrder))
	{
		sortOrder = "asc";
	}
	string ml_key = GetParamURL(Request.QueryString.ToString(), "ML_KEY");
	if (string.IsNullOrEmpty(ml_key))
	{
		ml_key = "TEMPLATE_RSS_DPCM_ML";
	}
	//'response.write "rss_new.asp?Table=DASHBOARD_VIEW_DOCUMENTI_PUBBLICI&FilterHide=" & cstr(request.querystring("FilterHide")) & "&Filter=" & cstr(request.querystring("Filter")) & "&ML_KEY=TEMPLATE_RSS_DPCM_ML&sort=" & sort & "&sortorder=" & sortOrder
	//'response.end
	throw new ResponseRedirectException("rss_new.asp?Table=DASHBOARD_VIEW_DOCUMENTI_PUBBLICI&FilterHide=" + URLEncode(CStr(GetParamURL(Request.QueryString.ToString(), "FilterHide"))) + "&Filter=" + URLEncode(CStr(GetParamURL(Request.QueryString.ToString(), "Filter"))) + "&ML_KEY=" + ml_key + "&sort=" + sort + "&sortorder=" + sortOrder + "&numRowForPag=" + CStr(GetParamURL(Request.QueryString.ToString(), "numRowForPag")) + "&nPag=" + CStr(GetParamURL(Request.QueryString.ToString(), "nPag")), Response);
}@Html.Raw(htmlToReturn.Out())