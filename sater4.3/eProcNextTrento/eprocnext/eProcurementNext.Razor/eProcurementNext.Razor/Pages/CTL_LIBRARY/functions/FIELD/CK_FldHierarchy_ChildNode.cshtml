@page "/CTL_LIBRARY/functions/FIELD/CK_FldHierarchy_ChildNode.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.HTML.BasicFunction;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.verificaBrowserModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@* <!-- #Include File="../../document/Common.asp" --> *@
@model eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.FIELD.CK_FldHierarchy_ChildNodeModel
@using static eProcurementNext.Session.SessionMiddleware
@{

	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
}
@{
    string strNODOFOGLIA = string.Empty;
    string strDOMAIN = GetParamURL(Request.QueryString.ToString(), "DOMAIN");
    string strCODICE = GetParamURL(Request.QueryString.ToString(), "CODICE");

    //*******************************************
    //'*****  VALIDAZIONE DELL'INPUT UTENTE  *****

    validate( "CODICE", GetParamURL(Request.QueryString.ToString(), "CODICE"), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0,HttpContext,session);
    validate("DOMAIN", GetParamURL(Request.QueryString.ToString(), "DOMAIN"), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);

    strNODOFOGLIA="NO";
    //'--RICERCA PER CODICE FISCALE
    if (!(string.IsNullOrEmpty(strCODICE)) && !(string.IsNullOrEmpty(strDOMAIN)))
    {
        //'--cerco prima tra gli utenti dell'azienda collegata
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@strDomain", strDOMAIN);
        sqlParams.Add("@strCodice", strCODICE);
        string strSQL = "exec CK_FLD_HIERARCHY_CHILDNODE @strDomain, @strCodice";
        CommonDbFunctions cdf = new();
        TSRecordSet rs = cdf.GetRSReadFromQuery_(strSQL, ApplicationCommon.Application.ConnectionString, sqlParams);
        if (rs.RecordCount > 0)
        {
            strNODOFOGLIA="YES";
        }
    }
    htmlToReturn.Write(strNODOFOGLIA);
    
    throw new ResponseEndException(htmlToReturn.Out(), Response, "");
  
}@Html.Raw(htmlToReturn.Out())