@page "/CTL_LIBRARY/GetFilteredField.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.getFilteredFieldModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.trace_in_log_utenteModel;
@using Microsoft.VisualBasic;
@using static eProcurementNext.CommonDB.Basic;
@using static eProcurementNext.Session.SessionMiddleware
@*
<!-- #Include File="./Functions/verificabrowser.inc" -->
<!-- #Include File="./Functions/CheckSession.inc" -->
<!-- #INCLUDE FILE="./functions/security.inc" -->
<!-- #Include File="./functions/trace_in_log_utente.inc" -->
*@
@model eProcurementNext.Razor.Pages.CTL_LIBRARY.getFilteredFieldModel
@{
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
}
@{
	//dim ObjSession

	//ObjSession = session("Session")

	//set ObjSession(5) = session
	//set ObjSession(6) = application
	//ObjSession(9) = application("Server_RDS")
	//ObjSession(10) = session("Funzionalita")//' permessi utenti
	//set ObjSession(13) = objNewDizMlng("MultiLinguismo")

	//'*******************************************
	//'*****  VALIDAZIONE DELL'INPUT UTENTE  *****
	//'*******************************************

	validate( "FIELD", CStr(GetParamURL(Request.QueryString.ToString(), "FIELD")) , TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_PAROLASINGOLA, "", 0, HttpContext, session);
	validate( "FORMAT", CStr(GetParamURL(Request.QueryString.ToString(), "FORMAT")) , TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_PAROLASINGOLA, "", 0, HttpContext, session);
	validate( "EDITABLE", CStr(GetParamURL(Request.QueryString.ToString(), "EDITABLE")) , TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_PAROLASINGOLA, "", 0, HttpContext, session);	
	validate( "FILTER", CStr(GetParamURL(Request.QueryString.ToString(), "FILTER")) , TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_FILTROSQL, "", 0, HttpContext, session);

	//'--recupero dominio estensioni
	LibDbDictionary Objects = new LibDbDictionary();

	eProcurementNext.HTML.Field field;
	try
	{
		field = Objects.GetFilteredFieldExt(CStr(GetParamURL(Request.QueryString.ToString(), "FIELD")), CStr(session[eProcurementNext.Session.SessionProperty.SESSION_SUFFIX]), CLng(session[eProcurementNext.Session.SessionProperty.IdPfu]), session, CStr(GetParamURL(Request.QueryString.ToString(), "FILTER")), ApplicationCommon.Application.ConnectionString, CInt(0));

		if (!string.IsNullOrEmpty(GetParamURL(Request.QueryString.ToString(),"ROW"))) {
			field.SetRow2(CStr(GetParamURL(Request.QueryString.ToString(), "ROW")));
		}

		if (!string.IsNullOrEmpty(GetParamURL(Request.QueryString.ToString(),"FORMAT"))){
			field.strFormat = CStr(GetParamURL(Request.QueryString.ToString(), "FORMAT"));
		}

		if (!string.IsNullOrEmpty(GetParamURL(Request.QueryString.ToString(),"STYLE"))){

			field.Style = CStr(GetParamURL(Request.QueryString.ToString(), "STYLE"));
			//field.GetPrimitiveObject.Style = cstr( GetParamURL(Request.QueryString.ToString(),"STYLE")))

		}

		if (!string.IsNullOrEmpty(GetParamURL(Request.QueryString.ToString(),"ONCHANGE"))){
			field.setOnChange(CStr(GetParamURL(Request.QueryString.ToString(), "ONCHANGE")));
		}

		if (!string.IsNullOrEmpty(GetParamURL(Request.QueryString.ToString(),"PATH"))){
			field.Path = CStr(GetParamURL(Request.QueryString.ToString(), "PATH"));
		}

		field.Value = GetParamURL(Request.QueryString.ToString(), "VALUE");

		if (GetParamURL(Request.QueryString.ToString(),"EDITABLE") != "no" ){
			field.ValueHtml(htmlToReturn, true);
		}else{
			field.ValueHtml(htmlToReturn, false);
		}

	}
	catch(Exception ex)
	{
		//'-- gestione errore
		Response.StatusCode = StatusCodes.Status500InternalServerError;

		string n = ex.HelpLink;
		string s = ex.Source;
		string d = ex.Message;


		traceInLogUtente( 0, "GetFilteredField.asp", "Descrizione:" + d + " --- QueryString:" +GetQueryStringFromContext(Request.QueryString),HttpContext,session);

		//'-- Se � attiva la modalit� debug visualizziamo pi� informazioni riguardo l'errore, query sql comprese
		if (CStr(ApplicationCommon.Application["debug-mode"].ToLower()) == "yes" || (ApplicationCommon.Application["debug-mode"]).ToLower() == "si" || (CStr(ApplicationCommon.Application["debug-mode"]) == "true") ){

			htmlToReturn.Write($"object:" + "GetFilteredFields" + " <br> " + "Desc:" + d + " <br> " + "Number:" + n + " <br> " + "Source:" + s);

		}else{

			//'-- Se � disattivato il debug-mode ma � attiva ma la SYS di visione degli errori tecnici 
			if ( CStr(ApplicationCommon.Application["dettaglio-errori"].ToLower()) == "yes" || ApplicationCommon.Application["dettaglio-errori"].ToLower() == "si" ) {

				htmlToReturn.Write($"Desc:" + d + " <br/> " + "Number:" + n + " <br/> " + "Source:" + s);

			}else{

				//'-- Scriviamo l'errore nell'event viewer
				TraceErr(ex, ApplicationCommon.Application.ConnectionString);
				//TraceErr s, d, n, ProgID
				htmlToReturn.Write($" Errore in data : " + DateAndTime.Now.ToString());
			}
		}
	}
}
@Html.Raw(htmlToReturn.Out())