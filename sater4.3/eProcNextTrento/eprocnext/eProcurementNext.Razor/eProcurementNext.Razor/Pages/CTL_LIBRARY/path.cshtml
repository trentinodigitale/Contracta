@page "/CTL_LIBRARY/path.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.masterPageToolsModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.pathModel;
@using Microsoft.VisualBasic;
@using static eProcurementNext.Session.SessionMiddleware
@model eProcurementNext.Razor.Pages.CTL_LIBRARY.pathModel
@{
    LoadSession(HttpContext, session);
}
@{
    string url = GetParamURL(Request.QueryString.ToString(),"URL");
    string key = GetParamURL(Request.QueryString.ToString(),"KEY");
    string reset = GetParamURL(Request.QueryString.ToString(),"RESET");
    string pop = GetParamURL(Request.QueryString.ToString(),"POP");

    string lo = GetParam(url, "lo");

    if (!string.IsNullOrEmpty(GetParamURL(Request.QueryString.ToString(), "MSG_ERROR")))
    {
        session["MSG_ERROR"] = GetParamURL(Request.QueryString.ToString(), "MSG_ERROR");
    }

    int posCorrente;
    dynamic[,] mp_stackMatrix;

    if (pop.ToUpper() == "YES")
    {
        posCorrente = CInt(session["stack_index"]);
        posCorrente = posCorrente - 1;

        mp_stackMatrix = session["stack_path"];
        url = CStr(mp_stackMatrix[posCorrente, 1]);

        //'-- aggiorno la sessione con lo stack aggiornato
        session["stack_index"] = posCorrente;

        session.Save();
        throw new ResponseRedirectException($"../{url}", Response);
    }

    //'-- se il comando non è di reset o di root ed il layout non è BASE o LISTA_ATTIVITA salta lo stack
    if (CStr(reset).ToUpper() != "YES" && CStr(GetParamURL(Request.QueryString.ToString(), "ROOT")).ToUpper() != "YES" && lo.ToUpper() != "BASE" && lo.ToUpper() != "LISTA_ATTIVITA")
    {
        session.Save();
        throw new ResponseRedirectException($"../{url}", Response);
    }

    string stack_key = getStackKey(key, url);

    posCorrente = -1;
    bool bFound = false;
    bool bNew = false;

    if (!IsEmpty(session["stack_path"]))  
    {
        mp_stackMatrix = session["stack_path"];
        posCorrente = session["stack_index"];
    }
    else
    {
        dynamic[,] m = new dynamic[50, 4];
        session["stack_path"] = m;
        mp_stackMatrix = m;
        bNew = true;
    }

    if (GetParamURL(Request.QueryString.ToString(), "ROOT").ToUpper() == "YES")
    {
        posCorrente = 1; //'-- prima era messo a 0, ma mi sembra più coerente che si comporti come il RESET.
    }
    else if (reset.ToUpper() == "YES")
    {
        posCorrente = 1;
    }
    else
    {
        if (!string.IsNullOrEmpty(stack_key) && !bNew)
        {
            for (int i = 0; i <= posCorrente; i++)   
            {
                //'-- se si sta richiedendo la redirect ad un oggetto gia presente nello stack
                if (CStr(mp_stackMatrix[i, 0]) == stack_key)
                {
                    posCorrente = i;
                    bFound = true;
                    break;
                }
            }

            if (!bFound)
            {
                posCorrente = posCorrente + 1;
            }

        }
    }

    // ------------------------------------------------------------------
    // --- SE LA POSIZIONE 0 DELLO STACK NON È LA HOME, LO FORZIAMO  ----
    // ------------------------------------------------------------------
    if (UCase(CStr(mp_stackMatrix[0, 0])) != "MAIN")
    {
        mp_stackMatrix[0, 0] = CStr("MAIN");
        mp_stackMatrix[0, 1] = CStr(session["UrlHomePage"]);
        mp_stackMatrix[0, 2] = CStr("Home_breadcrumb");
        mp_stackMatrix[0, 3] = CStr("main");

        session["stack_path"] = mp_stackMatrix;

        if (posCorrente == 0)
        {
            posCorrente = 1;
        }
    }

    //'-- aggiorno la sessione con lo stack aggiornato
    session["stack_index"] = posCorrente;

    mp_stackMatrix[posCorrente, 0] = stack_key;
    mp_stackMatrix[posCorrente, 1] = url;
    mp_stackMatrix[posCorrente, 2] = key;
    mp_stackMatrix[posCorrente, 3] = key;

    session["stack_path"] = mp_stackMatrix;
    session.Save();

    Response.Redirect($"../{url}");
}