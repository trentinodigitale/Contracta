@page "/CTL_LIBRARY/dztToDom.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.dztToDomModel;
@using Microsoft.VisualBasic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Session.SessionMiddleware
@model eProcurementNext.Razor.Pages.CTL_LIBRARY.dztToDomModel
@{
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new EprocResponse();

    string attributo = CStr(GetParamURL(Request.QueryString.ToString(), "DZT"));

    validate( "DZT", attributo , TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 1,HttpContext,session);

    TSRecordSet? rs = null;
    var sqlParams = new Dictionary<string, object?>();
	sqlParams.Add("@nome", attributo);
    string strSQL = "select dzt_type, dzt_dm_id,isnull(DZT_Format,'') as format from lib_dictionary with(nolock) where dzt_name = @nome and isnull(dzt_dm_id,'') <> ''";
    CommonDbFunctions cdb = new();
    rs = cdb.GetRSReadFromQuery_(strSQL, ApplicationCommon.Application.ConnectionString, sqlParams);

    if(rs != null && rs.RecordCount > 0)
    {
        rs.MoveFirst();

        string dztType = CStr(rs["dzt_type"]);
        string dom = CStr(rs["dzt_dm_id"]);
        string format = CStr(rs["format"]);

       throw new ResponseRedirectException("LoadExtendedAttrib.asp?TypeAttrib=" + dztType + "&IdDomain=" + dom + "&Attrib=" + attributo + "&readonly=1&PathImage=..%2F..%2FCTL_Library%2Fimages%2FDomain%2F&Format=" + format, Response);
    }
    else
    {
        htmlToReturn.Write("Attributo non presente o non valido"); 
    }
  

}
@Html.Raw(htmlToReturn.Out())