@page "/DASHBOARD/groupsView.asp"
@using eProcurementNext.Application
@using eProcurementNext.CommonDB
@using eProcurementNext.DashBoard
@using eProcurementNext.HTML
@using eProcurementNext.CommonModule
@using Microsoft.VisualBasic
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.intestModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.cnvModel;
@using static eProcurementNext.Session.SessionMiddleware
@* <!-- #Include File="../home/layout.inc" --> *@
@using static eProcurementNext.CommonModule.Basic;
@inject eProcurementNext.Session.ISession session;
@model eProcurementNext.Razor.Pages.DASHBOARD.groupsViewModel
@{
	Layout = ConfigurationServices.GetKey("LayoutVersion", "_masterPage");
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
}
@{
	//'-- *********************************************************************
	//'-- * Versione=1&data=2014-05-29&Attvita=57459&Nominativo=Federico      *
	//'-- *********************************************************************
	//drawMasterPage("../", "Documenti Collegati");

	void drawContent()
	{
		TSRecordSet? rs = null;

		validate("FilterHide", GetParamURL(Request.QueryString.ToString(), "FilterHide"), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_FILTROSQL, "", 0,HttpContext,session);
		validate("FOLDER_GROUP", GetParamURL(Request.QueryString.ToString(), "FOLDER_GROUP"), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);
		string FolderGroup = GetParamURL(Request.QueryString.ToString(), "FOLDER_GROUP");
        if (string.IsNullOrEmpty(FolderGroup))
        {
            FolderGroup = "LINKED_ISCRIZIONE_ALBO";
        }
		string strSql = "select f.* , q.* , q.Number from LIB_Functions f with (nolock) , profiliutente p with (nolock) ";
        strSql = strSql + " ," + FolderGroup.Replace("'", "''") + "  q ";
        strSql = strSql + " where q.display = 1 and LFN_GroupFunction = '" + FolderGroup.Replace("'", "''") + "' ";
        strSql = strSql + " and p.idpfu = " + session["IdPfu"] + " and ( substring( pfufunzionalita , LFN_PosPermission , 1 ) = '1' or isnull(LFN_PosPermission,0) = 0)   ";
        strSql = strSql + " and  q.idowner = " + session["IdPfu"] + " and f.LFN_id = q.Folder ";

        if (GetParamURL(Request.QueryString.ToString(), "FilterHide") != "")
        {
            strSql = strSql + " and " + GetParamURL(Request.QueryString.ToString(), "FilterHide");// 'filterhide è validato in testa
        }
        strSql = strSql + " order by LFN_Order";
        //'response.Write strSql
        rs = cdf.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString);

        Caption objCaption = new Caption();
        objCaption.Init(session);
        objCaption.strPath = "../images/Caption/";

        objCaption.ShowExit = false;
        htmlToReturn.Write(objCaption.SetCaption(ApplicationCommon.CNV("Documenti collegati"),"" ,"" ,"" , "CAPTION_DOCUMENT_ID"));

        htmlToReturn.Write($@"<div id=""accordion"">" + Environment.NewLine);
 
        //on error resume next
        string accessK = string.Empty;
        while(rs.EOF == false)
        {
            htmlToReturn.Write("<h3");

            accessK = CStr(rs["LFN_AccessKey"]);
            if (!string.IsNullOrEmpty(accessK))
            {
                htmlToReturn.Write($@" accesskey=""" + HtmlEncode(accessK) + $@""" ");
            }
            htmlToReturn.Write($@">" + Environment.NewLine);
            htmlToReturn.Write(HtmlEncode(ApplicationCommon.CNV(CStr(GetValueFromRS(rs.Fields["lfn_captionML"])))) + Environment.NewLine);
            htmlToReturn.Write("</h3>" + Environment.NewLine);

            htmlToReturn.Write($@"<div class=""div_loading"">" + Environment.NewLine);
            htmlToReturn.Write ($@"<input type=""hidden"" value=""" + HtmlEncode("../ctl_library/functions/gotoFun.asp?FilterHide=" + System.Web.HttpUtility.UrlEncode(GetParamURL(Request.QueryString.ToString(), "FilterHide")) + "&anti_cache=" +  System.Web.HttpUtility.UrlEncode(timestamp(DateTime.Now)) + "&path=dashboard%2F&lfn_id=" + URLEncode(CStr(GetValueFromRS(rs.Fields["lfn_identity"])))) + $@""" alt=""hidden_link""/>" +Environment.NewLine);
            htmlToReturn.Write("Loading...");
            htmlToReturn.Write("</div>" + Environment.NewLine);

            rs.MoveNext();
        }
		htmlToReturn.Write("</div>" + Environment.NewLine);
		htmlToReturn.Write($@"
		<script type=""text/javascript"">

		var accordions=new Object();
		var accordionsContent = new Object();


		$(function() 
		{{
			$( ""#accordion"").accordion({{
				active: -200000, 
				heightStyle: 'fill',
				activate: function(event, ui)
					{{

						var clicked = $(this).find('.ui-accordion-content-active').attr('id');

						document.getElementById(clicked).style.height = '';


						//indice accordion corrente
						nLen = clicked.length ;
						nIndexCurr = clicked.substring(nLen-1, nLen); 
						//alert(nIndexCurr);


						//Se troviamo quest'input hidden vuol dire che dobbiamo caricare il contenuto in ajax
						//altrimenti vuol dire che l'abbiamo gia fatto e l'utente sta ri-cliccando sull'accordion

						if ( ! accordions[clicked] )
						{{
							accordions[clicked] = 'gia_caricato';

							$('#'+clicked).load(
											$('#'+clicked).find(""input"").attr('value')
											, function( response, status, xhr ) {{
												if ( status == ""error"" ) 
												{{
													var msg = ""ERRORE : "";
													$('#'+clicked).html( msg + xhr.status + "" "" + xhr.statusText );
												}}

												//conservo codice in un vettore client
												accordionsContent[nIndexCurr] = getObj( clicked ).innerHTML;

											}});



						}}

						else{{

							//riprendo il codice html dal vettore
							getObj( clicked ).innerHTML = accordionsContent[nIndexCurr];

						}}


						//tolgo dall'html degli accordion diversi da quello corrente i riferimenti delle righe
						for (i = 0; i < 3; i++) 
						{{
							strIdDelete = 'ui-accordion-accordion-panel-' + i ;

							if ( i != nIndexCurr ){{

								if ( getObj( strIdDelete ) )
								{{
									//svuoto la tabella che contiene i riferimenti delle righe
									getObj( strIdDelete ).childNodes[2].innerHTML = '';
								}}
							}}
						}}




					}}
			}});
		}});

		function openAccordion()
		{{

		}}

	</script>");

	}
	string  timestamp(DateTime data)
	{
		return DateAndTime.DateDiff("s", "01/01/1970 00:00:00", data).ToString();
		
	}
	drawContent();
	
}@Html.Raw(htmlToReturn.Out())