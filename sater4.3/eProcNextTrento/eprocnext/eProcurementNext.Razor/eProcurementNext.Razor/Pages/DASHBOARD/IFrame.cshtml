@page "/DASHBOARD/IFrame.asp"
@using eProcurementNext.Application
@using eProcurementNext.DashBoard
@using eProcurementNext.CommonModule
@using Microsoft.VisualBasic
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.ctl_profiler
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.intestModel
@using static eProcurementNext.CommonModule.Basic;
@inject eProcurementNext.Session.ISession _session;
@inject eProcurementNext.Application.IEprocNextApplication _application;
@inject eProcurementNext.DashBoard.IViewer _viewer;
@inject IConfiguration configuration;
@inject eProcurementNext.Session.ISession session;
@model eProcurementNext.Razor.Pages.DASHBOARD.IFrameModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.masterPageToolsModel
@using static eProcurementNext.Session.SessionMiddleware
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel
@{
    Layout = ConfigurationServices.GetKey("LayoutVersion", "_masterPage");

    LoadSession(HttpContext, _session);
    EprocResponse htmlToReturn = new();

    validate("URL", Strings.Replace(GetParamURL(Request.QueryString.ToString(), "URL"), ".", "_"), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);

    string param = CStr(GetParamURL(Request.QueryString.ToString(), "URL"));

    //controllo che il param recuperato è presente nella sys iframe
    string sysIframe = ApplicationCommon.Application["IFRAME"];

    if (sysIframe.Contains("," + param + ","))
    {
        string urlDaSys = ApplicationCommon.Application[param.Replace("SYS_", "")];

        if (!string.IsNullOrEmpty(urlDaSys))
        {
            htmlToReturn.Write($@"<iframe id=""IFRAME_{param}"" class=""custom-iframe"" name=""IFRAME_{param}"" src=""{urlDaSys}""></iframe>");
        }
        else
        {
            htmlToReturn.Write("Errore recupero Sys " + param);
            throw new ResponseEndException(htmlToReturn.Out(), Response, "Errore recupero Sys " + param);
        }
    }
    else
    {
        htmlToReturn.Write("Errore sys " + param + " non autorizzata");
        throw new ResponseEndException(htmlToReturn.Out(), Response, "Errore sys " + param + " non autorizzata");

    }

   
}
@Html.Raw(htmlToReturn.Out())

    