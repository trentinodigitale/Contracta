@page "/SITAR/SITAR_XML_GARA.asp"
@inject eProcurementNext.Session.ISession session;
@using System.IO;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonDB.Basic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.ctl_profiler
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.HTML.BasicFunction;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.logModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using static eProcurementNext.CommonModule.Basic;
@using static eProcurementNext.Razor.Pages.SITAR.SITAR_XML_DOCUMENTAZIONEModel;
@using eProcurementNext.CtlProcess;
@using static eProcurementNext.Session.SessionMiddleware
@model eProcurementNext.Razor.Pages.SITAR.SITAR_XML_GARAModel
@{
    EprocResponse response = new();
    CommonDbFunctions cdf = new();

    LoadSession(HttpContext, session);
    //response.Write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
    HttpContext.Response.ContentType = "TEXT/XML";
    if (GetParamURL(Request.QueryString.ToString(), "VIDEO") != "1")
    {
        HttpContext.Response.Headers.Add("Content-Disposition", "attachment; filename=SITAR_XML_GARA.XML");
    }

    string vbTab = string.Empty;
    string RUP_Login = string.Empty;
    string RUP_CF = string.Empty;
    string RUP_Pwd = string.Empty;
    string CF_Ente = string.Empty;
    string g_ID_DOC = string.Empty; // '-- ID della GARA
    string g_id_PDA = string.Empty;
    string g_SQLfilter = string.Empty;
    string OPERATION = string.Empty;
    string cfRapLeg = string.Empty;
    string strSQL = string.Empty;
    string FILE_ALLEGATO = string.Empty;

    var sqlParams = new Dictionary<string, object?>();

    //'-- init
    vbTab = "    ";

    string SOVRASCR = "true";

    //'-- ACCOUNT DI LOGIN MOMENTANEAMENTE CABLATO PER TEST E COLLAUDO

    //'RUP_Login = "RSOLSS70C49B034J"
    //'RUP_Pwd   = "qwerty"
    //'CF_Ente   = "91252510374"

    //'-- id del documento di richiesta sitar
    g_ID_DOC = GetParamURL(Request.QueryString.ToString(), "IDDOC");
    validate("IDDOC", g_ID_DOC, TIPO_PARAMETRO_INT, 0, "", 1, HttpContext, session);

    //'-- recupero l'elenco dei lotti dalla gara
    TSRecordSet rs_pwd = new TSRecordSet();
    TSRecordSet rsEsiti = new TSRecordSet();
    TSRecordSet rs_Lotti = new TSRecordSet();
    TSRecordSet rs_Lotti_PDA = new TSRecordSet();
    TSRecordSet rs_Gara = new TSRecordSet();
    TSRecordSet rs_ComAggiudic = new TSRecordSet();
    TSRecordSet rs_Aziende = new TSRecordSet();
    TSRecordSet rs_RapLeg = new TSRecordSet();

    sqlParams.Add("@ID_DOC", CInt(g_ID_DOC));
    rs_Gara = GetRS("select * from SITAR_XML_DATI_GARA where idHeader = @ID_DOC", sqlParams);
    rs_Gara.MoveFirst();

    RUP_Login = CStr(rs_Gara["CFTEC1"]);
    RUP_CF = CStr(rs_Gara["CFTEC1"]);

    sqlParams.Clear();
    sqlParams.Add("@RUP_Login", RUP_Login);
    rs_pwd = GetRS("select dbo.OCP_getPasswordWS(@RUP_Login) as account", sqlParams);
    rs_pwd.MoveFirst();

    string sitar_account = CStr(rs_pwd["account"]);
    string[] arr = sitar_account.Split("@@@");

    //string SITAR_LOGIN = arr[0];           
    //string SITAR_PASSWORD = arr[1];

    RUP_Login = arr[0];                       // ??
    RUP_Pwd = arr[1];                         // ??

    CF_Ente = CStr(rs_Gara["CFEIN"]);

    rs_Lotti = GetRS("select *  from SITAR_XML_LISTA_LOTTI with(nolock) where idHeader = @ID_DOC order by idRiga", sqlParams);

    response.Write(@"<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:bean='http://beans.ws.vigilanza.sil.eldasoft.it'>
   <soapenv:Header/>
   <soapenv:Body>
      <bean:istanziaGara>
         <bean:login>
			<bean:login>");
    response.Write(RUP_Login);
    response.Write($@"</bean:login>
			<bean:password>{RUP_Pwd}</bean:password>
		</bean:login>
        <bean:garaLotti>
			<bean:testata>
				<bean:CFEIN>{CF_Ente}</bean:CFEIN>
				<bean:SOVRASCR>{SOVRASCR}</bean:SOVRASCR>
			</bean:testata>
			<bean:oggettoXML>	
				<![CDATA[
    <bean:richiestaSincrona_IstanzaGara test='false' xmlns:bean='http://beans.vigilanza.sil.eldasoft.it'>
	<bean:Gara>");

    response.Write(addOptionalTag(CStr(rs_Gara["W3OGGETTO1"]), "bean:W3OGGETTO1"));
    response.Write(addOptionalTag(CStr(rs_Gara["W3IDGARA"]), "bean:W3IDGARA"));
    response.Write(addOptionalTag(CStr(rs_Gara["W3I_GARA"]), "bean:W3I_GARA"));
    response.Write(addOptionalTag(CStr(rs_Gara["W3DGURI"]), "bean:W3DGURI"));

    response.Write(addOptionalTag(CStr(rs_Gara["W3DSCADB"]), "bean:W3DSCADB"));

    response.Write(addOptionalTag(CStr(rs_Gara["W9GAMOD_IND"]), "bean:W9GAMOD_IND"));

    response.Write(addOptionalTag(CStr(rs_Gara["W9GAFLAG_ENT"]), "bean:W9GAFLAG_ENT"));

    response.Write(addOptionalTag(CStr(rs_Gara["W3TIPOAPP"]), "bean:W3TIPOAPP"));

    response.Write(addOptionalTag(CStr(rs_Gara["W9GADURACCQ"]), "bean:W9GADURACCQ"));
    response.Write(addOptionalTag(CStr(rs_Gara["W3FLAG_SA"]), "bean:W3FLAG_SA"));

    response.Write(addOptionalTag(CStr(rs_Gara["W3ID_TIPOL"]), "bean:W3ID_TIPOL"));
    response.Write(addOptionalTag(CStr(rs_Gara["W9GASTIPULA"]), "bean:W9GASTIPULA"));

    response.Write(addOptionalTag(CStr(rs_Gara["W9GADPUBB"]), "bean:W9GADPUBB"));
    response.Write(addOptionalTag(CStr(rs_Gara["W9GACAM"]), "bean:W9GACAM"));
    response.Write(addOptionalTag(CStr(rs_Gara["W9SISMA"]), "bean:W9GASISMA"));

    response.Write(@"<bean:rup>");

    response.Write(addOptionalTag(RUP_CF.ToUpper(), "bean:CFTEC1"));
    response.Write(addOptionalTag(CStr(rs_Gara["COGTEI"]), "bean:COGTEI"));
    response.Write(addOptionalTag(CStr(rs_Gara["NOMETEI"]), "bean:NOMETEI"));
    response.Write(addOptionalTag(CStr(rs_Gara["INDTEC1"]), "bean:INDTEC1"));
    response.Write(addOptionalTag(CStr(rs_Gara["NCITEC1"]), "bean:NCITEC1"));
    response.Write(addOptionalTag(CStr(rs_Gara["LOCTEC1"]), "bean:LOCTEC1"));
    response.Write(addOptionalTag(CStr(rs_Gara["PROTEC"]), "bean:PROTEC"));
    response.Write(addOptionalTag(CStr(rs_Gara["CAPTEC1"]), "bean:CAPTEC1"));
    response.Write(addOptionalTag(CStr(rs_Gara["G_CITTECI"]), "bean:G_CITTECI"));
    response.Write(addOptionalTag(CStr(rs_Gara["FAXTEC1"]), "bean:FAXTEC1"));
    response.Write(addOptionalTag(CStr(rs_Gara["G_EMATECI"]), "bean:G_EMATECI"));

    response.Write(@"</bean:rup>");

    rs_Lotti.MoveFirst();

    //'-- Ciclo sui lotti
    while(!rs_Lotti.EOF) 
    {
        //'-- Dati del LOTTO
        response.Write(@"<bean:listaLotti>");

        response.Write(addOptionalTag(CStr(rs_Lotti["W3OGGETTO2"]), "bean:W3OGGETTO2"));

        response.Write(addOptionalTag(CStr(rs_Lotti["NumeroLotto"]), "bean:W3NLOTTO"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W9CUIINT"]), "bean:W9CUIINT"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W3CIG"]), "bean:W3CIG"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W3SOMMA_UR"]), "bean:W3SOMMA_UR"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W3I_LOTTO"]), "bean:W3I_LOTTO"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W3I_ATTSIC"]), "bean:W3I_ATTSIC"));

        response.Write(addOptionalTag(CStr(rs_Lotti["W3CPV"]), "bean:W3CPV"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W3ID_SCEL2"]), "bean:W3ID_SCEL2"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W3ID_CATE4"]), "bean:W3ID_CATE4"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W3MANOLO"]), "bean:W3MANOLO"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W3TIPO_CON"]), "bean:W3TIPO_CON"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W3MOD_GAR"]), "bean:W3MOD_GAR"));

        response.Write(addOptionalTag(CStr(rs_Lotti["W3LUOGO_IS"]), "bean:W3LUOGO_IS"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W3LUOGO_NU"]), "bean:W3LUOGO_NU"));
        response.Write(addOptionalTag(CStr(rs_Lotti["W3ID_TIPO"]), "bean:W3ID_TIPO"));

        if(!string.IsNullOrEmpty(CStr(rs_Lotti["W3ID_APP04"]))) 
        {
            response.Write(@"<bean:listaModalitaAcquisizioneFS>
				<bean:W3ID_APP04>" + encodeXML(CStr( rs_Lotti["W3ID_APP04"])) + @"</bean:W3ID_APP04>
			</bean:listaModalitaAcquisizioneFS>");
        }

        if(!string.IsNullOrEmpty(CStr(rs_Lotti["W3ID_APP05"]))) 
        {
            response.Write(@"<bean:listaTipologiaLavoro>
				<bean:W3ID_APP05>" + encodeXML(CStr(rs_Lotti["W3ID_APP05"])) + @"</bean:W3ID_APP05>
			</bean:listaTipologiaLavoro>");
        }

        response.Write("</bean:listaLotti>");

        rs_Lotti.MoveNext();
    }

    response.Write(@"<bean:pubblicitaGara>");

    response.Write(addOptionalTag(CStr(rs_Gara["W3GUCE1"]), "bean:W3GUCE1"));
    response.Write(addOptionalTag(CStr(rs_Gara["W3GURI1"]), "bean:W3GURI1"));
    response.Write(addOptionalTag(CStr(rs_Gara["W3ALBO1"]), "bean:W3ALBO1"));
    response.Write(addOptionalTag(CStr(rs_Gara["W3NAZ1"]), "bean:W3NAZ1"));
    response.Write(addOptionalTag(CStr(rs_Gara["W3REG1"]), "bean:W3REG1"));

    response.Write(@"<bean:W3PROFILO1>" + encodeXML(CStr(rs_Gara["W3PROFILO1"])) + @"</bean:W3PROFILO1>
			<bean:W3MIN1>" + encodeXML(CStr(rs_Gara["W3MIN1"])) + @"</bean:W3MIN1>
    <bean:W3OSS1>" + encodeXML( CStr(rs_Gara["W3OSS1"])) + @"</bean:W3OSS1>
		</bean:pubblicitaGara>

		
		<bean:centroDiCosto>
			<bean:W9CCCODICE>" + encodeXML(CStr(rs_Gara["W9CCCODICE"])) + @"</bean:W9CCCODICE>
			<bean:W9CCDENOM>" + encodeXML(CStr( rs_Gara["W9CCDENOM"])) + @"</bean:W9CCDENOM>		
		</bean:centroDiCosto>

	
	</bean:Gara>
    </bean:richiestaSincrona_IstanzaGara>            	
                    ]]>
                </bean:oggettoXML>
            </bean:garaLotti>
        </bean:istanziaGara>
    </soapenv:Body>
    </soapenv:Envelope>");
}
@Html.Raw(response.Out())