@page "/CustomDoc/getDatiFromPID.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.verificaBrowserModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.trace_in_log_utenteModel;
@using static eProcurementNext.Razor.Pages.CustomDoc.getDatiFromPIDModel;
@using Microsoft.VisualBasic;
@model eProcurementNext.Razor.Pages.CustomDoc.getDatiFromPIDModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
}
@{
	string pid = CStr(GetParamURL(Request.QueryString.ToString(), "pid"));

	//'*******************************************
	//'*****  VALIDAZIONE DELL'INPUT UTENTE  *****
	//'*******************************************

	validate("pid", pid.Replace(":", ""), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 1, HttpContext, session);
	var sqlParams = new Dictionary<string, object?>();
    sqlParams.Add("@pid", pid);
	string strSql = "select denominazione, isnull(sorgente,'') as sorgente from Document_NoTIER_Destinatari with(nolock) where bDeleted = 0 and ID_PEPPOL = @pid";

	string strOUT = string.Empty;
	string ragSoc = string.Empty;
	string sorgente = string.Empty;
	try
	{
		TSRecordSet? rs = cdf.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, sqlParams);
		if (rs is not null && rs.RecordCount > 0)
		{
			rs.MoveFirst();
			ragSoc = CStr(rs["denominazione"]);

			sorgente = CStr(rs["sorgente"]);
			//'-- se la sorgente di questo destinatario non è un documento peppol non permettiamo la modifica della ragione sociale
			if (sorgente.ToUpper() != "OE")
			{
				ragSoc = $"{ragSoc}@@@READONLY";
			}
		}
		else
		{
			ragSoc = "NOT_FOUND";
		}
		strOUT = $"1#{ragSoc}";
	}
	catch(Exception ex)
	{
		strOUT = $"0#{ex.Message}";
	}
	htmlToReturn.Write(strOUT);
}
@Html.Raw(htmlToReturn.Out())