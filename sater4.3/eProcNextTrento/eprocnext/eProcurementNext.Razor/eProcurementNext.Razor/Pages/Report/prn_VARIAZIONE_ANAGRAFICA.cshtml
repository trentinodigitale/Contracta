@page "/Report/prn_VARIAZIONE_ANAGRAFICA.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.print_documentModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.Report.prn_VARIAZIONE_ANAGRAFICAModel;
@using Microsoft.VisualBasic;
@model eProcurementNext.Razor.Pages.Report.prn_VARIAZIONE_ANAGRAFICAModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
	objDoc = PrintDocument(session, htmlToReturn, HttpContext,Response,Request);//PrintDocument ok
	var SqlParameters = new Dictionary<string, object?>();
	htmlToReturn.Write($@"
	<html>
	<head>");

	addMetaTag(htmlToReturn);

	htmlToReturn.Write($@"</head>

	<body style=""margin-left:50px; margin-right:50px; margin-top:10px; margin-bottom:10px"">


	<table height=""100%"" width=""100%"" border=""0"" style=""height: 1390px;"">

		<tr>
			<td align=""center""> 

				<table  width=""100%"" style=""margin-top:0px"" align=""center"">
					<tr>
						<td style=""border:0px;"" align=""center"">
							<table style=""font-weight:bold; align:center"">
								<tr>
									<td align=""center"" style=""border:0px; align:center; vertical-align=middle;"">


										<tr><td height=""50px"" align=""center"" valign=""top"" >");

	string imgHeader = ApplicationCommon.CNV("HEADER_STAMPE");
	if( imgHeader.Contains("???", StringComparison.Ordinal))
	{
		htmlToReturn.Write($@"<img height=""50px"" src=""logo_new.gif"" border=""0"" alt="""+ApplicationCommon.CNV("ALT LOGO")+$@""" />");
	}
	else
	{
		htmlToReturn.Write(imgHeader);
	}
	htmlToReturn.Write($@"</td>
						</tr>

					</td>
				</tr>
				<tr>
					<td>&nbsp;</td>
				</tr>
				<tr>
					<td style=""font-size:18px"">" +
						ApplicationCommon.CNV("HEADER_VARIAZIONE_ANAGRAFICA_FORNITORE") + $@"
					</td>
				</tr>
			</table>
		</td>
	</tr>
	</table>

	</td>
	</tr>

	<tr>

	<td height=""100%"" align=""top"" valign=""top"">

				<br/><br/><br/><br/><br/>");

	string id = GetParamURL(Request.QueryString.ToString(), "IDDOC");
	validate("IDDOC", id, TIPO_PARAMETRO_INT, SOTTO_TIPO_VUOTO, "", 1, HttpContext, session);
	SqlParameters.Add("@id", CInt(id));
	string strSql = $@"Select c.idpfu,p.pfuE_Mail,p.pfulogin as codiceutente ,p.pfuNomeUtente + ' ' + p.pfuCognome as Responsabile , pfuCodiceFiscale, pfuRuoloAziendale , aziRagioneSociale , dsctesto as FormaSoc ,  vatValore_FT as azicodicefiscale , aziPartitaIVA ,aziE_Mail,aziIndirizzoLeg + ' - ' + aziCAPLeg + ' ' + aziLocalitaLeg + ' (' + aziProvinciaLeg +') ' as aziIndirizzoLeg {Environment.NewLine}
								from ctl_doc c { Environment.NewLine}
									inner join profiliUtente p on c.idpfu=p.idpfu {Environment.NewLine}
									inner join aziende a on a.idazi=p.pfuIdAzi {Environment.NewLine}
									inner join DM_Attributi DM on DM.lnk=a.IdAzi and dztNome='codicefiscale' {Environment.NewLine}
									left join tipidatirange tdr on  tdr.tdridtid = 131 and  tdr.tdrdeleted=0 and tdr.tdrCodice = a.aziIdDscFormaSoc {Environment.NewLine}
									left join descsI DS on DS.IdDsc=tdr.tdriddsc {Environment.NewLine}
								where c.id = @id";

	TSRecordSet rs = cdf.GetRSReadFromQuery_(strSql, ApplicationCommon.Application["ConnectionString"], SqlParameters);

	if (rs.RecordCount > 0)
	{
		rs.MoveFirst();
	}
	else
	{
		Response.StatusCode = 500;
		htmlToReturn.Write("500 Errore record non trovato");
		throw new ResponseEndException(htmlToReturn.Out(), Response, "");
	}

	string codiceutente = CStr(rs["codiceutente"]);
	string nomeResponsabile = HtmlEncode(CStr(rs["codiceutente"]));
	string pfuCodiceFiscale = CStr(rs["pfuCodiceFiscale"]);
	string pfuRuoloAziendale = CStr(rs["pfuRuoloAziendale"]);
	string pfuE_Mail = CStr(rs["pfuE_Mail"]);
	string aziRagioneSociale = CStr(rs["aziRagioneSociale"]);
	string FormaSoc = CStr(rs["FormaSoc"]);
	string azicodicefiscale = CStr(rs["azicodicefiscale"]);
	string aziPartitaIVA = CStr(rs["aziPartitaIVA"]);
	string aziE_Mail = CStr(rs["aziE_Mail"]);
	string aziIndirizzoLeg = CStr(rs["aziIndirizzoLeg"]);

	htmlToReturn.Write($@"<table width=""100%"">

					<tr>

						<td colspan=""2"" align=""right"">
							<strong>Codice Utente:</strong>" + codiceutente + $@"<br/>
						</td>

					</tr>		

				</table>

				<br/><br/>
				<table width=""100%"">
				<tr>
					<td colspan=""1"" align=""left"">
						<strong>Il sottoscritto</strong>
					</td>
				</tr>

				<tr>				
					<td colspan=""2"" align=""left"">
						<strong>Nome e Cognome:</strong>" + nomeResponsabile + $@"<br/>
					</td>

				</tr>	
				<tr>				
					<td colspan=""2"" align=""left"">
						<strong>Codice fiscale:</strong>" + pfuCodiceFiscale + $@"<br/>
					</td>

				</tr>
				<tr>				
					<td colspan=""2"" align=""left"">
						<strong>E-mail:</strong>" + pfuE_Mail + $@"<br/>
					</td>

				</tr>
				<tr>				
					<td colspan=""2"" align=""left"">
						<strong>Qualifica:</strong>" + pfuRuoloAziendale + $@"<br/>
					</td>

				</tr>
				<tr>				
					<td colspan=""2"" align=""left"">
						&nbsp;
	<br/>
					</td>

				</tr>
				<tr>				
					<td colspan=""2"" align=""left"">
						<strong>Ragione sociale:</strong>" + aziRagioneSociale + $@"<br/>
					</td>

				</tr>
				<tr>				
					<td colspan=""2"" align=""left"">
						<strong>Forma giuridica:</strong>" + FormaSoc + $@"<br/>
					</td>

				</tr>
				<tr>				
					<td colspan=""2"" align=""left"">
						<strong>Codice Fiscale:</strong>" + azicodicefiscale + $@"<br/>
					</td>

				</tr>");
	var NASCONDO_aziPartitaIVA = Get_Func_Property("prn_VARIAZIONE_ANAGRAFICA.asp", "aziPartitaIVA", "HIDE", "0", CInt("-1"));
	if (CStr(NASCONDO_aziPartitaIVA) == "0")
	{
		htmlToReturn.Write($@"
                    <tr>				
					<td colspan=""2"" align=""left"">
						<strong>Partita IVA:</strong>" + aziPartitaIVA + $@"<br/>
					</td>

				</tr>");
	}


	htmlToReturn.Write($@"<tr>				
					<td colspan=""2"" align=""left"">
						<strong>Con sede in:</strong>" + aziIndirizzoLeg + $@"<br/>
					</td>

				</tr>

				<tr>				
					<td colspan=""2"" align=""left"">
						<strong>PEC:</strong>" + aziE_Mail + $@"<br/>
					</td>

				</tr>


				</table>
				<strong><center>COMUNICA</center></strong>
				<p>di aver effettuato le modifiche inerenti i dati anagrafici dell’operatore economico di cui sopra come di seguito indicato:</p>

				<table width=""100%"">
					<tr>				
						<td colspan=""2"" align=""left"">
							<strong>Ragione sociale:</strong>" + DOC_FieldTecnical("TESTATA", "aziRagioneSociale") + $@"<br/>
						</td>

					</tr>
					<tr>				
						<td colspan=""2"" align=""left"">
							<strong>Forma giuridica:</strong>" + DOC_Field("TESTATA", "aziIdDscFormaSoc") + $@"<br/>
						</td>

					</tr>
					<tr>				
						<td colspan=""2"" align=""left"">
							<strong>Con sede in:</strong>" + DOC_FieldTecnical("TESTATA", "aziIndirizzoLeg") + " - " + DOC_FieldTecnical("TESTATA", "aziCAPLeg") + " " + DOC_FieldTecnical("TESTATA", "aziLocalitaLeg") + " (" + DOC_FieldTecnical("TESTATA", "aziProvinciaLeg") + $@")
			<br />
						</td>

					</tr>
					<tr>				
						<td colspan=""2"" align=""left"">
							<strong>PEC:</strong>" + DOC_FieldTecnical("TESTATA", "aziE_Mail") + $@"<br/>
						</td>

					</tr>
				</table>");

	if (Permesso_modifica_classi(DOC_FieldTecnical("DOCUMENT", "Idpfu")) == "ATTIVO") {
		htmlToReturn.Write($@"<p>Classificazioni</p>
					<p>Classe di Iscrizione:</p>");

		string stringa = DOC_FieldTecnical("CLASSI", "ClasseIscriz");
		string[] arr = stringa.Split("###");

		for (int i = 1; i < arr.Length - 1; i++)
		{
			htmlToReturn.Write($@"<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + getClasseIscrizione(arr[i]) + "</b><br/>");
		}

		htmlToReturn.Write($@"<p>Categoria SOA:</p>");

		string stringas = DOC_FieldTecnical("CLASSI", "ClassificazioneSOA");
		string[] arrs = stringas.Split("###");

		for (int i = 1; i < arrs.Length - 1; i++)
		{
			htmlToReturn.Write($@"<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + getClassificazioneSOA(arrs[i]) + "</b><br/>");
		}
	}

	htmlToReturn.Write($@"<br/><br/><br/>

				<table width=""100%"">

					<tr>

						<td align=""right"">" + 
							nomeResponsabile + $@"<br/>
							Firmato digitalmente
						</td>

					</tr>		

				</table>

			</td>
		</tr>

	</table>

	</body>
	</html>");

	//'-- Testo aggiunto in automatico per liberare la memoria dei nuovi report
	try
	{
		FreeMemDocument(session);
	}
	catch
	{

	}

	string Permesso_modifica_classi(long User){

		//on error resume next

		string ret;
		SqlParameters.Clear();
		SqlParameters.Add("@idpfu",User);
		TSRecordSet rs;
		ret = "NON_ATTIVO";
		try
		{
			rs = GetRS(" SELECT  * from ProfiliUtente where IdPfu=@idpfu and substring(pfuFunzionalita,309,1)='1' ", SqlParameters);
			rs.MoveFirst();
			if (rs.RecordCount > 0)
			{
				ret = "ATTIVO";
			}
		}
		catch
		{

		}
		return ret;
	}

	string getClasseIscrizione(string cod )
	{
		//on error resume next
		try
		{
			SqlParameters.Clear();
			SqlParameters.Add("@cod", cod);
			TSRecordSet rs = GetRS("SELECT  DMV_DescML  from ClasseIscriz where DMV_COD=@cod", SqlParameters);
			rs.MoveFirst();
			return CStr(rs["DMV_DescML"]);
		}
		catch
		{
			return string.Empty;
		}
	}

	string getClassificazioneSOA(string cod) 
	{
		//on error resume next
		try
		{
			SqlParameters.Clear();
			SqlParameters.Add("@cod", cod);
			TSRecordSet rs = GetRS("SELECT DMV_DescML from GerarchicoSOA where dmv_cod=@cod", SqlParameters);
			rs.MoveFirst();
			return CStr(rs["DMV_DescML"]);
		}
		catch
		{
			return string.Empty;
		}
	}
}
@Html.Raw(htmlToReturn.Out())