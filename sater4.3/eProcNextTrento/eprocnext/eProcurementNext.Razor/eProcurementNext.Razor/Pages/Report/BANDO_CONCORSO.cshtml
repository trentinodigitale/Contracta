@page "/Report/BANDO_CONCORSO.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using Microsoft.VisualBasic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.print_documentModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.DocumentPermissionModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.masterPageToolsModel
@model eProcurementNext.Razor.Pages.Report.BANDO_CONCORSOModel
@{
    Layout = ConfigurationServices.GetKey("LayoutVersion", "_masterPage");
}
@using static eProcurementNext.Session.SessionMiddleware
@{
    CommonDbFunctions cdf = new();
    LoadSession(HttpContext, session);
    EprocResponse htmlToReturn = new();
    //QUANDO NEL VECCHIO CODICE MANCAVA L'INCLUDE DELLA PRINT DOCUMENT, QUESTO METODO NON VA CHIAMATO. ALTRIMENTI RALLENTIAMO MOLTO L'APERTURA
    //objDoc = PrintDocument(session, htmlToReturn, Context, Context.Response, Context.Request);
}
@{
    //'*******************************************
    //'*****  VALIDAZIONE DELL'INPUT UTENTE  *****
    //'*******************************************
    validate("IDDOC", GetParamURL(Request.QueryString.ToString(), "IDDOC"), TIPO_PARAMETRO_NUMERO, CInt(""), "", 1, HttpContext, session);
    validate("DOCUMENT", GetParamURL(Request.QueryString.ToString(), "DOCUMENT").Replace(".", "_"), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);
    validate("TYPEDOC", GetParamURL(Request.QueryString.ToString(), "TYPEDOC").Replace(".", "_"), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);

    object getAziRagioneSociale(object azienda)
    {
        //'on error resume next
        string ret = string.Empty;
        if (!string.IsNullOrEmpty(CStr(azienda)))
        {
            var sqlParams = new Dictionary<string, object?>();
            sqlParams.Add("@azienda", CInt(azienda));
            TSRecordSet rsAzi = cdf.GetRSReadFromQuery_("select aziRagioneSociale from aziende with(nolock) where idazi = @azienda", ApplicationCommon.Application.ConnectionString, parCollection: sqlParams);
            if (rsAzi.RecordCount > 0)
            {
                ret = CStr(rsAzi["aziRagioneSociale"]);
            }
        }

        return ret;
    }

    string SogliaAllegatiSuperata(string cod)
    {
        string strToReturn;
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        TSRecordSet rs = GetRS("Select idrow from ctl_doc_value with (nolock) where idheader=@cod and DSE_ID='SOGLIA_ALLEGATI' and DZT_NAME='MAX_SOGLIA_ALLEGATI_SUPERATA' and value='YES'", sqlParams);

        strToReturn = "NO";

        if (rs is not null)
        {

            if (rs.RecordCount > 0)
            {
                rs.MoveFirst();
                strToReturn = "YES";
            }
            else
            {
                strToReturn = "NO";
            }
        }

        return strToReturn;
    }

    //'--restituisce la forma visuale di un attributo a dominio
    dynamic DOC_FIELD_Dominio(string Dominio, dynamic Valore)
    {
        dynamic dynToReturn;
        //on error goto 0

        dynToReturn = Valore;

        //dim objLib
        eProcurementNext.BizDB.LibDBDomains objLib = new();//createobject("CTLDB.Lib_dbDomains")

        //dim objdom
        var objdom = objLib.GetFilteredDomExt(CStr(Dominio), CStr(session["strSuffLing"]), CLng(session["idPfu"]), CStr(""), CInt(0), ApplicationCommon.Application.ConnectionString, session);

        var DomElem = objdom.FindCode(CStr(Valore));
        dynToReturn = DomElem.Desc;
        return dynToReturn;
    }

    dynamic DOC_FIELD_Date(dynamic Valore)
    {
        dynamic dynToReturn;
        dynToReturn = Valore;

        Fld_Date objFieldData = new();
        objFieldData.Init(6, "Data", Valore, null, null, "dd/mm/yyyy hh:mm:ss", false);
        dynToReturn = objFieldData.TxtValue();
        return dynToReturn;
    }

    object Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(string cod)
    {
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        TSRecordSet rs = GetRS("select  dbo.Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(@cod) as valore", sqlParams);

        if (rs.RecordCount > 0)
        {
            return CStr(rs["valore"]);
        }
        else
        {
            return string.Empty;
        }
    }

    string PrintDataORA(string strDataOda)
    {
        //'aggiunge i secondi se non presenti
        if (strDataOda.Length == 16)
        {
            strDataOda = $"{strDataOda}:00";
        }
        return $"{Left(strDataOda, 10)} {ApplicationCommon.CNV("ore")} {Right(strDataOda, 8)}";
    }

    object getDataTermineQuesitiOriginale(string cod)
    {
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        TSRecordSet rs = GetRS("Select  convert(varchar(10),cast(value as datetime),103)+' '+convert(varchar(8),cast(value as datetime),114)  as DataOriginale from ctl_doc_value with(nolock) where idheader=( Select  min(c2.id) from ctl_doc c with(nolock)  inner join  ctl_doc c2 with(nolock)  on c2.linkedDoc=c.id and c2.tipodoc in ( 'RETTIFICA_GARA','PROROGA_GARA','RIPRISTINO_GARA') where c.id=@cod) and DSE_ID='TESTATA' and Dzt_name='OLD_DataTermineQuesiti' ", sqlParams);
        if (rs.RecordCount > 0)
        {
            rs.MoveFirst();
            return CStr(rs["DataOriginale"]);
        }
        else
        {
            return string.Empty;
        }
    }

    object getDataTermineRispostaQuesitiOriginale(string cod)
    {
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        TSRecordSet rs = GetRS("Select  convert(varchar(10),cast(value as datetime),103)+' '+convert(varchar(8),cast(value as datetime),114)  as DataOriginale from ctl_doc_value with(nolock) where idheader=( Select  min(c2.id) from ctl_doc c with(nolock)  inner join  ctl_doc c2 with(nolock)  on c2.linkedDoc=c.id and c2.tipodoc in ( 'RETTIFICA_GARA','PROROGA_GARA','RIPRISTINO_GARA') where c.id=@cod) and DSE_ID='TESTATA' and Dzt_name='OLD_DataTermineRispostaQuesiti' ", sqlParams);

        if (rs.RecordCount > 0)
        {
            rs.MoveFirst();
            return CStr(rs["DataOriginale"]);
        }
        else
        {
            return string.Empty;
        }
    }

    object getDataScadenzaOfferta(string cod)
    {
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        TSRecordSet rs = GetRS("Select  convert(varchar(10),cast(value as datetime),103)+' '+convert(varchar(8),cast(value as datetime),114)  as DataOriginale from ctl_doc_value with(nolock) where idheader=( Select  min(c2.id) from ctl_doc c with(nolock)  inner join  ctl_doc c2 with(nolock)  on c2.linkedDoc=c.id and c2.tipodoc in ( 'RETTIFICA_GARA','PROROGA_GARA','RIPRISTINO_GARA')  where c.id=@cod) and DSE_ID='TESTATA' and Dzt_name='OLD_DataPresentazioneRisposte' ", sqlParams);

        if (rs.RecordCount > 0)
        {
            rs.MoveFirst();
            return CStr(rs["DataOriginale"]);
        }
        else
        {
            return string.Empty;
        }
    }

    object getDataAperturaOfferte(string cod)
    {
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        TSRecordSet rs = GetRS("Select  convert(varchar(10),cast(value as datetime),103)+' '+convert(varchar(8),cast(value as datetime),114)  as DataOriginale from ctl_doc_value with(nolock) where idheader=( Select  min(c2.id) from ctl_doc c with(nolock) inner join  ctl_doc c2 with(nolock) on c2.linkedDoc=c.id and c2.tipodoc in ( 'RETTIFICA_GARA','PROROGA_GARA','RIPRISTINO_GARA')  where c.id=@cod) and DSE_ID='TESTATA' and Dzt_name='OLD_DataSeduta' ", sqlParams);

        if (rs.RecordCount > 0)
        {
            rs.MoveFirst();
            return CStr(rs["DataOriginale"]);
        }
        else
        {
            return string.Empty;
        }
    }

    string PresenzaRevoca(string cod)
    {
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        TSRecordSet rs = GetRS("Select id from CTL_DOC with(nolock),ctl_doc_allegati with(nolock) where idheader=id and Tipodoc='PDA_COMUNICAZIONE_GENERICA' and StatoFunzionale='Inviato' and jumpcheck = '0-REVOCA_BANDO' and LinkedDoc=@cod", sqlParams);

        if (rs.RecordCount > 0)
        {// then
            return "si";
        }
        else
        {
            return "no";
        }
    }

    string PresenzaSospensione(string cod)
    {
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        TSRecordSet rs = GetRS("Select id from CTL_DOC with(nolock),ctl_doc_allegati with(nolock) where idheader=id and Tipodoc='PDA_COMUNICAZIONE_GENERICA' and StatoFunzionale='Inviato' and jumpcheck = '0-SOSPENSIONE_GARA' and LinkedDoc=@cod", sqlParams);
        //'rs.moveFirst

        if (rs.RecordCount > 0)
        {// then
            return "si";
        }
        else
        {
            return "no";
        }
    }

    string PresenzaRevocaLotti(string cod)
    {
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        TSRecordSet rs = GetRS("Select top 1 sign_attach from CTL_DOC with(nolock) where Tipodoc='BANDO_REVOCA_LOTTO' and StatoFunzionale='Inviato' and LinkedDoc=@cod", sqlParams);
        //'rs.moveFirst

        if (rs.RecordCount > 0)
        {// then
            return "si";
        }
        else
        {
            return "no";
        }
    }

    string PresenzaProroga(string cod)
    {
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        TSRecordSet rs = GetRS("Select id from CTL_DOC with(nolock) where Tipodoc='PROROGA_GARA' and StatoFunzionale='Inviato' and jumpcheck = 'BANDO_GARA' and LinkedDoc=@cod", sqlParams);
        //'rs.moveFirst

        if (rs.RecordCount > 0)
        {// then
            return "si";
        }
        else
        {
            return "no";
        }
    }

    string PresenzaRettifica(string cod)
    {
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        TSRecordSet rs = GetRS("Select id from CTL_DOC with(nolock) where Tipodoc='RETTIFICA_GARA' and StatoFunzionale='Inviato' and jumpcheck = 'BANDO_CONCORSO' and LinkedDoc=@cod", sqlParams);
        //'rs.moveFirst

        if (rs.RecordCount > 0)
        {// then
            return "si";
        }
        else
        {
            return "no";
        }
    }

    //'--recupero parametri dal chiamante
    string TypeDoc = GetParamURL(Request.QueryString.ToString(), "TYPEDOC");
    string idDoc = GetParamURL(Request.QueryString.ToString(), "IDDOC");

    string docToValidate = TypeDoc;

    if (string.IsNullOrEmpty(docToValidate))
    {
        docToValidate = CStr(GetParamURL(Request.QueryString.ToString(), "DOCUMENT"));
    }

    string extraParam = "";

    //'--controllo permesso apertura documento
    DocPermission(HttpContext, GetParamURL(Request.QueryString.ToString(), "IDDOC"), CStr(docToValidate), extraParam, session, htmlToReturn, Request, Response);

    //'--recupero in modo diretto le info dalla base dati
    TSRecordSet RsBando;
    string strSQLBando;

    var sqlParams = new Dictionary<string, object?>();
    sqlParams.Add("@idDoc", CInt(idDoc));
    strSQLBando = @"select B.tipodoc, B.titolo, B2.Body as DescrizioneSDA,B.ProtocolloRiferimento,ProceduraGara,TipoBandoGara,ISNULL(ModalitadiPartecipazione,'') as ModalitadiPartecipazione,DataScadenzaOfferta, isnull( DataRiferimentoInizio , '' )  as DataRiferimentoInizio,B.DataScadenza,B.StatoFunzionale,B.fascicolo,B.Azienda,B.Body,B.Note,B.ProtocolloGenerale,
                    TipoBando,dgrN,dgrDel,DataPresentazioneRisposte,RichiestaQuesito,isnull(TipoSceltaContraente,'') as TipoSceltaContraente,CIG,ImportoBaseAsta,TipoIVA,CriterioAggiudicazioneGara,TipoAppaltoGara,
                    DataTermineQuesiti,DataTermineRispostaQuesiti,Appalto_Verde,isnull(Motivazione_Appalto_Verde,'') as Motivazione_Appalto_Verde,
                    Acquisto_Sociale, isnull(Motivazione_Acquisto_Sociale,'') as Motivazione_Acquisto_Sociale,DataAperturaOfferte,isnull(TipoProceduraCaratteristica,'') as TipoProceduraCaratteristica, isnull(DataRiferimentoFine,'') as DataRiferimentoFine
                    ,isnull(Pfunome,'') as UserRup ,ISNULL(bd.Comunicazione_Iniziativa,'no')   as Comunicazione_Iniziativa , isnull(AL.value,'') as AltriRequisiti,isnull(AS1.value,'') as SitoIstituzionale ,isnull(AS2.value,'') as AltroSitoWeb
                    ,isnull(D.DMV_DescML,'') as DirezioneEspletante
                    from ctl_doc B with (nolock) inner join document_bando BD with (nolock) on B.id=BD.idheader
    	                left join ctl_doc_value BV with (nolock) on BV.idheader=BD.idheader and BV.DSE_ID='InfoTec_comune' and BV.dzt_name='UserRUP'
    	                left join ctl_doc_value AL with (nolock) on AL.idheader=BD.idheader and AL.DSE_ID='InfoTec_3comune' and AL.dzt_name='AltriRequisiti'
    	                left join ctl_doc_value AS1 with (nolock) on AS1.idheader=BD.idheader and AS1.DSE_ID='InfoTec_2comune' and AS1.dzt_name='SitoIstituzionale'
    	                left join ctl_doc_value AS2 with (nolock) on AS2.idheader=BD.idheader and AS2.DSE_ID='InfoTec_2comune' and AS2.dzt_name='AltroSitoWeb'
     	                left join profiliutente PU  with(nolock) on PU.idpfu=BV.value
                        left join CTL_DOC B2 with (nolock)  on B2.Id=B.LinkedDoc
                        left join GESTIONE_DOMINIO_DIREZIONE D with (nolock)  on  dmv_cod=DirezioneEspletante
    	            where B.id = @idDoc";

    //'response.write strSQLBando
    //'response.end
    RsBando = GetRS(CStr(strSQLBando), sqlParams);


    if (RsBando.RecordCount > 0)
    {

        RsBando.MoveFirst();

    }
    else
    {
        htmlToReturn.Write($@"errore caricamento bando");

        throw new ResponseEndException(htmlToReturn.Out(), Response, "errore caricamento bando");
    }

    string URL_EXTRA_ATTACH = "../../Report/avvisi_di_revoca.asp,../../Report/avvisi_di_proroga.asp,../../Report/avvisi_di_rettifica.asp";

    string ProceduraGara;
    string TipoBandoGara;
    string alert_sospensione;

    ProceduraGara = CStr(RsBando["ProceduraGara"]);
    TipoBandoGara = CStr(RsBando["TipoBandoGara"]);

    //'ModalitadiPartecipazione = Tradizionale non devo inserire il foglio prodotti nello zip
    //'NON INSERISCO IL FOGLIO PRODOTTI NELLO ZIP NEMMENO PER -- Bando - Ristretta e -- Avviso - Negoziata ( KPF 406784  )
    int B_FOGLIO_EXCEL = 1;
    if (TipoBandoGara == "2" && ProceduraGara == "15477")
    { //'Bando - Ristretta
        B_FOGLIO_EXCEL = 0;
    }

    if ((ProceduraGara == "15478" && TipoBandoGara == "1") || (ProceduraGara == "15583" && (TipoBandoGara == "4" || TipoBandoGara == "5"))) //(TipoBandoGara == "1" && ProceduraGara == "15478")
    {
        //'Avviso - Negoziata
        B_FOGLIO_EXCEL = 0;
    }

    if (CStr(RsBando["ModalitadiPartecipazione"]) != "16307" && B_FOGLIO_EXCEL == 1)
    {
        URL_EXTRA_ATTACH = $"../../Report/CSV_Lotti.asp,{URL_EXTRA_ATTACH}";
    }

    string TipoProceduraCaratteristica;
    string id_doc;
    dynamic utente_corrente;
    string Type_Doc;

    Type_Doc = GetParamURL(Request.QueryString.ToString(), "TYPEDOC");

    id_doc = GetParamURL(Request.QueryString.ToString(), "IDDOC");

    TipoProceduraCaratteristica = CStr(RsBando["TipoProceduraCaratteristica"]).ToUpper();

    dynamic User = session["idPfu"];

    utente_corrente = session["idPfu"];

    //'response.Write cstr("select * from CTL_DOC_Destinatari d with(nolock)  inner join profiliutente p with(nolock)  on pfuidazi = idazi where  p.idpfu = " & USer & " and idheader = " & idDoc )

    dynamic nHideDirezionEspletante(dynamic cod)
    {

        TSRecordSet rs;
        string ModelloTestata;

        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@cod", CInt(cod));
        rs = GetRS("Select MOD_Name from CTL_DOC_SECTION_MODEL with (nolock) where IdHeader=@cod and DSE_ID='testata'", sqlParams);

        ModelloTestata = "BANDO_CONCORSO_TESTATA";

        if (rs is not null)
        {
            if (rs.RecordCount > 0)
            {
                rs.MoveFirst();
                ModelloTestata = CStr(rs["mod_name"]);

            }
        }

        @*set rs = nothing*@

        return Get_Func_Property(ModelloTestata, "DirezioneEspletante", "HIDE", "1", CInt("-1"));
    }

    //'-- verifca quale modello usare per scaricare il foglio da compilare
    //TSRecordSet rsModello;
    //string NomeModello;

    //sqlParams.Clear();
    //sqlParams.Add("@idDoc", CInt(idDoc));
    //rsModello = GetRS("select N_Lotto from BANDO_GARA_CRITERI_VALUTAZIONE_PER_LOTTO where (  CriterioAggiudicazioneGara = '15532' or CriterioAggiudicazioneGara = '25532' or Conformita <> 'no' )  and idBando = @idDoc", sqlParams);

    //if (rsModello.RecordCount > 0)
    //{//then
    //    NomeModello = "_MOD_OffertaINPUT";
    //}
    //else
    //{
    //    NomeModello = "_MOD_Offerta";
    //}

    //'-- verifica se il fornitore sta partecipando
    TSRecordSet rsPartecipante;
    dynamic StatoIscrizione = "";
    sqlParams.Clear();
    sqlParams.Add("@User", CInt(User));
    sqlParams.Add("@idDoc", CInt(id_doc));
    rsPartecipante = cdf.GetRSReadFromQuery_("select isnull(StatoIscrizione,'') as StatoIscrizione1, * from CTL_DOC_Destinatari d with(nolock)  inner join profiliutente p with(nolock) on pfuidazi = idazi where  p.idpfu = @User and idheader = @idDoc", ApplicationCommon.Application.ConnectionString, sqlParams);

    int bPartecipante = 0;
    if (rsPartecipante.RecordCount > 0)
    {// then
        bPartecipante = 1;

        StatoIscrizione = CStr(rsPartecipante["StatoIscrizione1"]);
    }

    //'-- verifica se il fornitore ha inviato l'offerta
    TSRecordSet rsoffertainviata;
    rsoffertainviata = cdf.GetRSReadFromQuery_("select * from CTL_DOC_Destinatari d with(nolock) inner join profiliutente p with(nolock) on pfuidazi = idazi inner join ctl_doc c with(nolock) on D.idheader=c.linkeddoc and c.tipodoc in ('MANIFESTAZIONE_INTERESSE','DOMANDA_PARTECIPAZIONE','OFFERTA') and c.statofunzionale='Inviato' where  p.idpfu = @User and d.idheader = @idDoc", ApplicationCommon.Application.ConnectionString, sqlParams);

    int boffertainviata = 0;
    if (rsoffertainviata.RecordCount > 0)
    {//then
        boffertainviata = 1;
    }

    //'-- verifica accesso seduta virtuale
    TSRecordSet rsSedutaVirtuale;
    sqlParams.Clear();
    sqlParams.Add("@User", CInt(User));
    sqlParams.Add("@idDoc", id_doc);
    rsSedutaVirtuale = cdf.GetRSReadFromQuery_("EXEC SEDUTA_VIRTUALE_VERIFICA_ACCESSO @User, @idDoc", ApplicationCommon.Application.ConnectionString, sqlParams);

    int bVisualizzaSedutaVirtuale;
    bVisualizzaSedutaVirtuale = 0;
    if (rsSedutaVirtuale.RecordCount > 0)
    {// then
        bVisualizzaSedutaVirtuale = 1;
    }

    //'--verifica se il fornitore è indiretto
    //'dim RsIndiretti

    //'strSqlIndiretti ="select p.idpfu from " & _
    //'				" ctl_doc O with(nolock) inner join ctl_doc OP with(nolock) on OP.linkeddoc=O.id and OP.TipoDoc='OFFERTA_PARTECIPANTI' and OP.StatoFunzionale='Pubblicato' " & _
    //'				" inner join 	document_offerta_partecipanti DO with(nolock)  on OP.id=DO.idheader " & _
    //'				" inner join profiliutente p with(nolock) on pfuidazi = DO.idazi and p.idpfu = " & USer & _
    //'				" where O.linkeddoc = " & idDoc & " and O.tipodoc='OFFERTA' and O.statofunzionale='Inviato' "
    //'Response.Write strSqlIndiretti
    //'Response.end
    //'set RsIndiretti = obj.GetRSReadFromQuery( cstr(strSqlIndiretti) , cstr(session("Session")(8)) )

    //'set obj = nothing

    int bIndiretto;
    bIndiretto = 0;
    //'if RsIndiretti.recordcount > 0 then
    //'   bIndiretto = 1
    //'end if

    void drawContent()
    {
        string sSql = string.Empty;
        //'-- verifica se il fornitore sta partecipando
        TSRecordSet rsPartecipante;
        var sqlParams = new Dictionary<string, object?>();
        sqlParams.Add("@User", CInt(User));
        sqlParams.Add("@idDoc", CInt(id_doc));
        rsPartecipante = cdf.GetRSReadFromQuery_("select * from CTL_DOC_Destinatari d with(nolock) inner join profiliutente p with(nolock) on pfuidazi = idazi where  p.idpfu = @User and idheader = @idDoc", ApplicationCommon.Application.ConnectionString, sqlParams);

        int bPartecipante;
        bPartecipante = 0;

        if (rsPartecipante.RecordCount > 0)
        {// then
            bPartecipante = 1;
        }

        //' meccanismo del non letto
        sqlParams.Clear();
        sqlParams.Add("@idDoc", CLng(id_doc));
        sqlParams.Add("@utente_corrente", CInt(utente_corrente));
        sqlParams.Add("@Type_Doc", Type_Doc);
        cdf.Execute("if not exists(select * from CTL_DOC_READ   where id_doc = @idDoc and idpfu=@utente_corrente) begin 	insert into CTL_DOC_READ (DOC_NAME ,id_Doc ,idpfu,data) values (@Type_Doc,@idDoc,@utente_corrente,getdate()) end", ApplicationCommon.Application.ConnectionString, parCollection: sqlParams);

        //' Codice che recuper la Caption del documento e la mette sulla stampa in testa alla pagina
        Caption obj = new Caption();// createobject( "CtlHtml.Caption" )
                                    //set objdb = server.CreateObject("ctldb.clsTabManage")
        TSRecordSet rs;
        dynamic caption = "";
        dynamic Key_Caption = "";
        sqlParams.Clear();
        sqlParams.Add("@idDoc", CInt(idDoc));
        if (CStr(RsBando["tipodoc"]) != "BANDO_SEMPLIFICATO")
        {
            string strsql_caption = @"SET NOCOUNT ON
                        select
                             case when b.TipoProceduraCaratteristica = 'RDO' then 'Richiesta di Offerta'
                                     when b.ProceduraGara = '15477' and b.TipoBandoGara = '2' then 'BandoRistretta'
                                     else
                                         case when b.TipoSceltaContraente = 'ACCORDOQUADRO'
                                             then 'Accordo Quadro'
                                         else
                                             case b.TipoBandoGara
                                                 when '1' then 'Avviso'
                                                 when '3' then 'Invito'
                                                 else 'Bando'
                                             end
                                         end
                                 end as CaptionDoc
                                 into #tmp_caption
                             from Document_bando B with(nolock)	where B.idHeader= @idDoc
                        select ISNULL(M.ML_Description,C.CaptionDoc) as Caption, isnull(M.ML_key,C.CaptionDoc) as Key_Caption from #tmp_caption C left join lib_multilinguismo M with(nolock) on M.ML_KEY=C.CaptionDoc and M.ML_LNG='I' and ML_Context='0'
                        drop table #tmp_caption";

            rs = cdf.GetRSReadFromQuery_(strsql_caption, ApplicationCommon.Application.ConnectionString, sqlParams);
        }
        else
        {
            sSql = "select ISNULL(M.ML_Description,L.DOC_DescML) as Caption, isnull(M.ML_Key,L.DOC_DescML) as Key_Caption from ctl_doc C with(nolock) inner join LIB_Documents L on L.DOC_ID=C.TIPODOC left join lib_multilinguismo M on M.ML_KEY=L.DOC_DescML where C.id=@idDoc";
            rs = cdf.GetRSReadFromQuery_(sSql, ApplicationCommon.Application.ConnectionString, sqlParams);
        }
        if (rs.RecordCount > 0)
        {// then
            rs.MoveFirst();
            caption = CStr(rs["Caption"]);
            Key_Caption = CStr(rs["Key_Caption"]);
        }
        //set objdb = nothing

        if (TipoProceduraCaratteristica == "RFQ")
        {// then
            caption = "RDO";
        }

        if (IsMasterPageNew())
        {
            htmlToReturn.Write($@"
                <table width=""100%"" class=""Caption"" border=""0"" cellspacing=""0"" cellpadding=""0"">
                    <tbody>
                        <tr class=""pageTitle"">
                            <td> " + CStr(caption) + $@" </td>
                        </tr>
                    </tbody>
                </table>
            ");
        }
        else
        {
            htmlToReturn.Write(obj.SetCaption(CStr(caption)));
        }
        //set obj = nothing


        stackUpdateCurrentPosition("report", $"Report/BANDO_CONCORSO.asp?{GetQueryStringFromContext(Request.QueryString)}", Key_Caption, session, HttpContext);

        htmlToReturn.Write($@"

	    <!--SUGGERIMENTI solo sul portale -->
        <div class=""tips"" id=""contenitoresuggerimento"">
  	        <div class=""tipsbar"">
    		    <a href=""#suggerimento"">" + ApplicationCommon.CNV("Nascondi suggerimenti") + $@"</a>
      		    <a href=""#suggerimento"" class=""suggest"">" + ApplicationCommon.CNV("Mostra suggerimenti") + $@"</a>
  	        </div>
  	        <div id=""suggerimento"" class=""tipscontent"">

  	           ");
        //'-- da rivedere in funzione delle caratteristiche di gara, aperta ,ristretta,negoziata,invito ecc..
        htmlToReturn.Write($@"
               " + ApplicationCommon.CNV("Suggerimento_Iscrizione GARA") + $@"


               <br>
	           <br>

            </div>
        </div>

  	    <br>

  	    ");

        if (CStr(RsBando["StatoFunzionale"]).Trim() == "InSospensione" || CStr(RsBando["StatoFunzionale"]).Trim() == "Sospeso")
        {
            //'alert_sospensione="ExecFunctionModaleConfirm( 'ctl_library/MessageBoxWin.asp?MODALE=YES&ML=YES&MSG=' + encodeURIComponent( 'Attenzione, la gara risulta sospesa, viene consentita la compilazione del documento di partecipazione ma non l\'invio' ) +'&CAPTION=' + encodeURIComponent('Informazione') + '&ICO=' + encodeURIComponent(1), null , 200 , 420 , null , '' );"

            alert_sospensione = "if( confirm(CNV( '../','Attenzione, la gara risulta sospesa, viene consentita la compilazione del documento di partecipazione ma non l\'invio')) )";
        }
        else
        {
            alert_sospensione = "";
        }

        htmlToReturn.Write($@"

            <!--TOOLBAR DI TESTA  E TITOLO-->

        ");
        //'--------------------------
        //'-- Toolbar LATO PORTALE
        //'--------------------------
        htmlToReturn.Write($@"
            <div id=""paginazione"" class=""paging"" >
                <div class=""icons"">
                    <a href=""javascript:window.print();"" class=""print"">" + ApplicationCommon.CNV("StampaEffettiva") + $@"</a>
                </div>

		        <!--ELEMENTI NASCOSTI PER TOOLBAR DI CODA-->
		        <ul>
			        <li style=""display:none;"">
				        <a id=""modalepartecipa"" href=""" + ApplicationCommon.Application["WEBSERVERPORTALE"] + "/" + ApplicationCommon.Application["NOMEAPPPORTALE"] + $@"/modal/partecipa.asp?STRURLPARTECIPA=..%2F..%2F..%2F..%2FCtl_Library%2FDOCUMENT%2FPartecipa.asp%3FTIPODOC%3DOFFERTA%26IdMsgPar%3D" + idDoc + $@""" rel=""modal[620|350| ]"" title=""" + ApplicationCommon.CNV("Partecipa") + $@""">" + ApplicationCommon.CNV("Partecipa") + $@"
				        <!-- <a id=""modalepartecipa"" href=""" + ApplicationCommon.Application["WEBSERVERPORTALE"] + "/" + ApplicationCommon.Application["NOMEAPPPORTALE"] + $@"/modal/partecipa.asp?URL=../../../../Ctl_Library/DOCUMENT/Partecipa.asp?TIPODOC=OFFERTA&IdMsgPar=" + idDoc + $@""" rel=""modal[620|350| ]"" title=""" + ApplicationCommon.CNV("Partecipa") + $@""">" + ApplicationCommon.CNV("Partecipa") + $@" -->
				        </a>
			        </li>
		        </ul>

                <h2>" + getAziRagioneSociale(RsBando["Azienda"]) + $@"</h2>


           </div>

        ");
        //'--------------------------
        //'-- Toolbar lato applicazione BANDI PUBBLICI
        //'--------------------------
        htmlToReturn.Write($@"
            <div id=toolbarprivate class=""paging comandi"" style=""display:none;"">

                <div class=""icons1"">
                    <ul>
                        <li style=""background:url(" + ApplicationCommon.Application["WEBSERVERAPPLICAZIONE"] + "/" + ApplicationCommon.Application["NOMEAPPLICAZIONE"] + $@"/images/stampa.jpg) center left no-repeat; padding:28px;margin-top:0px;margin-bottom:0px; "" ><a style=""cursor:pointer;"" onclick=""javscript:window.print();"">" + ApplicationCommon.CNV("StampaEffettiva") + $@"</a></li>
                    </ul>
                </div>

                <div class=""comandi_interni"" >
                    <ul>

        ");

        //'-- il comando di partecipa lato interno parte privata si attiva solo se la scadenza non Ã¨ stata raggiunta ed il tipodocumento ( tipoBando ) non Ã¨ un avviso
        //'-- Per gli avvisi non Ã¨ privista risposta
        //'-- il bottene viene attivato se sono stato invitato
        //'-- il bottone è presente se la Modalita di Partecipazione=telematica (16308)

        if (CStr(RsBando["StatoFunzionale"]).Trim() != "Revocato" && CStr(RsBando["ModalitadiPartecipazione"]) != "16307" && CStr(RsBando["StatoFunzionale"]).Trim() != "InRettifica")
        {
            if (DateAndTime.Now.Ticks < CDate(RsBando["DataScadenzaOfferta"]).Ticks && DateAndTime.Now.Ticks >= CDate(RsBando["DataRiferimentoInizio"]).Ticks && (TipoBandoGara == "1" || TipoBandoGara == "2" || TipoBandoGara == "4" || bPartecipante == 1))
            {
                // <li><input id=""Iscriviti"" type=button class=""btn"" value=""" + ApplicationCommon.CNV("Partecipa") + $@""" + onclick=""Javascript" + alert_sospensione + $@" CREATE_ANSWER_NEW('../Ctl_Library/Document/Partecipa.asp?TIPODOC=RISPOSTA_CONCORSO&IdMsgPar=" + idDoc + $@"');"" ></li>
                htmlToReturn.Write($@"
			        <li><input id=""Declina"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Partecipa") + $@""" onclick=""Javascript:" + alert_sospensione + $@"CREATE_ANSWER_NEW('../Ctl_Library/Document/Partecipa.asp?TIPODOC=RISPOSTA_CONCORSO&IdMsgPar=" + idDoc + $@"');"" ></li>
		        ");

                //<li><input id="Iscriviti" type=button class="btn" value="<%=CNV(" Partecipa")%>" onclick="Javascript:<%=alert_sospensione%>CREATE_ANSWER_NEW('../Ctl_Library/Document/Partecipa.asp?TIPODOC=RISPOSTA_CONCORSO&IdMsgPar=<%=idDoc%>');" ></li>
            }
        }

        //' -- aggiunge bottone declina per impresa
        if (TipoProceduraCaratteristica == "RFQ" && StatoIscrizione != "Cancellato")
        {
            htmlToReturn.Write($@"
			    <li><input id=""Declina"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Declina") + $@""" onclick=""Javascript" + alert_sospensione + $@"if ( confirm( 'Sei sicuro ? ') ) CREATE_ANSWER_NEW('../Ctl_Library/Document/Declina.asp?TIPODOC=DOMANDA_PARTECIPAZIONE&IdMsgPar=" + idDoc + $@"');"" ></li>
		    ");
        }

        if (bVisualizzaSedutaVirtuale == 1)
        {
            htmlToReturn.Write($@"
                <li><input id=""lnkSedutaVirtuale"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Seduta Virtuale") + $@""" onclick=""Javascript:MakeDocFrom( 'SEDUTA_VIRTUALE##BANDO_CONCORSO#" + idDoc + $@"');"" ></li>
            ");
        }
        //'--se sono l'invitato apro i collegati altrimenti i collegati indiretti
        if (bPartecipante == 1)
        {
            htmlToReturn.Write($@"
		        <li><input id=""DocCollegati"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Documenti Collegati") + $@""" onclick=""Javascript:OpenCollegati('" + CStr(RsBando["Fascicolo"]).Trim() + $@"');"" ></li>
            ");
        }

        if (bIndiretto == 1 && bPartecipante == 0)
        {
            htmlToReturn.Write($@"
		        <li><input id=""DocCollegati"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Documenti Collegati") + $@""" onclick=""Javascript:OpenCollegatiIndiretti('" + CStr(RsBando["Fascicolo"]).Trim() + $@"');"" ></li>
	        ");
        }

        //'--scarica allegati stessa condizione degli atti di gara
        if (TipoBandoGara != "3" || bPartecipante == 1)
        {// then

            if (SogliaAllegatiSuperata(idDoc) != "YES")
            {

                htmlToReturn.Write($@"

				    <li><input id=""ScaricaAllegati"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Scarica Allegati") + $@""" onclick=""Javascript:ScaricaAllegati('TMP_DIFF=" + DateAndTime.Now.Ticks + $@"&OPERATION=DOWNLOAD&DOCUMENT=BANDO_CONCORSO&IDDOC=" + idDoc + $@"&SOURCE=DOCUMENTAZIONE');""></li>

			    ");
            }
            else
            {
                htmlToReturn.Write($@"

				    <li><input id=""ScaricaAllegati"" type=button  class=""btn disabled"" value=""" + ApplicationCommon.CNV("Scarica Allegati") + $@""" title=""" + HtmlEncode(ApplicationCommon.CNV("Scarica Allegati disabilitato per soglia superata")) + $@""" ></li>

			    ");
            }

        }

        if (Strings.InStr(1, "," + ApplicationCommon.Application["MODULI_GRUPPI"] + ",", "GROUP_Richieste_Accesso_Atti") > 0 && DateAndTime.Now.Ticks >= CDate(CStr(RsBando["DataScadenzaOfferta"])).Ticks)
        {//  then
            htmlToReturn.Write($@"
			    <!--- comando per attivare il bottone di Richiesta Atti -->
			    <li><input id=""Atti"" type=button  class=""btn"" value=""Richiesta Accesso Atti"" onclick=""Javascript:CREATE_ANSWER_NEW('../ctl_library/document/document.asp?JScript=RICHIESTA_ATTI_GARA&lo=base&DOCUMENT=RICHIESTA_ATTI_GARA&MODE=CREATEFROM&PARAM=BANDO," + idDoc + $@"');"" ></li>
		    ");
        }
        if (CStr(RsBando["Comunicazione_Iniziativa"]) == "si" && DateAndTime.Now.Ticks >= CDate(RsBando["DataScadenzaOfferta"]).Ticks && CStr(RsBando["StatoFunzionale"]).Trim() != "Chiuso" && boffertainviata > 0)
        {
            htmlToReturn.Write($@"

			    <li><input id=""Invio_Comunicazione"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Invio Comunicazione") + $@""" onclick=""Javascript:MakeDocFrom( 'COMUNICAZIONE_OE##BANDO_GARA#" + idDoc + $@"');"" ></li>

		    ");
        }

        htmlToReturn.Write($@"

                    </ul>
                </div>

            </div>
        ");

        //'--------------------------
        //'-- Toolbar lato applicazione BANDI PRIVATI a cui stai partecipandi
        //'--------------------------

        htmlToReturn.Write($@"
            <div id=toolbarpublic class=""paging comandi"" style=""display:none;"">
                <div class=""icons1"">
                    <ul>
                        <li style=""background:url(" + ApplicationCommon.Application["WEBSERVERPORTALE"] + "/" + ApplicationCommon.Application["NOMEAPPPORTALE"] + $@"/images/stampa.jpg) center left no-repeat; padding:28px;margin-top:0px;margin-bottom:0px; "" ><a style=""cursor:pointer;"" onclick=""javscript:window.print();"">" + ApplicationCommon.CNV("StampaEffettiva") + $@"</a></li>

                    </ul>
                </div>

                <div class=""comandi_interni"" >
                    <ul>
        ");

        //'-- il comando di partecipa sul portale si attiva solo se la scadenza non Ã¨ stata raggiunta ed il tipodocumento ( tipoBando ) Ã¨ un Bando
        //'-- avvisi ed inviti non hanno modo di partecipare lato pubblico
        //'-- oppure sono stato invitato
        //'-- il bottone è presente se la Modalita di Partecipazione=telematica (16308)
        if (CStr(RsBando["StatoFunzionale"]).Trim() != "Revocato" && CStr(RsBando["ModalitadiPartecipazione"]) != "16307" && CStr(RsBando["StatoFunzionale"]).Trim() != "InRettifica")
        {
            if (DateAndTime.Now.Ticks < CDate(RsBando["DataScadenzaOfferta"]).Ticks && DateAndTime.Now.Ticks >= CDate(RsBando["DataRiferimentoInizio"]).Ticks && (TipoBandoGara == "1" || TipoBandoGara == "2" || TipoBandoGara == "4" || bPartecipante == 1))
            {

                if (ProceduraGara == "15477" && TipoBandoGara == "2")
                { //'--ristretta - bando deve creare la domanda e non l'offerta
                    htmlToReturn.Write($@"
					    <li><input id=""Iscriviti"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Partecipa") + $@""" onclick=""Javascript:" + alert_sospensione + $@"CREATE_ANSWER_NEW('../Ctl_Library/Document/Partecipa.asp?TIPODOC=DOMANDA_PARTECIPAZIONE&IdMsgPar=" + idDoc + $@"');"" ></li>
				    ");
                }
                else
                {
                    if ((ProceduraGara == "15478" && TipoBandoGara == "1") || (ProceduraGara == "15583" && (TipoBandoGara == "4" || TipoBandoGara == "5")))
                    {
                        htmlToReturn.Write($@"
					    <li><input id=""Iscriviti"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Partecipa") + $@""" onclick=""Javascript:" + alert_sospensione + $@"CREATE_ANSWER_NEW('../Ctl_Library/Document/Partecipa.asp?TIPODOC=MANIFESTAZIONE_INTERESSE&IdMsgPar=" + idDoc + $@"');"" ></li>
				    ");
                    }
                    else
                    {
                        htmlToReturn.Write($@"
					    <li><input id=""Iscriviti"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Partecipa") + $@""" onclick=""Javascript:" + alert_sospensione + $@"CREATE_ANSWER_NEW('../Ctl_Library/Document/Partecipa.asp?TIPODOC=OFFERTA&IdMsgPar=" + idDoc + $@"');"" ></li>
				    ");

                    }
                }

            }

        }

        //'--scarica allegati stessa condizione degli atti di gara
        if (TipoBandoGara != "3" || bPartecipante == 1)
        {

            if (SogliaAllegatiSuperata(idDoc) != "YES")
            {

                htmlToReturn.Write($@"

				<li><input id=""ScaricaAllegati"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Scarica Allegati") + $@""" onclick=""Javascript:ScaricaAllegati('TMP_DIFF=" + DateAndTime.Now.Ticks + $@"&OPERATION=DOWNLOAD&DOCUMENT=BANDO_GARA&IDDOC=" + idDoc + $@"&SOURCE=DOCUMENTAZIONE');""></li>

			    ");
            }
            else
            {
                htmlToReturn.Write($@"
				    <li><input id=""ScaricaAllegati"" type=button  class=""btn disabled"" value=""" + ApplicationCommon.CNV("Scarica Allegati") + $@""" title=""" + HtmlEncode(ApplicationCommon.CNV("Scarica Allegati disabilitato per soglia superata")) + $@""" ></li>
			    ");
            }

        }

        if (Strings.InStr(1, "," + ApplicationCommon.Application["MODULI_GRUPPI"] + ",", "GROUP_Richieste_Accesso_Atti") > 0 && DateAndTime.Now.Ticks >= CDate(CStr(RsBando["DataScadenzaOfferta"])).Ticks)
        {
      //      htmlToReturn.Write($@"
			   // <!--- comando per attivare il bottone di Richiesta Atti -->
			   // <li><input id=""Atti"" type=button  class=""btn"" value=""Richiesta Accesso Atti"" onclick=""Javascript:CREATE_ANSWER_NEW('../ctl_library/document/document.asp?JScript=RICHIESTA_ATTI_GARA&lo=base&DOCUMENT=RICHIESTA_ATTI_GARA&MODE=CREATEFROM&PARAM=BANDO," + idDoc + $@"');"" ></li>
		    //");
        }
        if (CStr(RsBando["Comunicazione_Iniziativa"]) == "si" && DateAndTime.Now.Ticks >= CDate(CStr(RsBando["DataScadenzaOfferta"])).Ticks && CStr(RsBando["StatoFunzionale"]) != "Chiuso")
        {
            htmlToReturn.Write($@"

			<li><input id=""Invio_Comunicazione"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Invio Comunicazione") + $@""" onclick=""Javascript:MakeDocFrom( 'COMUNICAZIONE_OE##BANDO_CONCORSO#" + idDoc + $@"');"" ></li>

		    ");
        }

        htmlToReturn.Write($@"
                    </ul>
                </div>

            </div>





	        <table id=""template_doc"" >


		        <thead>
			        ");
        if (TipoProceduraCaratteristica == "RFQ")
        {
            htmlToReturn.Write($@"
			        <tr>
				        <b>Stato: " + StatoIscrizione + $@" </b>
			        </tr>
			");
        }
        htmlToReturn.Write($@"
			        <tr>
				        <th colspan=""4"" align=left nowrap>
        ");

        if (CStr(RsBando["tipodoc"]) == "BANDO_SEMPLIFICATO")
        {
            htmlToReturn.Write(ApplicationCommon.CNV("Bando - Dettagli"));
        }
        else if (CStr(RsBando["TipoSceltaContraente"]) != "ACCORDOQUADRO")
        {
            htmlToReturn.Write(DOC_FIELD_Dominio("TipoBandoGara", RsBando["TipoBandoGara"]));
        }
        else
        {
            htmlToReturn.Write(DOC_FIELD_Dominio("TipoSceltaContraente", RsBando["TipoSceltaContraente"]));
        }
        if (CStr(RsBando["tipodoc"]) != "BANDO_SEMPLIFICATO")
        {
            htmlToReturn.Write(" - " + CStr(RsBando["Titolo"]));
        }

        htmlToReturn.Write($@"
            </th>
			    </tr>
		    </thead>

		    <tbody>



		    <!-- INIZIO DAti di dettaglio del bando -->

			    <tr>
				    <th>
					    " + ApplicationCommon.CNV("ente Appaltante") + $@"</th>
				    <td>
					    " + getAziRagioneSociale(RsBando["Azienda"]) + $@"</td>
			    </tr>
        ");
        sqlParams.Clear();
        sqlParams.Add("@idDoc", CInt(idDoc));
        sSql = "select Note, SIGN_ATTACH, DataInvio from ctl_doc with(nolock) where TipoDoc = 'avviso_gara' and StatoFunzionale = 'Inviato' and Deleted = 0 and LinkedDoc = @idDoc order by DataInvio desc";
        TSRecordSet rsAvvisi = GetRS(sSql, sqlParams);

        if (rsAvvisi.RecordCount > 0)
        {// then

            rsAvvisi.MoveFirst();
            htmlToReturn.Write($@"
                <!-- AVVISI DI GARA -->
			    <tr>
				    <th>" + ApplicationCommon.CNV("Avvisi di Gara") + $@"</th>

				    <td style=""padding:0px;"">

						    <table class=""GridPrintProducts""><tr class="""">

							    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
							    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Allegato") + $@"</font></td></tr>
            ");
            for (int i = 1; i <= rsAvvisi.RecordCount; i++)
            {// to rsAvvisi.recordcount

                Fld_Attach objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                objattach.Init(18, "Allegato", rsAvvisi.Fields["SIGN_ATTACH"], null, null, "IN", true);

                htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsAvvisi["note"])) + @"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                objattach.Html(htmlToReturn, false);
                htmlToReturn.Write("</font></td></tr>");

                rsAvvisi.MoveNext();

                //set objattach=nothing

            }

            htmlToReturn.Write($@"
                            </table>

				            </td>

			            </tr>
            ");

        }

        string str_state;
        str_state = "";

        htmlToReturn.Write($@"
            <tr>
				<th>
				" + ApplicationCommon.CNV("Oggetto") + $@"</th>
				<td>
        ");

        if (CStr(RsBando["StatoFunzionale"]) == "Revocato")
        {

            str_state = ApplicationCommon.CNV("bando revocato") + " - ";

        }
        if (CStr(RsBando["StatoFunzionale"]) != "Revocato" && (CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Proroga" || CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Rettifica"))
        {

            str_state = ApplicationCommon.CNV("bando rettificato") + " - ";

        }
        if (CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Ripristino")
        {

            str_state = "<b>" + ApplicationCommon.CNV("Procedura Ripristinata") + " - " + "</b>";

        }
        if (CStr(RsBando["StatoFunzionale"]) == "InRettifica")
        {

            str_state = "<b>" + ApplicationCommon.CNV("Bando in Rettifica") + " - " + "</b>";

        }
        if (CStr(RsBando["StatoFunzionale"]) == "InSospensione")
        {

            str_state = "<b>" + ApplicationCommon.CNV("Procedura in Sospensione") + " - " + "</b>";

        }
        if (CStr(RsBando["StatoFunzionale"]) == "Sospeso")
        {

            str_state = "<b>" + ApplicationCommon.CNV("Procedura Sospesa") + " - " + "</b>";

        }

        htmlToReturn.Write(str_state + HtmlEncode(CStr(RsBando["Body"])));

        htmlToReturn.Write($@"
                </td>

			</tr>
        ");

        if (!string.IsNullOrEmpty(CStr(RsBando["CIG"]).Trim()))
        {
            htmlToReturn.Write($@"
			    <tr>
				    <th>" + ApplicationCommon.CNV("CIG") + $@"</th>
				    <td >" + CStr(RsBando["CIG"]) + $@"</td>
			    </tr>
            ");
        }

        htmlToReturn.Write($@"
            <tr>
				<th>
					" + ApplicationCommon.CNV("Incaricato") + $@"</th>
				<td>
					" + CStr(RsBando["UserRUP"]));
        if (CStr(nHideDirezionEspletante(id_doc)) == "0" && !string.IsNullOrEmpty(CStr(RsBando["DirezioneEspletante"])))
        {

            htmlToReturn.Write($@"<br>(" + CStr(RsBando["DirezioneEspletante"]) + ")");

        }

        htmlToReturn.Write($@"   </td>
			</tr>
        ");

        if (!IsNull(CDbl(RsBando["ImportoBaseAsta"])))
        {
            if (CDbl(RsBando["ImportoBaseAsta"]) > 0.0 && TipoProceduraCaratteristica != "RFQ")
            {
                htmlToReturn.Write($@"
                    <tr>
				<th>
					" + ApplicationCommon.CNV("Importo del Concorso") + $@"</th>
				<td>
                ");
                Fld_Number objFieldImporto = new Fld_Number();//createObject("CtlHtml.Fld_Number")
                objFieldImporto.Init(2, "ImportoBaseAsta", CDbl(RsBando["ImportoBaseAsta"]), null, null, "###,###,##0.00###", false);
                objFieldImporto.sepDecimal = session["SEP_DECIMALI"];
                htmlToReturn.Write(CStr(objFieldImporto.TxtValue()));
                //set objFieldImporto = nothing
                htmlToReturn.Write($@"
                    &euro; ( " + DOC_FIELD_Dominio("TipoIVA", CStr(RsBando["TipoIVA"])) + $@" )</td>
			                    </tr>
                ");
            }
        }

   //     htmlToReturn.Write($@"
   //         <tr>
			//	<th>
			//		" + ApplicationCommon.CNV("Criterio aggiudicazione") + $@"</th>
			//	<td>
			//		" + DOC_FIELD_Dominio("Criterio2", CStr(RsBando["CriterioAggiudicazioneGara"])) + $@"</td>
			//</tr>
   //     ");

        if (TipoProceduraCaratteristica != "RFQ")
        {
            htmlToReturn.Write($@"
			    <tr>
				    <th>
					    " + ApplicationCommon.CNV("Tipo Appalto") + $@"</th>
				    <td>
					    " + DOC_FIELD_Dominio("Tipologia", CStr(RsBando["TipoAppaltoGara"])) + $@"</td>
			    </tr>

		    ");
        }

        if (CStr(RsBando["tipodoc"]) == "BANDO_SEMPLIFICATO")
        {
            htmlToReturn.Write($@"
			    <tr>
				    <th>
					    " + ApplicationCommon.CNV("Registro Bando SDA di riferimento") + $@"</th>
				    <td>
					    " + CStr(RsBando["ProtocolloRiferimento"]) + $@"</td>
			    </tr>
			    <tr>
				    <th>
					    " + ApplicationCommon.CNV("Oggetto Bando SDA di Riferimento") + $@"</th>
				    <td>
					    " + CStr(RsBando["DescrizioneSDA"]) + $@"</td>
			    </tr>


		    ");
        }

        if (!string.IsNullOrEmpty(CStr(RsBando["ProtocolloRiferimento"])) && CStr(RsBando["tipodoc"]) != "BANDO_SEMPLIFICATO")
        {
            htmlToReturn.Write($@"
			    <tr>
				    <th>
					    " + ApplicationCommon.CNV("Bando di riferimento") + $@"</th>
				    <td>
					    " + CStr(RsBando["ProtocolloRiferimento"]) + $@"</td>
			    </tr>
            ");
        }

        if (!string.IsNullOrEmpty(CStr(RsBando["DataTermineQuesiti"])))
        {
            htmlToReturn.Write($@"

	            <tr>
				    <th>" + ApplicationCommon.CNV("Termine richiesta quesiti") + $@"</th>
			");
            if (CStr(RsBando["StatoFunzionale"]).Trim() == "InSospensione" || CStr(RsBando["StatoFunzionale"]).Trim() == "Sospeso")
            {
                htmlToReturn.Write($@"
				    <td>" + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataTermineQuesiti"])) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"] ");
                htmlToReturn.Write(" - <b>Sospesa</b>" + $@"</td>");

            }
            else if (PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataTermineQuesiti"])) != PrintDataORA(CStr(getDataTermineQuesitiOriginale(idDoc))) && (CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Proroga" || CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Rettifica" || CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Ripristino"))
            {
                htmlToReturn.Write($@"
				    <td>");
                htmlToReturn.Write($@"<b>Data Originale</b> - " + PrintDataORA(CStr(getDataTermineQuesitiOriginale(idDoc))) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]  ");
                htmlToReturn.Write($@"<b> Data Prorogata</b> - " + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataTermineQuesiti"])) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>
			    ");
            }
            else
            {
                htmlToReturn.Write($@"
					<td >" + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataTermineQuesiti"])) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>
        	    ");
            }
            htmlToReturn.Write($@"
			    </tr>
            ");
        }

        //'--verifico se devo nascondere a prescindere il campo DataTermineRispostaQuesiti da parametri
        //dynamic Nascondo_DataTermineRispostaQuesiti = Get_Func_Property("BANDO_GARA.ASP", "DataTermineRispostaQuesiti", "HIDE", "0", CInt("-1"));
        //if (CStr(Nascondo_DataTermineRispostaQuesiti) == "0")
        //{//  then
            if (!IsNull(RsBando.Fields["DataTermineRispostaQuesiti"]))
            {
                htmlToReturn.Write($@"
				    <tr>
					    <th>" + ApplicationCommon.CNV("Termine risposta quesiti") + $@"</th>

				    ");
                if (CStr(RsBando["StatoFunzionale"]).Trim() == "InSospensione" || CStr(RsBando["StatoFunzionale"]).Trim() == "Sospeso")
                {
                    htmlToReturn.Write($@"
					    <td>" + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataTermineRispostaQuesiti"])) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"] ");
                    htmlToReturn.Write(" - <b>Sospesa</b></td>");

                }
                else if ((PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataTermineRispostaQuesiti"])) != PrintDataORA(CStr(getDataTermineRispostaQuesitiOriginale(idDoc)))) && (CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Proroga" || CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Rettifica" || CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Ripristino"))
                {

                    if (!string.IsNullOrEmpty(CStr(getDataTermineRispostaQuesitiOriginale(idDoc))) && PrintDataORA(CStr(getDataTermineRispostaQuesitiOriginale(idDoc))) != "01/01/1900 ore 00:00:00")
                    {
                        htmlToReturn.Write($@"
						    <td>");
                        htmlToReturn.Write($@"<b>Data Originale</b> - " + PrintDataORA(CStr(getDataTermineRispostaQuesitiOriginale(idDoc))) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]  ");
                        htmlToReturn.Write($@"<b> Data Prorogata</b> - " + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataTermineRispostaQuesiti"])) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>
					    ");
                    }
                    else
                    {
                        htmlToReturn.Write($@"
						    <td>");
                        htmlToReturn.Write($@"<b>Data Originale</b> - NON PRESENTE" + "<b> Data Prorogata</b> - " + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataTermineRispostaQuesiti"])) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>
					    ");
                    }

                }
                else
                {
                    htmlToReturn.Write($@"
						<td >" + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataTermineRispostaQuesiti"])) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>
				    ");
                }
                htmlToReturn.Write($@"
				    </tr>
			    ");
            }
        //}

        if (CStr(RsBando["Appalto_Verde"]) == "si")
        {
            htmlToReturn.Write($@"

			<tr>
				<th>");
            htmlToReturn.Write(ApplicationCommon.CNV("Motivazione Appalto Verde"));

            htmlToReturn.Write($@"
				</th>
				<td>
					" + RsBando["Motivazione_Appalto_Verde"] + $@"
				</td>

			</tr>

		    ");
        }

        if (CStr(RsBando["Acquisto_Sociale"]) == "si")
        {
            htmlToReturn.Write($@"
			<tr>
				<th>");
            htmlToReturn.Write(ApplicationCommon.CNV("Motivazione Acquisto Sociale"));

            htmlToReturn.Write($@"
				</th>
				<td>
					" + CStr(RsBando["Motivazione_Acquisto_Sociale"]) + $@"
				</td>

			</tr>

		    ");
        }

        //'--verifico se devo nascondere a prescindere il campo DataRiferimentoInizio da parametri
        //dynamic Nascondo_DataRiferimentoInizio = Get_Func_Property("BANDO_GARA.ASP", "DataRiferimentoInizio", "HIDE", "0", CInt("-1"));
        //if (CStr(Nascondo_DataRiferimentoInizio) == "0" && TipoProceduraCaratteristica != "RFQ")
        //{

            if (DateAndTime.Year(CDate(RsBando.Fields["DataRiferimentoInizio"])) != 1900)
            {//  then
                if (!string.IsNullOrEmpty(CStr(RsBando.Fields["DataRiferimentoInizio"])))
                {
                    htmlToReturn.Write($@"

				    <tr>
					    <th>");

                    htmlToReturn.Write(ApplicationCommon.CNV("Rispondere dal"));

                    htmlToReturn.Write($@"
					    </th>

						    <td >" + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataRiferimentoInizio"])) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>

				    </tr>

			        ");
                }
            }
        //}

        if (!string.IsNullOrEmpty(CStr(RsBando["DataScadenzaOfferta"])))
        {
            htmlToReturn.Write($@"

	            <tr>
		            <th>
            ");
            if ((ProceduraGara == "15478" && TipoBandoGara == "1") || (ProceduraGara == "15583" && (TipoBandoGara == "4" || TipoBandoGara == "5"))) //'-- Negoziata - Avviso con risposta
            {
                if (ProceduraGara == "15583")
                {
                    htmlToReturn.Write(ApplicationCommon.CNV("Presentare le risposte entro il"));
                }
                else
                {
                    htmlToReturn.Write(ApplicationCommon.CNV("Presentare le Manifestazione di Interesse entro il"));
                }
            }
            else
            {
                if (ProceduraGara == "15477" && TipoBandoGara == "2")
                {  //'-- Ristretta - Bando
                    htmlToReturn.Write(ApplicationCommon.CNV("Termine Presentazione Domanda di Partecipazione"));
                }
                else
                {

                    //'if ProceduraGara = "15477" then '--ristretta
                    //'	response.Write CNV("Presentare le domande entro il")
                    //'else
                    htmlToReturn.Write(ApplicationCommon.CNV("Presentare le offerte entro il"));
                    //'end if

                }
            }

            htmlToReturn.Write($@"
		            </th>
				    ");
            if (CStr(RsBando["StatoFunzionale"]).Trim() == "InSospensione" || CStr(RsBando["StatoFunzionale"]).Trim() == "Sospeso")
            {
                htmlToReturn.Write($@"
					    <td>" + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataScadenzaOfferta"])) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"] ");
                htmlToReturn.Write(" - <b>Sospesa</b></td>");
            }
            else if ((PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataScadenzaOfferta"])) != PrintDataORA(CStr(getDataScadenzaOfferta(idDoc)))) && (CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Proroga" || CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Rettifica" || CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Ripristino"))
            {
                htmlToReturn.Write($@"
					    <td>
                ");
                htmlToReturn.Write($@"<b>Data Originale</b> - " + PrintDataORA(CStr(getDataScadenzaOfferta(idDoc))) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]  ");
                htmlToReturn.Write($@"<b> Data Prorogata</b> - " + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataScadenzaOfferta"])) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>
				    ");
            }
            else
            {
                htmlToReturn.Write($@"
					    <td >" + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataScadenzaOfferta"])) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>
				    ");
            }
            htmlToReturn.Write($@"
                </tr>

            ");
        }

        //'--verifico se devo nascondere a prescindere il campo DataAperturaOfferte da parametri
        //dynamic Nascondo_DataAperturaOfferte = Get_Func_Property("BANDO_GARA.ASP", "DataAperturaOfferte", "HIDE", "0", CInt("-1"));

        ////' caso della ristretta
        //if ((ProceduraGara == "15477" && TipoBandoGara == "2") || (CStr(RsBando["TipoProceduraCaratteristica"]).ToUpper() == "RDO"))
        //{
        //    Nascondo_DataAperturaOfferte = "1";
        //}

        ////'response.write "TipoProceduraCaratteristica=" + RsBando("TipoProceduraCaratteristica").value
        ////'response.end

        //if (CStr(Nascondo_DataAperturaOfferte) == "0" && TipoProceduraCaratteristica != "RFQ")
        //{

            if (!IsNull(CStr(RsBando["DataAperturaOfferte"])))
            {
                if (!string.IsNullOrEmpty(CStr(RsBando["DataAperturaOfferte"])) && CStr(RsBando["TipoProceduraCaratteristica"]) != "RdO")
                {
                    if (ProceduraGara != "15478" || TipoBandoGara != "1")
                    {
                        htmlToReturn.Write($@"

					        <tr>
						        <th>
                        ");
                        if ((ProceduraGara == "15478" && TipoBandoGara == "1") || (ProceduraGara == "15583" && (TipoBandoGara == "4" || TipoBandoGara == "5")))
                        {//'-- Negoziata - Avviso
                            htmlToReturn.Write(ApplicationCommon.CNV("Data Presunta Pubblicazione Invito"));
                        }
                        else
                        {
                            htmlToReturn.Write(ApplicationCommon.CNV("Data I Seduta"));
                        }
                        htmlToReturn.Write($@"
						        </th>
						");
                        if (CStr(RsBando["StatoFunzionale"]).Trim() == "InSospensione" || CStr(RsBando["StatoFunzionale"]).Trim() == "Sospeso")
                        {
                            htmlToReturn.Write($@"
							    <td>" + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataAperturaOfferte"])) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"] ");
                            htmlToReturn.Write($@" - <b>Sospesa</b></td>");

                        }
                        else if ((PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataAperturaOfferte"])) != PrintDataORA(CStr(getDataAperturaOfferte(idDoc)))) && (CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Proroga" || CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Rettifica" || CStr(Get_LAST_FUNZIONE_ESEGUITA_PROCEDURA(idDoc)) == "Ripristino"))
                        {
                            htmlToReturn.Write($@"
							    <td>");
                            htmlToReturn.Write($@"<b>Data Originale</b> - " + PrintDataORA(CStr(getDataAperturaOfferte(idDoc))) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]  ");
                            htmlToReturn.Write($@"<b> Data Prorogata</b> - " + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataAperturaOfferte"])) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>

						    ");
                        }
                        else
                        {
                            htmlToReturn.Write($@"
							<td >" + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataAperturaOfferte"])) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>


						    ");
                        }
                        htmlToReturn.Write($@"
					        </tr>

				        ");
                    }
                }
            }
        //}

        //'--nel caso di ACCORDO QUADRO visualizzo Termine Accordo Quadro
        if (CStr(RsBando["TipoSceltaContraente"]) == "ACCORDOQUADRO" && !string.IsNullOrEmpty(CStr(RsBando["DataRiferimentoFine"])))
        {
            htmlToReturn.Write($@"
			    <tr>
				    <th>
					    " + ApplicationCommon.CNV("Termine Accordo Quadro") + $@"
				    </th>
				    <td>
					    " + PrintDataORA(DOC_FIELD_Date(RsBando.Fields["DataRiferimentoFine"])) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"]
				    </td>
			    </tr>
		    ");
        }

        htmlToReturn.Write($@"
            <!---se questa griglia BANDO.rettifiche Ã¨ vuota nasconderla-->
            <!--tr>
                <th>
                    #DATADOC id='cnv.Avvisi di Rettifica'/#</th>
                <td>
                    #DATADOC id='BANDO.rettifiche' /#</td>
            </tr-->
            <!-- FINE Dati di dettaglio del bando -->
        ");

        if (TipoProceduraCaratteristica != "RFQ" || TipoProceduraCaratteristica == "RFQ")
        {
            htmlToReturn.Write($@"
                <tr>
  			    <th>" + ApplicationCommon.CNV("Documentazione") + $@"</th>
   		        <td style=""padding:0px;"">
            ");

            //'-- la documentazione Ã¨ visibile solo se si sta partecipando oppure la procedura non prevede destinatari
            //'--      ristretta - Bando                                              Negoziata - Avviso
            //'if ( not ( TipoBandoGara = "2" and ProceduraGara = "15477"  ) and not (TipoBandoGara = "1" and ProceduraGara = "15478" ) ) or bPartecipante = 1 then
            //'if ( ProceduraGara = "15476"  ) or ( TipoBandoGara = "2" and ProceduraGara = "15477" )  or ( TipoBandoGara = "1" and ProceduraGara = "15478" )  or bPartecipante = 1 then

            //'-- gli atti di gara si vedono se il documento non Ã¨ un invito oppure sono stato invitato
            if (TipoBandoGara != "3" || bPartecipante == 1)
            {
                htmlToReturn.Write($@"
                        <table class=""GridPrintProducts""><tr class="""">

          		        <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
          		        <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Allegato") + $@"</font></td></tr>
                    ");
                Fld_Attach objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                objattach.Path = ApplicationCommon.Application["strVirtualDirectory"];

                //'-- disegnare la griglia della documentazione
                int i;
                //stop
                //'dim nr
                //'nr = DOC_NumRow( "DOCUMENTAZIONE", "" )

                TSRecordSet RSDoc;
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                string strSQLDoc = "select * from CTL_DOC_ALLEGATI with (nolock) where idHeader=@idDoc order by idrow";

                RSDoc = GetRS(strSQLDoc, sqlParams);


                if (RSDoc.RecordCount > 0)
                {
                    RSDoc.MoveFirst();

                    while (!RSDoc.EOF)
                    {

                        //'for i = 0 to nr-1

                        //'objattach.Init "Allegato", DOC_FieldRowTecnical( "DOCUMENTAZIONE", "Allegato", i ) , nothing, "IN", true
                        objattach.Init(18, "Allegato", RSDoc.Fields["Allegato"], null, null, "IN", true);

                        //'response.Write "<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" & DOC_FieldRow( "DOCUMENTAZIONE", "Descrizione", i )& "</font></td><td class=""linkAttachment""><font class=""PrintValues"">"
                        htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(RSDoc["Descrizione"])) + $@"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");

                        objattach.Html(htmlToReturn, false);
                        htmlToReturn.Write("</font></td></tr>");

                        RSDoc.MoveNext();

                    }
                    //'next
                }

                TSRecordSet RSProdotti;
                //'SE MODALITA DI PARTECIPAZIONE E' TRADIZIONALE ( 16307 ) NON INSERISCE IL FOGLIO PRODOTTI
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                string strSQLProdotti = "select top 1 * from Document_MicroLotti_Dettagli D with (nolock) inner join Document_Bando B with(nolock) on B.idHeader =D.IdHeader and ISNULL(ModalitadiPartecipazione,'') <> '16307'  where D.IdHeader=@idDoc";

                RSProdotti = GetRS(strSQLProdotti, sqlParams);
                if (RSProdotti.RecordCount > 0)
                {//  then

                    htmlToReturn.Write($@"<tr class=""""><td valign=""middle"" class=""CellGridPrintProducts""><font class=""PrintValues"">" + ApplicationCommon.CNV("Foglio prodotti selezionato") + $@"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                    htmlToReturn.Write($@"<div id=""DIV_AllegatoCSV""><table class=""Attach_Tab"" ><tr><td noWrap=""nowrap"">");
                    htmlToReturn.Write($@"<label  class=""Attach_label"" id=""Allegato_CSV_V_N"" onclick=""javascript:ExecFunction( '/" + ApplicationCommon.Application["NOMEAPPLICAZIONE"] + "/Report/CSV_LOTTI.asp?IDDOC=" + idDoc + "&HIDECOL=ValoreImportoLotto,EsitoRiga&TIPODOC=" + CStr(RsBando["tipodoc"]) + $@"');"" >" + ApplicationCommon.CNV("File da compilare") + "</label>");
                    htmlToReturn.Write($@"</td></tr></table></div>");
                    htmlToReturn.Write($@"</font></td></tr>");

                }

                htmlToReturn.Write($@"

                        </table>
   		            <i>
                ");

            }
            else
            {
                htmlToReturn.Write(HtmlEncode(ApplicationCommon.CNV("La presente procedura e' riservata ai soli operatori invitati")));
            }
            htmlToReturn.Write($@"
                        </i>


                    </td>
  	            </tr>
            ");
        }

        //'-- gli allegati di Revoca si vedono se il documento non Ã¨ un invito oppure sono stato invitato
        if (TipoBandoGara != "3" || bPartecipante == 1)
        {
            //'--Stampa Allegati Revoca se presente
            string strRevocaLotti;
            strRevocaLotti = PresenzaRevocaLotti(idDoc);
            //'Response.Write strRevocaLotti
            //'Response.end
            if (PresenzaRevoca(idDoc) == "si" || strRevocaLotti == "si")
            {
                htmlToReturn.Write($@"


			        <tr>
				        <th>" + ApplicationCommon.CNV("Avvisi di Revoca") + $@"</th>
			        <td style=""padding:0px;"">

					        <table class=""GridPrintProducts""><tr class="""">

					        <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
					        <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Allegato") + $@"</font></td></tr>


				");

                TSRecordSet rsrevoca;
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                sSql = "Select Descrizione,Allegato from ctl_doc c with(nolock) inner join ctl_doc c2 with(nolock) on c2.linkedDoc=c.id and c2.tipodoc='PDA_COMUNICAZIONE_GENERICA' and c2.StatoFunzionale='Inviato' and c2.jumpcheck='0-REVOCA_BANDO' inner join ctl_doc_allegati with(nolock) on  idheader=c2.id where c.id=@idDoc and c.StatoFunzionale='Revocato'";
                rsrevoca = GetRS(sSql, sqlParams);

                Fld_Attach objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                if (rsrevoca.RecordCount > 0)
                {// then
                    objattach.Path = ApplicationCommon.Application["strVirtualDirectory"];

                    //'for i = 1 to rsrevoca.recordcount
                    rsrevoca.MoveFirst();

                    while (!rsrevoca.EOF)
                    {
                        objattach.Init(18, "Allegato", rsrevoca.Fields["Allegato"], null, null, "IN", true);

                        htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsrevoca["Descrizione"])) + $@"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                        objattach.Html(htmlToReturn, false);
                        htmlToReturn.Write("</font></td></tr>");

                        rsrevoca.MoveNext();
                    }
                }

                //'--se ci sono aggiungo gli allegati dei documenti BANDO_REVOCA_LOTTO
                if (strRevocaLotti == "si")
                {

                    string[] aInfoAttachRevoca;
                    TSRecordSet rsRevocaLotti;

                    //'--recupero tutti i documenmti BANDO_REVOCA_LOTTO inviati
                    sqlParams.Clear();
                    sqlParams.Add("@idDoc", CInt(idDoc));
                    sSql = "Select isnull(sign_attach,'') as sign_attach from CTL_DOC with(nolock) where Tipodoc='BANDO_REVOCA_LOTTO' and StatoFunzionale='Inviato' and LinkedDoc=@idDoc";
                    rsRevocaLotti = GetRS(sSql, sqlParams);

                    if (rsRevocaLotti.RecordCount > 0)
                    {// then

                        rsRevocaLotti.MoveFirst();

                        while (!rsRevocaLotti.EOF)
                        {

                            if (!string.IsNullOrEmpty(CStr(rsRevocaLotti["sign_attach"])))
                            {

                                objattach.Init(18, "Allegato", CStr(rsRevocaLotti["sign_attach"]), null, null, "IN", true);

                                aInfoAttachRevoca = Strings.Split(CStr(rsRevocaLotti["sign_attach"]), "*");

                                htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(aInfoAttachRevoca[0]) + $@"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                                objattach.Html(htmlToReturn, false);
                                htmlToReturn.Write("</font></td></tr>");

                            }

                            rsRevocaLotti.MoveNext();

                        }
                    }

                }

                htmlToReturn.Write($@"

				                </table>

		                </td>
	                </tr>

                ");
            }
        }


        //'-- gli allegati di Revoca si vedono se il documento non Ã¨ un invito oppure sono stato invitato
        if (TipoBandoGara != "3" || bPartecipante == 1)
        {
            //'--Stampa Allegati Proroga o rettifica se presente
            if (PresenzaProroga(idDoc) == "si" || PresenzaRettifica(idDoc) == "si")
            {
                htmlToReturn.Write($@"


				    <tr>
					    <th>" + ApplicationCommon.CNV("Avvisi di Rettifica") + $@"</th>
				    <td style=""padding:0px;"">

						    <table class=""GridPrintProducts""><tr class="""">

						    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
						    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Allegato") + $@"</font></td></tr>


			    ");

                TSRecordSet rsproroga;
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                sSql = "Select Descrizione,Allegato from ctl_doc c with(nolock) inner join ctl_doc c2 with(nolock) on c2.linkedDoc=c.id and c2.tipodoc='PROROGA_GARA' and c2.StatoFunzionale='Inviato' and c2.jumpcheck='BANDO_GARA' inner join ctl_doc_allegati with(nolock) on  idheader=c2.id where c.id=@idDoc";
                rsproroga = GetRS(sSql, sqlParams);

                if (rsproroga.RecordCount > 0)
                {// then
                    Fld_Attach objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                    objattach.Path = ApplicationCommon.Application["strVirtualDirectory"];

                    for (int i = 1; i <= rsproroga.RecordCount; i++)
                    { //to rsproroga.recordcount
                        objattach.Init(18, "Allegato", rsproroga.Fields["Allegato"], null, null, "IN", true);

                        htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsproroga["Descrizione"])) + $@"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                        objattach.Html(htmlToReturn, false);
                        htmlToReturn.Write("</font></td></tr>");

                        rsproroga.MoveNext();
                    }
                }


                TSRecordSet rsrettifica;
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                sSql = "Select Descrizione,Allegato from ctl_doc c with(nolock) inner join ctl_doc c2 with(nolock) on c2.linkedDoc=c.id and c2.tipodoc='RETTIFICA_GARA' and c2.StatoFunzionale='Inviato' and c2.jumpcheck='BANDO_CONCORSO' inner join ctl_doc_allegati with(nolock) on  idheader=c2.id where c.id=@idDoc";
                rsrettifica = GetRS(sSql, sqlParams);

                if (rsrettifica.RecordCount > 0)
                {// then
                    Fld_Attach objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                    objattach.Path = ApplicationCommon.Application["strVirtualDirectory"];

                    for (int i = 1; i <= rsrettifica.RecordCount; i++)
                    { //to rsrettifica.recordcount
                        objattach.Init(18, "Allegato", rsrettifica.Fields["Allegato"], null, null, "IN", true);

                        htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsrettifica["Descrizione"])) + @"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                        objattach.Html(htmlToReturn, false);
                        htmlToReturn.Write("</font></td></tr>");

                        rsrettifica.MoveNext();
                    }
                }

                htmlToReturn.Write($@"

						        </table>

				        </td>
			        </tr>

		        ");
            }
        }


        //'-- gli allegati di Sospensione si vedono se il documento non Ã¨ un invito oppure sono stato invitato
        if (TipoBandoGara != "3" || bPartecipante == 1)
        {//then
         //'--Stampa Allegati sospensione se presente
            if (PresenzaSospensione(idDoc) == "si")
            {
                htmlToReturn.Write($@"


				    <tr>
					    <th>" + ApplicationCommon.CNV("Avvisi di Sospensione") + $@"</th>
				    <td style=""padding:0px;"">

				    <table class=""GridPrintProducts""><tr class="""">

						    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
						    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Allegato") + $@"</font></td></tr>


				");

                TSRecordSet rssosp;
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                sSql = "Select Descrizione,Allegato from ctl_doc c with(nolock) inner join ctl_doc c2 with(nolock) on c2.linkedDoc=c.id and c2.tipodoc='PDA_COMUNICAZIONE_GENERICA' and c2.StatoFunzionale='Inviato' and c2.jumpcheck='0-SOSPENSIONE_GARA' inner join ctl_doc_allegati with(nolock) on  idheader=c2.id where c.id=@idDoc";
                rssosp = GetRS(sSql, sqlParams);

                if (rssosp.RecordCount > 0)
                {// then
                    Fld_Attach objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                    objattach.Path = ApplicationCommon.Application["strVirtualDirectory"];

                    for (int i = 1; i <= rssosp.RecordCount; i++)
                    {// to rssosp.recordcount
                        objattach.Init(18, "Allegato", rssosp.Fields["Allegato"], null, null, "IN", true);

                        htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rssosp["Descrizione"])) + @"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                        objattach.Html(htmlToReturn, false);
                        htmlToReturn.Write("</font></td></tr>");

                        rssosp.MoveNext();
                    }
                }

                TSRecordSet rs_ripristino;
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                sSql = "Select Descrizione,Allegato from ctl_doc c with(nolock) inner join ctl_doc c2 with(nolock) on c2.linkedDoc=c.id and c2.tipodoc='RIPRISTINO_GARA' and c2.StatoFunzionale='Inviato' and c2.jumpcheck in ( 'BANDO_CONCORSO') inner join ctl_doc_allegati with(nolock) on  idheader=c2.id where c.id=@idDoc";
                rs_ripristino = GetRS(sSql, sqlParams);

                if (rs_ripristino.RecordCount > 0)
                {// then
                    Fld_Attach objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                    objattach.Path = ApplicationCommon.Application["strVirtualDirectory"];

                    for (int i = 1; i <= rs_ripristino.RecordCount; i++)
                    {//to rs_ripristino.recordcount
                        objattach.Init(18, "Allegato", rs_ripristino.Fields["Allegato"], null, null, "IN", true);

                        htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rs_ripristino["Descrizione"])) + @"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                        objattach.Html(htmlToReturn, false);
                        htmlToReturn.Write($@"</font></td></tr>");

                        rs_ripristino.MoveNext();
                    }
                }

                htmlToReturn.Write($@"



				        </table>

				        </td>
			        </tr>

		        ");
            }  //' fine if '--Stampa Allegati sospensione se presente
        }  //' fine if '-- gli allegati di Sospensione si vedono se il documento non Ã¨ un invito oppure sono stato invitato

        //'--IMPORTI
        TSRecordSet rsImporti;
        sqlParams.Clear();
        sqlParams.Add("@idDoc", CInt(idDoc));
        sSql = "select count(*) as NumImporti from ctl_doc_value where idheader =@idDoc and dse_id='InfoTec_griglia' and dzt_name='DescrImportiVari'";
        rsImporti = GetRS(sSql, sqlParams);
        if (rsImporti.RecordCount > 0)
        {// then

            rsImporti.MoveFirst();
            int NumImporti = CInt(rsImporti["NumImporti"]!);

            if (NumImporti > 0)
            {// then
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                sqlParams.Add("@strSuffLing", CStr(session["strSuffLing"]));
                sSql = "select isnull(M.ML_Description,DMV_DescML) as Descrizione , I2.value as Importo from ctl_doc_value I1 with(nolock) inner join ctl_doc_value I2 with(nolock) on I2.row=I1.row  and I2.dse_id=I1.dse_id and I1.idheader = I2.idheader inner join LIB_DomainValues with(nolock) on DMV_DM_ID ='DescrImportiVari' and DMV_Cod=I1.value left join lib_multilinguismo M with(nolock) on M.ML_KEY = DMV_DescML and M.ML_LNG = @strSuffLing where  I1.dse_id='InfoTec_griglia' and I1.idheader=@idDoc and I1.dzt_name='DescrImportiVari' and I2.dzt_name='ImportiVari'";
                TSRecordSet rsDettImporti = GetRS(sSql, sqlParams);

                Fld_Number objFieldImporto = new();//createObject("CtlHtml.Fld_Number")
                objFieldImporto.sepDecimal = session["SEP_DECIMALI"];
                htmlToReturn.Write($@"
				    <tr>
					    <th>" + ApplicationCommon.CNV("Importi") + $@"</th>
					    <td style=""padding:0px;"">
						    <table class=""GridPrintProducts"">
							    <tr class="""">
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Valuta Euro") + $@"</font></td>
							    </tr>
				");
                if (rsDettImporti.RecordCount > 0)
                {// then
                    rsDettImporti.MoveFirst();
                    while (!rsDettImporti.EOF)
                    {

                        htmlToReturn.Write($@"<tr class="""">");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsDettImporti["Descrizione"])) + @"</font></td>");

                        objFieldImporto.Init(2, "ImportiVari", rsDettImporti["Importo"], null, null, "###,###,##0.00###", false);

                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(objFieldImporto.TxtValue()) + @"</font></td>");
                        htmlToReturn.Write($@"</tr>");

                        rsDettImporti.MoveNext();
                    }
                }
                htmlToReturn.Write($@"
						</table>
					</td>
				</tr>

				");
                //set objFieldImporto = nothing

            }

        }


        //'--ALTRI REQUISITI
        if (!string.IsNullOrEmpty(CStr(RsBando["AltriRequisiti"]).Trim()))
        {
            htmlToReturn.Write($@"
			    <tr>
				    <th>" + ApplicationCommon.CNV("Altri Requisiti") + $@"</th>
				    <td >
				    " + CStr(RsBando["AltriRequisiti"]) + $@"
				    </td>
			    </tr>
		    ");
        }

        //'--PUBB GAZZETTA UFFICIALE
        TSRecordSet rsPubb;
        sqlParams.Clear();
        sqlParams.Add("@idDoc", CInt(idDoc));
        sSql = "select count(*) as NumPubb from ctl_doc_value with(nolock) where idheader =@idDoc and dse_id='InfoTec_DatePub' and dzt_name='Pubblicazioni'";
        rsPubb = GetRS(sSql, sqlParams);

        if (rsPubb.RecordCount > 0)
        {
            rsPubb.MoveFirst();
            int NumPubb = CInt(rsPubb["NumPubb"]!);

            if (NumPubb > 0)
            {
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                sqlParams.Add("@strSuffLing", CStr(session["strSuffLing"]));
                sSql = @"select isnull(M.ML_Description,DMV_DescML) as Pubblicazioni,I2.value as DataPubblicazioneBando,I3.value as NumeroPub, isnull(I4.value,'') as LinkTED
                            from ctl_doc_value I1 with(nolock)
                                inner join ctl_doc_value I2 with(nolock) on I2.row=I1.row  and I2.dse_id=I1.dse_id and I1.idheader = I2.idheader
                                inner join ctl_doc_value I3 with(nolock) on I3.row=I1.row  and I3.dse_id=I2.dse_id and I3.idheader = I2.idheader
                                left join ctl_doc_value I4 with(nolock) on I4.row=I1.row  and I4.dse_id=I2.dse_id and I4.idheader = I2.idheader
                                inner join LIB_DomainValues with(nolock) on DMV_DM_ID ='Pubblicazioni' and DMV_Cod=I1.value
                                left join lib_multilinguismo M with(nolock) on M.ML_KEY = DMV_DescML and M.ML_LNG =@strSuffLing
                                where  I1.dse_id='InfoTec_DatePub' and I1.idheader=@idDoc
                                   and I1.dzt_name='Pubblicazioni'
                                   and I2.dzt_name='DataPubblicazioneBando'
                                   and I4.dzt_name='TED_VER_PUB_TED_LINK'
                                   and I3.dzt_name='NumeroPub'";
                TSRecordSet rsDettPubb = GetRS(sSql, sqlParams);

                htmlToReturn.Write($@"

				    <tr>
					    <th>" + ApplicationCommon.CNV("Pubblicita Gazzetta Ufficiale") + $@"</th>
					    <td style=""padding:0px;"">
						    <table class=""GridPrintProducts"">
							    <tr class="""">
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Pubblicato su") + $@"</font></td>
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Data") + $@"</font></td>
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Numero") + $@"</font></td>
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Link TED") + $@"</font></td>
							    </tr>
				");
                if (rsDettPubb.RecordCount > 0)
                {
                    rsDettPubb.MoveFirst();
                    while (!rsDettPubb.EOF)
                    {

                        string linkTed = CStr(rsDettPubb["LinkTED"]);

                        if (!string.IsNullOrEmpty(linkTed))
                        {
                            linkTed = @"<a href=""" + Myhtmlencode(linkTed) + @""">" + Myhtmlencode(linkTed) + "</a>";
                        }

                        htmlToReturn.Write($@"<tr class="""">");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsDettPubb["Pubblicazioni"])) + "</font></td>");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(DOC_FIELD_Date(rsDettPubb.Fields["DataPubblicazioneBando"])) + "</font></td>");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsDettPubb["NumeroPub"])) + "</font></td>");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + linkTed + "</font></td>");
                        htmlToReturn.Write($@"</tr>");


                        rsDettPubb.MoveNext();
                    }
                }
                htmlToReturn.Write($@"
						    </table>
					    </td>
				    </tr>

			    ");
            }
        }

        //'--PUBBLICAZIONI
        TSRecordSet rsPubb1;
        sqlParams.Clear();
        sqlParams.Add("@idDoc", CInt(idDoc));
        sSql = "select count(*) as NumPubb from ctl_doc_value where idheader = @idDoc and dse_id='InfoTec_2DatePub' and dzt_name='Pubblicazioni'";
        rsPubb1 = GetRS(sSql, sqlParams);

        if (rsPubb1.RecordCount > 0)
        {
            rsPubb1.MoveFirst();
            int NumPubb1 = CInt(rsPubb1["NumPubb"]!);


            if (NumPubb1 > 0)
            {
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                sqlParams.Add("@strSuffLing", CStr(session["strSuffLing"]));
                sSql = @"select isnull(M.ML_Description,DMV_DescML) as Pubblicazioni,I2.value as DataPubblicazioneBando,I3.value as Comune
                                            from ctl_doc_value I1
                                               inner join ctl_doc_value I2 on I2.row=I1.row  and I2.dse_id=I1.dse_id and I1.idheader = I2.idheader
                                               inner join ctl_doc_value I3 on I3.row=I1.row  and I3.dse_id=I2.dse_id and I3.idheader = I2.idheader
                                               inner join LIB_DomainValues with(nolock) on DMV_DM_ID ='Pubblicazioni' and DMV_Cod=I1.value
                                               left join lib_multilinguismo M with(nolock) on M.ML_KEY = DMV_DescML and M.ML_LNG =@strSuffLing
                                            where  I1.dse_id='InfoTec_2DatePub' and I1.idheader=@idDoc
                                                   and I1.dzt_name='Pubblicazioni'
                                                   and I2.dzt_name='DataPubblicazioneBando'
                                                   and I3.dzt_name='Comune'";

                TSRecordSet rsDettPubb1 = GetRS(sSql, sqlParams);

                htmlToReturn.Write($@"

				    <tr>
					    <th>" + ApplicationCommon.CNV("Pubblicazioni") + $@"</th>
					    <td style=""padding:0px;"">
						    <table class=""GridPrintProducts"">
							    <tr class="""">
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Pubblicato su") + $@"</font></td>
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Comune") + $@"</font></td>
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Data") + $@"</font></td>
							    </tr>
				");
                if (rsDettPubb1.RecordCount > 0)
                {
                    rsDettPubb1.MoveFirst();
                    while (!rsDettPubb1.EOF)
                    {

                        htmlToReturn.Write($@"<tr class="""">");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsDettPubb1["Pubblicazioni"])) + "</font></td>");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsDettPubb1["comune"])) + "</font></td>");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts"" nowrap><font class=""PrintValues"">" + Myhtmlencode(DOC_FIELD_Date(rsDettPubb1.Fields["DataPubblicazioneBando"])) + "</font></td>");
                        htmlToReturn.Write($@"</tr>");

                        rsDettPubb1.MoveNext();
                    }
                }
                htmlToReturn.Write($@"
						    </table>
					    </td>
				    </tr>

			    ");
            }
        }

        //'--PUBBLICAZIONI SUI QUOTIDIANI
        TSRecordSet rsPubb2;
        sqlParams.Clear();
        sqlParams.Add("@idDoc", CInt(idDoc));
        sSql = "select count(*) as NumPubb from ctl_doc_value where idheader = @idDoc and dse_id='InfoTec_3DatePub' and dzt_name='Quotidiani'";
        rsPubb2 = GetRS(sSql, sqlParams);

        if (rsPubb2.RecordCount > 0)
        {
            rsPubb2.MoveFirst();
            int NumPubb2 = CInt(rsPubb2["NumPubb"]!);

            if (NumPubb2 > 0)
            {
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                sqlParams.Add("@strSuffLing", CStr(session["strSuffLing"]));
                sSql = @"select isnull(M.ML_Description,DMV_DescML) as Quotidiani,I2.value as DataPubblicazioneBando
                                            from ctl_doc_value I1
                                               inner join ctl_doc_value I2 on I2.row=I1.row  and I2.dse_id=I1.dse_id and I1.idheader = I2.idheader
                                               inner join Quotidiani on DMV_Cod=I1.value
                                               left join lib_multilinguismo M with(nolock) on M.ML_KEY = DMV_DescML and M.ML_LNG =@strSuffLing
                                            where  I1.dse_id='InfoTec_3DatePub' and I1.idheader=@idDoc
                                                   and I1.dzt_name='Quotidiani'
                                                   and I2.dzt_name='DataPubblicazioneBando'";

                TSRecordSet rsDettPubb2 = GetRS(sSql, sqlParams);

                htmlToReturn.Write($@"

				<tr>
					<th>" + ApplicationCommon.CNV("Pubblicazioni sui Quotidiani") + $@"</th>
					<td style=""padding:0px;"">
						<table class=""GridPrintProducts"">
							<tr class="""">
								<td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Quotidiani") + $@"</font></td>
								<td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Data") + $@"</font></td>
							</tr>
					");
                if (rsDettPubb2.RecordCount > 0)
                {
                    rsDettPubb2.MoveFirst();
                    while (!rsDettPubb2.EOF)
                    {

                        htmlToReturn.Write($@"<tr class="""">");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsDettPubb2["Quotidiani"])) + @"</font></td>");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(DOC_FIELD_Date(rsDettPubb2.Fields["DataPubblicazioneBando"])) + "</font></td>");
                        htmlToReturn.Write($@"</tr>");

                        rsDettPubb2.MoveNext();
                    }
                }
                htmlToReturn.Write($@"
						    </table>
					    </td>
				    </tr>

			    ");
            }
        }

        //'--CATEGORIA PREVALENTE
        TSRecordSet rsPubb3;
        sqlParams.Clear();
        sqlParams.Add("@idDoc", CInt(idDoc));
        sSql = "select count(*) as NumPubb from ctl_doc_value where idheader = @idDoc and dse_id='InfoTec_CategoriaPrevalente' and dzt_name='CategoriaSOA'";
        rsPubb3 = GetRS(sSql, sqlParams);

        if (rsPubb3.RecordCount > 0)
        {

            rsPubb3.MoveFirst();
            int NumPubb3 = CInt(rsPubb3["NumPubb"]!);

            if (NumPubb3 > 0)
            {
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                sqlParams.Add("@strSuffLing", CStr(session["strSuffLing"]));
                sSql = @"select isnull(M.ML_Description,L1.DMV_DescML) as CategoriaSOA ,isnull(M2.ML_Description,L2.DMV_DescML) as ClassificaSOA
                                            from ctl_doc_value I1 with(nolock)
                                            inner join ctl_doc_value I2 with(nolock)  on I2.row=I1.row  and I2.dse_id=I1.dse_id and I1.idheader = I2.idheader and I2.DZT_Name='ClassificaSOA'
                                            inner join LIB_DomainValues L1 with(nolock) on L1.DMV_DM_ID ='CategoriaSOA' and L1.DMV_Cod=I1.value
                                            inner join LIB_DomainValues L2 with(nolock) on L2.DMV_DM_ID ='ClassificaSOA' and L2.DMV_Cod=I2.value
                                            left join lib_multilinguismo M with(nolock) on M.ML_KEY = L1.DMV_DescML and M.ML_LNG =@strSuffLing
                                            left join lib_multilinguismo M2 with(nolock) on M.ML_KEY = L2.DMV_DescML and M.ML_LNG =@strSuffLing
                                            where  I1.dse_id='InfoTec_CategoriaPrevalente' and I1.IdHeader=@idDoc and I1.DZT_Name='CategoriaSOA' ";

                TSRecordSet rsDettPubb3 = GetRS(sSql, sqlParams);

                htmlToReturn.Write($@"

				    <tr>
					    <th>" + ApplicationCommon.CNV("Categoria Prevalente") + $@"</th>
					    <td style=""padding:0px;"">
						    <table class=""GridPrintProducts"">
							    <tr class="""">
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Categoria SOA") + $@"</font></td>
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Classifica") + $@"</font></td>
							    </tr>
				");
                if (rsDettPubb3.RecordCount > 0)
                {
                    rsDettPubb3.MoveFirst();
                    while (!rsDettPubb3.EOF)
                    {

                        htmlToReturn.Write($@"<tr class="""">");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsDettPubb3["CategoriaSOA"])) + "</font></td>");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsDettPubb3["ClassificaSOA"])) + "</font></td>");
                        htmlToReturn.Write($@"</tr>");

                        rsDettPubb3.MoveNext();
                    }
                }
                htmlToReturn.Write($@"
				            </table>
			            </td>
		            </tr>

	            ");
            }
        }

        //'--CATEGORIA Scorporabile
        TSRecordSet rsPubb4;
        sqlParams.Clear();
        sqlParams.Add("@idDoc", CInt(idDoc));
        sSql = "select count(*) as NumPubb from ctl_doc_value where idheader = @idDoc and dse_id='InfoTec_CategoriaScorporabile' and dzt_name='CategoriaSOA'";
        rsPubb4 = GetRS(sSql, sqlParams);

        if (rsPubb4.RecordCount > 0)
        {

            rsPubb4.MoveFirst();
            int NumPubb4 = CInt(rsPubb4["NumPubb"]!);

            if (NumPubb4 > 0)
            {
                sqlParams.Clear();
                sqlParams.Add("@idDoc", CInt(idDoc));
                sqlParams.Add("@strSuffLing", CStr(session["strSuffLing"]));
                sSql = @"select isnull(M.ML_Description,L1.DMV_DescML) as CategoriaSOA ,isnull(M2.ML_Description,L2.DMV_DescML) as ClassificaSOA
                                            from ctl_doc_value I1 with(nolock)
                                            inner join ctl_doc_value I2 with(nolock)  on I2.row=I1.row  and I2.dse_id=I1.dse_id and I1.idheader = I2.idheader and I2.DZT_Name='ClassificaSOA'
                                            inner join LIB_DomainValues L1 with(nolock) on L1.DMV_DM_ID ='CategoriaSOA' and L1.DMV_Cod=I1.value
                                            inner join LIB_DomainValues L2 with(nolock) on L2.DMV_DM_ID ='ClassificaSOA' and L2.DMV_Cod=I2.value
                                            left join lib_multilinguismo M with(nolock) on M.ML_KEY = L1.DMV_DescML and M.ML_LNG =@strSuffLing
                                            left join lib_multilinguismo M2 with(nolock) on M.ML_KEY = L2.DMV_DescML and M.ML_LNG =@strSuffLing
                                            where  I1.dse_id='InfoTec_CategoriaScorporabile' and I1.IdHeader=@idDoc and I1.DZT_Name='CategoriaSOA' ";

                TSRecordSet rsDettPubb4 = GetRS(sSql, sqlParams);

                htmlToReturn.Write($@"

				    <tr>
					    <th>" + ApplicationCommon.CNV("Categoria Scorporabile") + $@"</th>
					    <td style=""padding:0px;"">
						    <table class=""GridPrintProducts"">
							    <tr class="""">
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Categoria SOA") + $@"</font></td>
								    <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Classifica") + $@"</font></td>
							    </tr>
                ");

                if (rsDettPubb4.RecordCount > 0)
                {
                    rsDettPubb4.MoveFirst();
                    while (!rsDettPubb4.EOF)
                    {

                        htmlToReturn.Write($@"<tr class="""">");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsDettPubb4["CategoriaSOA"])) + @"</font></td>");
                        htmlToReturn.Write($@"<td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsDettPubb4["ClassificaSOA"])) + @"</font></td>");
                        htmlToReturn.Write($@"</tr>");

                        rsDettPubb4.MoveNext();
                    }
                }
                htmlToReturn.Write($@"
					        </table>
				        </td>
			        </tr>

		        ");
            }
        }

        htmlToReturn.Write($@"
            <tr>
				<th>" + ApplicationCommon.CNV("Note") + $@"</th>
				<td>" + HtmlEncode(CStr(RsBando["Note"])) + $@"</td>
			</tr>
        ");

        if (!string.IsNullOrEmpty(CStr(RsBando["SitoIstituzionale"])))
        {
            htmlToReturn.Write($@"
		        <tr>
			        <th>" + ApplicationCommon.CNV("Indirizzo Web") + $@"</th>
			        <td>" + HtmlEncode(CStr(RsBando["SitoIstituzionale"])) + $@"</td>
		        </tr>
		    ");
        }
        if (!string.IsNullOrEmpty(CStr(RsBando["AltroSitoWeb"])))
        {
            htmlToReturn.Write($@"
		        <tr>
			        <th>" + ApplicationCommon.CNV("Altro indirizzo web") + $@"</th>
			        <td>" + HtmlEncode(CStr(RsBando["AltroSitoWeb"])) + $@"</td>
		        </tr>
		    ");
        }

        htmlToReturn.Write($@"
                </tbody>
	        </table>


	        <br>
	        <br>


        ");


        //'--------------------------
        //'-- Toolbar LATO PORTALE
        //'--------------------------

        htmlToReturn.Write($@"
            <div id=""toolbarportale"">
        ");

        //'-- il comando di partecipa sul portale si attiva solo se la scadenza non Ã¨ stata raggiunta ed il tipodocumento ( tipoBando ) Ã¨ un Bando
        //'-- avvisi ed inviti non hanno modo di partecipare lato pubblico
        if (DateAndTime.Now.Ticks < CDate(RsBando.Fields["DataScadenzaOfferta"]).Ticks && DateAndTime.Now.Ticks >= CDate(RsBando.Fields["DataRiferimentoInizio"]).Ticks && TipoBandoGara == "2")
        {
            htmlToReturn.Write($@"
			        <input id=""Iscriviti"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Partecipa") + $@" onclick=""javascript:Partecipa('modalepartecipa');"" >
            ");
        }

        htmlToReturn.Write($@"
            </div>
 	        <br>


        ");
        <!--CHIARIMENTI-->
        <!--per l'affidamento diretto semplificato non è prevista la gestione dei quesiti, nascosta l'area ""Chiarimenti"" -->
        if (TipoProceduraCaratteristica != "AFFIDAMENTOSEMPLIFICATO")
        {
            htmlToReturn.Write($@"
		        <div id=CHIARIMENTI>

		        </div>
	        ");
        }

        //'--recupero la forma tecnica della data di scadenza
        string strdate;
        strdate = "";
        if (!string.IsNullOrEmpty(CStr(RsBando.Fields["DataTermineQuesiti"])))
        {

            Fld_Date objdate = new Fld_Date();
            objdate = new Fld_Date();//createobject("Ctlhtml.Fld_date")
            objdate.Init(6, "Data", RsBando.Fields["DataTermineQuesiti"], null, null, "");
            //'strdate=objdate.DateToStr(trim(DOC_Field("TESTATA","DataScadenza") ))
            strdate = objdate.SQLValue();
            strdate = strdate.Replace("'", "");
            strdate = strdate.Replace(" ", "T");

            //'strdate = "2014-11-01T10:59:00"
            //'response.write "DATA - [" & strdate & "] -  [" & trim(DOC_FieldTecnical("TESTATA","RichiestaQuesito") ) & "]"
            //'response.write strdate
        }

        htmlToReturn.Write($@"
            <!--CAMPI TECNICI DI LAVORO-->

	        <input type=""hidden"" id=""EXPIRYDATE""        name=""EXPIRYDATE"" value=""" + strdate + $@"""/>
	        <input type=""hidden"" id=""DOCUMENT""          name=""DOCUMENT"" value=""" + CStr(RsBando["tipodoc"]) + $@"""/>
	        <input type=""hidden"" id=""IDDOC_GUID""        name=""IDDOC_GUID"" value=""" + idDoc + $@"""/>
	        <input type=""hidden"" id=""IDDOC""             name=""IDDOC"" value=""" + idDoc + $@""">
	        <input type=""hidden"" id=""FASCICOLO""         name=""FASCICOLO"" value=""" + CStr(RsBando["Fascicolo"]).Trim() + $@"""/>
	        <input type=""hidden"" id=""PARAM_QUESITINEW""  value=""" + idDoc + $@"@""/>
	        <input type=""hidden"" id=""TIPODOC""           value=""" + CStr(RsBando["tipodoc"]) + $@"""/>
	        <input type=""hidden"" id=""TYPEDOC""           value=""" + CStr(RsBando["tipodoc"]) + $@"""/>
            <input type=""hidden"" id=""INFO_OE_ANONIME"" value=""YES""/>
        ");

        if (CStr(RsBando["StatoFunzionale"]).Trim() == "Revocato" || CBool(bIndiretto))
        {
            htmlToReturn.Write($@"
		        <input type=""hidden"" id=""SYS_INSERISCIQUESITIDALPORTALE"" value=""NO""/>
	        ");
        }
        else
        {
            if (TipoBandoGara != "3" || TipoProceduraCaratteristica == "AFFIDAMENTOSEMPLIFICATO")
            {
                htmlToReturn.Write($@"
		            <input type=""hidden"" id=""RichiestaQuesito"" value=""" + CStr(RsBando["RichiestaQuesito"]).Trim() + $@"""/>
		        ");
            }
            else
            {
                htmlToReturn.Write($@"
		           <input type=""hidden"" id=""RichiestaQuesito"" value=""3""/>
		        ");
            }
        }

        try
        {
            FreeMemDocument(session);
        }
        catch { }
    }
    drawContent();

    ViewData["mp_jsOnload"] = "apriDettaglioStampa();";
    ViewData["Title"] = DOC_FIELD_Dominio("TipoBandoGara", RsBando["TipoBandoGara"]);//Passare titolo della pagina al Layout (_masterPage.cshtml)
    ViewData["pathRoot"] = "../";//Passare la pathRoot al Layout (_masterPage.cshtml)
}
@Html.Raw(htmlToReturn.Out())
