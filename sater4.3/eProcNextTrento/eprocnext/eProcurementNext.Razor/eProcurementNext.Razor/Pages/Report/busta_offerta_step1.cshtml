@page "/Report/busta_offerta_step1.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using static eProcurementNext.Razor.Pages.Report.busta_offerta_step1Model;
@using Microsoft.VisualBasic;
@model eProcurementNext.Razor.Pages.Report.busta_offerta_step1Model
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
}
@{
	//dim objDB
	//dim rs
	//dim strQuery
	//dim Value
	//
	//set objDB = createobject( "ctldb.clsTabManage" )
	//
	//
	//strQuery = "select top 1 mfidmsg from messagefields where mffieldvalue = '" & replace(Request.QueryString("IDDOC"),"'","''") & "' order by mfidmsg asc"
	//
	//set rs = objDB.GetRSReadFromQuery( cstr( strQuery ) , Application("ConnectionString"))
	//
	//If Not (rs.EOF And rs.BOF) Then
	//
	//	rs.MoveFirst
	//	Value = rs.Fields("mfidmsg").Value
	//	
	//	set rs = nothing
	//	set objDB = nothing
	//	
	//	'-- Per superare il controllo di apertura dei documenti (documentPermission) metto in sessione
	//	'--   -10 , per non farglielo fare (è usato per i casi di invocazione pdf da server)
	//	
	//	session("IdPfu")=-10
	//	
	//	Response.Redirect "./busta_offerta.asp?" & Request.QueryString & "&lIdMsgPar=" & Value
	//	
	//else
	htmlToReturn.Write("Nessun messaggio trovato per IDDOC:" + GetParamURL(Request.QueryString.ToString(), "IDDOC"));

}@Html.Raw(htmlToReturn.Out())