@page "/Report/BANDO_SEMPLIFICATO.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using Microsoft.VisualBasic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.print_documentModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.masterPageToolsModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	Layout = ConfigurationServices.GetKey("LayoutVersion", "_masterPage");
}
@{
    CommonDbFunctions cdf = new();
    LoadSession(HttpContext, session);
    EprocResponse htmlToReturn = new();

    objDoc = PrintDocument(session, htmlToReturn, HttpContext, Response, Request);//PrintDocument ok
    var sqlParams = new Dictionary<string, object?>();
}
@{
    //'*******************************************
    //'*****  VALIDAZIONE DELL'INPUT UTENTE  *****
    //'*******************************************
    validate("IDDOC", CStr(GetParamURL(Request.QueryString.ToString(), "IDDOC")), TIPO_PARAMETRO_NUMERO, CInt(""), "", 1, HttpContext, session);
    validate( "DOCUMENT", GetParamURL(Request.QueryString.ToString(), "DOCUMENT").Replace(".","_") , TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);
    validate( "TYPEDOC", GetParamURL(Request.QueryString.ToString(), "TYPEDOC").Replace(".","_") , TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);

    int User = CInt(session["idPfu"]);
    string idDoc = GetParamURL(Request.QueryString.ToString(), "IDDOC");
 
    int OttenereVisibilitaSedutaVirtuale(string idDoc){
        //on error resume next
        int bVisualizzaSedutaVirtuale;
        bVisualizzaSedutaVirtuale = 0;

        //'-- verifica accesso seduta virtuale
        sqlParams.Clear();
        sqlParams.Add("@user", User);
        sqlParams.Add("@id", idDoc);
        TSRecordSet rsSedutaVirtuale = cdf.GetRSReadFromQuery_("EXEC SEDUTA_VIRTUALE_VERIFICA_ACCESSO @user , @id", ApplicationCommon.Application.ConnectionString, sqlParams);

        if (rsSedutaVirtuale.RecordCount > 0) 
        {
            bVisualizzaSedutaVirtuale = 1;
        }

        return bVisualizzaSedutaVirtuale;
    }

    object getAziRagioneSociale(string azienda)
    {
        //'on error resume next

        sqlParams.Clear();
        sqlParams.Add("@id", azienda);
        TSRecordSet rsAzi = cdf.GetRSReadFromQuery_("select * from aziende where idazi = @id", ApplicationCommon.Application.ConnectionString, sqlParams);
        if (rsAzi.RecordCount == 0)
        {// then
            return "";
        }
        else
        {
            return CStr(rsAzi["aziRagioneSociale"]);
        }
    }

    object getClasseIscrizione(string cod)
    {
        //on error resume next

        try
        {
            sqlParams.Clear();
            sqlParams.Add("@cod",cod);
            TSRecordSet rs = GetRS( "SELECT  v.DMV_DescML  FROM (SELECT 15  AS DMV_DM_ID, dgCodiceInterno AS DMV_Cod , '000.' + dgPath  AS DMV_Father , dgLivello AS DMV_Level , dscTesto AS DMV_DescML , CASE dgFoglia WHEN 1 THEN 'node.gif' ELSE 'folder.gif' END AS DMV_Image, 0 AS DMV_Sort  , CASE CHARINDEX('-', dscTesto) WHEN 0 THEN '0' ELSE LEFT(dscTesto, CHARINDEX('-', dscTesto) -  1) END AS DMV_CodExt FROM DominiGerarchici, DizionarioAttributi , DescsI WHERE dztNome = 'ClasseIscriz'AND dztIdTid = dgTipoGerarchia AND dztDeleted = 0 AND IdDsc = dgIdDsc AND dgDeleted = 0) v where DMV_COD=@cod",sqlParams );
            rs.MoveFirst();
            return CStr(rs[ "DMV_DescML" ]);
        }
        catch
        {
            return "";
        }
    }

    string PresenzaRevoca(string cod)
    {
        sqlParams.Clear();
        sqlParams.Add("@tipoDoc","PDA_COMUNICAZIONE_GENERICA");
        sqlParams.Add("@statoFunzionale", "Inviato");
        sqlParams.Add("@check", "0-REVOCA_BANDO");
        sqlParams.Add("@codice", cod);
        TSRecordSet rs = GetRS( "Select id from CTL_DOC,ctl_doc_allegati where idheader=id and Tipodoc=@tipoDoc and StatoFunzionale=@statoFunzionale and jumpcheck = @check and LinkedDoc=@codice",sqlParams);
        //'rs.moveFirst

        if (rs.RecordCount > 0)
        {			
            return "si";
        }
        else
        {
            return "no";					
        }
    }

    string PresenzaRevocaLotti(string cod)
    {
        sqlParams.Clear();
        sqlParams.Add("@tipoDoc","BANDO_REVOCA_LOTTO");
        sqlParams.Add("@funzionale", "Inviato");
        sqlParams.Add("@doc", cod);
        TSRecordSet rs = GetRS( "Select top 1 sign_attach from CTL_DOC where Tipodoc=@tipoDoc and StatoFunzionale=@funzionale and LinkedDoc=@doc" ,sqlParams );
        //'rs.moveFirst

        if (rs.RecordCount > 0)
        {// then			
            return "si";
        }
        else 
        {
            return "no";					
        }
    }

    void drawContent()
    {
        Fld_Attach objattach;
        int i;

        //' Codice che recuper la Caption del documento e la mette sulla stampa in testa alla pagina
        Caption obj = new();
        object caption = "";
        object Key_Caption = "";
        sqlParams.Clear();
        sqlParams.Add("@id",idDoc);
        TSRecordSet rs = cdf.GetRSReadFromQuery_("select ISNULL(M.ML_Description,L.DOC_DescML) as Caption , isnull(M.ML_Key,L.DOC_DescML) as Key_Caption from ctl_doc C inner join LIB_Documents L on L.DOC_ID=C.TIPODOC left join lib_multilinguismo M on M.ML_KEY = isnull(c.caption,L.DOC_DescML) where C.id=@id", ApplicationCommon.Application.ConnectionString, sqlParams);

        if (rs.RecordCount > 0) 
        {
            rs.MoveFirst();
            caption = rs.Fields["Caption"];
            Key_Caption = rs.Fields["Key_Caption"];
        }
        if (IsMasterPageNew())
        {
            htmlToReturn.Write($@"
                <table width=""100%"" class=""Caption"" border=""0"" cellspacing=""0"" cellpadding=""0""> 
                    <tbody>
                        <tr class=""pageTitle"">
                            <td> " + CStr(caption) + $@" </td>
                        </tr> 
                    </tbody>
                </table> 
            ");
        }
        else
        {
            htmlToReturn.Write(obj.SetCaption(CStr(caption)));
        }

        stackUpdateCurrentPosition("report", "report/bando_semplificato.asp?" + GetQueryStringFromContext(Request.QueryString), CStr(Key_Caption), session, HttpContext);

        htmlToReturn.Write($@"
            </div>

            <!--SUGGERIMENTI-->
            <div class=""tips"" id=""contenitoresuggerimento"">
                <div class=""tipsbar"">
                    <a href=""#suggerimento"">" + ApplicationCommon.CNV("Nascondi suggerimenti") + $@"</a>
                    <a href=""#suggerimento"" class=""suggest"">" + ApplicationCommon.CNV("Mostra suggerimenti") + $@"</a>
                </div>
                <div id=""suggerimento"" class=""tipscontent"">

                    " + ApplicationCommon.CNV("Suggerimento_Iscrizione SDA") + $@"
                    <br />
                    <br />

                </div>
            </div>

            <br />



            <!--TOOLBAR DI TESTA  E TITOLO-->


            <div id=""paginazione"" class=""paging"">
                <div class=""icons"">
                    <a href=""javascript:window.print();"" class=""print"">" + ApplicationCommon.CNV("StampaEffettiva") + $@"</a>
                </div>

                <!--ELEMENTI NASCOSTI PER TOOLBAR DI CODA-->
                <ul>

                    <li style=""display: none;""><a id=""modalepartecipa"" href=""" + ApplicationCommon.Application["WEBSERVERPORTALE"] + "/" + ApplicationCommon.Application["NOMEAPPPORTALE"] + $@"/modal/partecipa.asp?STRURLPARTECIPA=..%2F..%2F..%2F..%2FCtl_Library%2FDOCUMENT%2FPartecipa.asp%3FTIPODOC%3DISTANZA_SDA_FARMACI%26IdMsgPar%3D" + DOC_FieldTecnical("TESTATA", "LinkedDoc") + $@""" rel=""modal[620|350| ]"" title=""" + ApplicationCommon.CNV("Partecipa") + $@""">" + ApplicationCommon.CNV("Iscrizione") + $@"</a></li>

                </ul>

                <h2>" + getAziRagioneSociale(DOC_Field("TESTATA", "Azienda")) + $@"</h2>


            </div>


            <div id=""toolbarprivate"" class=""paging comandi"" style=""display: none;"">
                <div class=""icons1"">
                    <ul>
                        <li style=""background: url(" + ApplicationCommon.Application["WEBSERVERPORTALE"] + "/" + ApplicationCommon.Application["NOMEAPPPORTALE"] + $@"/images/stampa.jpg) center left no-repeat; padding: 28px; margin-top: 0px; margin-bottom: 0px;""><a style=""cursor: pointer;"" onclick=""javscript:window.print();"">" + ApplicationCommon.CNV("StampaEffettiva") + $@"</a></li>
                    </ul>
                </div>

                <div class=""comandi_interni"">
                    <ul>
        ");

        if (OttenereVisibilitaSedutaVirtuale(idDoc) == 1 ){
            htmlToReturn.Write($@"
                <li>         
                    <input id=""lnkSedutaVirtuale"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Seduta Virtuale") + $@""" onclick=""Javascript:MakeDocFrom( 'SEDUTA_VIRTUALE##BANDO_GARA#" + idDoc + $@"');"" ></li>
            ");
        }
        htmlToReturn.Write($@"
                <li>
                    <input id=""DocCollegati"" type=""button"" class=""btn"" value=""" + ApplicationCommon.CNV("Documenti Collegati") + $@""" onclick=""Javascript: OpenCollegati('"+ CStr(DOC_FieldTecnical("DOCUMENT","Fascicolo") ).Trim() + $@"');""></li>
        ");

        if (Strings.InStr(1,"," + ApplicationCommon.Application["MODULI_GRUPPI"] + "," ,"GROUP_Richieste_Accesso_Atti" ) > 0  &&  DateAndTime.Now.Ticks >= CDate(DOC_FieldTecnical("TESTATA","DataScadenzaOfferta")).Ticks ) {
            htmlToReturn.Write($@"
                <!--- comando per attivare il bottone di Richiesta Atti -->
                <li>
                    <input id=""Atti"" type=""button"" class=""btn"" value=""Richiesta Accesso Atti"" onclick=""Javascript: CREATE_ANSWER_NEW('../ctl_library/document/document.asp?JScript=RICHIESTA_ATTI_GARA&lo=base&DOCUMENT=RICHIESTA_ATTI_GARA&MODE=CREATEFROM&PARAM=BANDO," + idDoc + $@"');"">
                </li>
            ");
        }

        htmlToReturn.Write($@"
            </ul>
                </div>

            </div>

            <div id=""toolbarpublic"" class=""paging comandi"" style=""display: none;"">
                <div class=""icons1"">
                    <ul>
                        <li style=""background: url(" + ApplicationCommon.Application["WEBSERVERPORTALE"] + "/" + ApplicationCommon.Application["NOMEAPPPORTALE"] + $@"/images/stampa.jpg) center left no-repeat; padding: 28px; margin-top: 0px; margin-bottom: 0px;""><a style=""cursor: pointer;"" onclick=""javscript:window.print();"">" + ApplicationCommon.CNV("StampaEffettiva") + $@"</a></li>

                    </ul>
                </div>

                <div class=""comandi_interni"">
                    <ul>

                        <li>
                            <input id=""DocCollegati"" type=""button"" class=""btn"" value=""" + ApplicationCommon.CNV("Documenti Collegati") + $@""" onclick=""Javascript: OpenCollegati('" + CStr(DOC_FieldTecnical("DOCUMENT","Fascicolo") ).Trim() + $@"');""></li>

        ");

        if (Strings.InStr(1,"," + ApplicationCommon.Application["MODULI_GRUPPI"] + "," ,"GROUP_Richieste_Accesso_Atti" ) > 0  && DateAndTime.Now.Ticks >=  CDate(DOC_FieldTecnical("TESTATA","DataScadenzaOfferta")).Ticks ){
            htmlToReturn.Write($@"
                <!--- comando per attivare il bottone di Richiesta Atti -->
                <li>
                    <input id=""Atti"" type=""button"" class=""btn"" value=""Richiesta Accesso Atti"" onclick=""Javascript: CREATE_ANSWER_NEW('../ctl_library/document/document.asp?JScript=RICHIESTA_ATTI_GARA&lo=base&DOCUMENT=RICHIESTA_ATTI_GARA&MODE=CREATEFROM&PARAM=BANDO," + idDoc + $@"');"">
                </li>
             ");
        }

        htmlToReturn.Write($@"
            </ul>
                </div>

            </div>



            <table id=""template_doc"">


                <thead>
                    <tr>
                        <th colspan=""4"" align=""left"" nowrap>" + ApplicationCommon.CNV("Bando - Dettagli") + $@"</th>
                    </tr>
                </thead>

                <tbody>

                    <!-- INIZIO DAti di dettaglio del bando -->
                    <tr>
                        <th>
                            " + ApplicationCommon.CNV("Descrizione breve") + $@"</th>
                        <td>
                            " + DOC_Field("TESTATA","Body") + $@"</td>
                    </tr>
        ");

        if (!string.IsNullOrEmpty(CStr(DOC_Field("TESTATA","CIG") ).Trim()) ){
            htmlToReturn.Write($@"
                <tr>
                    <th>" + ApplicationCommon.CNV("CIG") + $@":</th>
                    <td>" + DOC_Field("TESTATA","CIG") + $@"</td>
                </tr>
            ");
        }

        htmlToReturn.Write($@"
            <tr>
                <th>
                    " + ApplicationCommon.CNV("Rup") + $@"</th>
                <td>
                    " + DOC_Field("TESTATA", "UserRUP") + $@"</td>
            </tr>
            <tr>
                <th>
                    " + ApplicationCommon.CNV("Importo appalto") + $@"</th>
                <td>
                    " + DOC_Field("TESTATA", "ImportoBaseAsta") + $@" &euro;</td>
            </tr>
            <tr>
                <th>
                    " + ApplicationCommon.CNV("Criterio aggiudicazione") + $@"</th>
                <td>
                    " + DOC_Field("TESTATA", "CriterioAggiudicazioneGara") + $@"</td>
            </tr>
            <tr>
                <th>
                    " + ApplicationCommon.CNV("Tipo Appalto") + $@"</th>
                <td>
                    " + DOC_Field("TESTATA", "TipoAppaltoGara") + $@"</td>
            </tr>


            <tr>
                <th>
                    " + ApplicationCommon.CNV("Bando SDA di riferimento") + $@"</th>
                <td>
                    " + DOC_Field("TESTATA", "ProtocolloRiferimento") + $@"</td>
            </tr>
            <tr>
                <th>
                    " + ApplicationCommon.CNV("Descrizione breve SDA") + $@"</th>
                <td>
                    " + DOC_Field("TESTATA", "DescrizioneRichiesta") + $@"</td>
            </tr>


        ");


        if (!string.IsNullOrEmpty( CStr(DOC_Field("TESTATA","DataTermineQuesiti") ).Trim() ) && CStr(DOC_Field("TESTATA","DataTermineQuesiti") ).Trim() != "&nbsp;"){
            htmlToReturn.Write($@"

            <tr>
                <th>" + ApplicationCommon.CNV("Termine richiesta quesiti") + $@":</th>
                <td>" + DOC_Field("TESTATA","DataTermineQuesiti") + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>
            </tr>

            ");
        }


        if (!string.IsNullOrEmpty(CStr(DOC_Field("TESTATA","DataScadenzaOfferta") ).Trim()) && CStr(DOC_Field("TESTATA","DataScadenzaOfferta") ).Trim() != "&nbsp;"){
            htmlToReturn.Write($@"

            <tr>
                <th>" + ApplicationCommon.CNV("Presentare le offerte entro il") + $@":</th>
                <td>" + DOC_Field("TESTATA","DataScadenzaOfferta") + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>
            </tr>

            ");
        }

        //'--verifico se devo nascondere a prescindere il campo DataAperturaOfferte da parametri
        dynamic Nascondo_DataAperturaOfferte = Get_Func_Property("BANDO_SEMPLIFICATOBANDO_SEMPLIFICATO.ASP", "DataAperturaOfferte", "HIDE", "0", CInt("-1"));
        if (CStr(Nascondo_DataAperturaOfferte) == "0"){

            if (!string.IsNullOrEmpty(CStr(DOC_Field("TESTATA","DataAperturaOfferte") ).Trim()) && CStr(DOC_Field("TESTATA","DataAperturaOfferte") ).Trim() != "&nbsp;"  ){
                htmlToReturn.Write($@"
                    <tr>
                        <th>" + ApplicationCommon.CNV("Data I Seduta") + $@":</th>
                        <td>" + DOC_Field("TESTATA", "DataAperturaOfferte") + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>
                    </tr>
                ");
            }

        }

        htmlToReturn.Write($@"
            <!---se questa griglia BANDO.rettifiche è vuota nasconderla-->
            <!--tr>
                <th>
                    #DATADOC id='cnv.Avvisi di Rettifica'/#</th>
                <td>
                    #DATADOC id='BANDO.rettifiche' /#</td>
            </tr-->
            <!-- FINE Dati di dettaglio del bando -->
        ");

        if (DOC_NumRow( "DOCUMENTAZIONE", "" ) > 0 ){
            htmlToReturn.Write($@"
                <tr>
                <th>" + ApplicationCommon.CNV("Atti") + $@":</th>
                <td style=""padding: 0px;"">

                    <table class=""GridPrintProducts"">
                        <tr class="""">

                            <td class=""CellIntestGrid""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
                            <td class=""CellIntestGrid""><font class=""PrintCols"">" + ApplicationCommon.CNV("Allegato") + $@"</font></td>
                        </tr>


            ");
            objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
            if (!string.IsNullOrEmpty(CStr(ApplicationCommon.Application["NOMEAPPLICAZIONE"]))){
                objattach.Path = "/" + CStr(ApplicationCommon.Application["NOMEAPPLICAZIONE"]) + "/";
            }else{
                objattach.Path = "/application/";
            }

            //'-- disegnare la griglia della documentazione
            //dim i
            //stop
            int nr;

            nr = DOC_NumRow("DOCUMENTAZIONE", "");
            for (i = 0; i<= nr - 1; i++){// to nr-1

                objattach.Init(18, "Allegato", DOC_FieldRowTecnical("DOCUMENTAZIONE", "Allegato", i), null, null, "IN", true);


                htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + DOC_FieldRow("DOCUMENTAZIONE", "Descrizione", i) + @"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                objattach.Html(htmlToReturn, false);
                htmlToReturn.Write($@"</font></td></tr>");

            }

            htmlToReturn.Write($@"
                        </table>


                    </td>
                </tr>
            ");

        }

        //'-- gli allegati di Revoca si vedono se il documento non è un invito oppure sono stato invitato
        //'--Stampa Allegati Revoca se presente
        //dim strRevocaLotti
        string strRevocaLotti = PresenzaRevocaLotti(idDoc);
        //'Response.Write strRevocaLotti
        //'Response.end
        if (PresenzaRevoca(idDoc) == "si" || strRevocaLotti == "si")
        {
            htmlToReturn.Write($@"
                <tr>
                <th>" + ApplicationCommon.CNV("Avvisi di Revoca") + $@":</th>
                <td style=""padding: 0px;"">

                    <table class=""GridPrintProducts"">
                        <tr class="""">

                            <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
                            <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Allegato") + $@"</font></td>
                        </tr>


            ");
            //dim rsrevoca
            sqlParams.Clear();
            sqlParams.Add("@id",idDoc);
            sqlParams.Add("@stato", "Revocato");
            TSRecordSet rsrevoca = GetRS("Select Descrizione,Allegato from ctl_doc c " +
                        "inner join ctl_doc c2 on c2.linkedDoc=c.id and c2.tipodoc='PDA_COMUNICAZIONE_GENERICA' " +
                        "and c2.StatoFunzionale='Inviato' and c2.jumpcheck='0-REVOCA_BANDO' " +
                        "inner join ctl_doc_allegati on  idheader=c2.id " +
                        "where c.id=@id and c.StatoFunzionale=@stato",sqlParams);
            if (rsrevoca.RecordCount > 0)
            {
                objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                if (!string.IsNullOrEmpty(CStr(ApplicationCommon.Application["NOMEAPPLICAZIONE"]))){
                    objattach.Path = "/" + CStr(ApplicationCommon.Application["NOMEAPPLICAZIONE"]) + "/";
                }else{
                    objattach.Path = "/application/";
                }

                //'for i = 1 to rsrevoca.recordcount
                rsrevoca.MoveFirst();

                while (!rsrevoca.EOF)
                {

                    objattach.Init(18, "Allegato", rsrevoca.Fields["Allegato"], null, null, "IN", true);

                    htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsrevoca.Fields["Descrizione"])) + @"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                    objattach.Html(htmlToReturn, false);
                    htmlToReturn.Write($@"</font></td></tr>");

                    rsrevoca.MoveNext();
                }
            }

            //'--se ci sono aggiungo gli allegati dei documenti BANDO_REVOCA_LOTTO
            if (strRevocaLotti == "si")
            {

                string[] aInfoAttachRevoca;
                TSRecordSet rsRevocaLotti;

                //'--recupero tutti i documenmti BANDO_REVOCA_LOTTO inviati
                sqlParams.Clear();
                sqlParams.Add("@tipo","BANDO_REVOCA_LOTTO");
                sqlParams.Add("@funzionale", "Inviato");
                sqlParams.Add("@doc", idDoc);
                rsRevocaLotti = GetRS(CStr("Select isnull(sign_attach,'') as sign_attach from CTL_DOC where Tipodoc=@tipo and StatoFunzionale=@funzionale and LinkedDoc=@doc"),sqlParams);

                if (rsRevocaLotti.RecordCount > 0)
                {

                    rsRevocaLotti.MoveFirst();

                    while (!rsRevocaLotti.EOF)
                    {

                        if (!string.IsNullOrEmpty(CStr(rsRevocaLotti.Fields["sign_attach"])))
                        {

                            objattach = new Fld_Attach();
                            objattach.Init(18, "Allegato", rsRevocaLotti.Fields["sign_attach"], null, null, "IN", true);

                            aInfoAttachRevoca = Strings.Split(CStr(rsRevocaLotti.Fields["sign_attach"]), "*");

                            htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(aInfoAttachRevoca[0]) + @"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                            objattach.Html(htmlToReturn, false);
                            htmlToReturn.Write($@"</font></td></tr>");

                        }

                        rsRevocaLotti.MoveNext();

                    }
                }

            }

            htmlToReturn.Write($@"
                    </table>

                    </td>
                </tr>
            ");

        }
        sqlParams.Clear();
        sqlParams.Add("@tipo","avviso_gara");
        sqlParams.Add("@stato", "Inviato");
        sqlParams.Add("@doc", CStr(CLng(idDoc)));
        TSRecordSet rsAvvisi = GetRS("select note, SIGN_ATTACH, DataInvio from ctl_doc with(nolock) where tipodoc = @tipo and StatoFunzionale = @stato and deleted = 0 and linkeddoc = @doc order by datainvio desc",sqlParams);

        if (rsAvvisi.RecordCount > 0 ){

            rsAvvisi.MoveFirst();
            htmlToReturn.Write($@"
                <!-- AVVISI DI GARA -->
                <tr>
                    <th>" + ApplicationCommon.CNV("Avvisi di Gara") + $@":</th>

                    <td style=""padding: 0px;"">

                        <table class=""GridPrintProducts"">
                            <tr class="""">

                                <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
                                <td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Allegato") + $@"</font></td>
                            </tr>
            ");

            for (i = 1; i <= rsAvvisi.RecordCount; i++){//to rsAvvisi.recordcount

                objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                objattach.Init(18, "Allegato", rsAvvisi.Fields["SIGN_ATTACH"], null, null, "IN", true);

                htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + Myhtmlencode(CStr(rsAvvisi.Fields["note"])) + @"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                objattach.Html(htmlToReturn, false);
                htmlToReturn.Write($@"</font></td></tr>");

                rsAvvisi.MoveNext();

                //set objattach=nothing

            }

            htmlToReturn.Write($@"
                    </table>

                    </td>

                </tr>
            ");
        }

        htmlToReturn.Write($@"


                    <tr>
                        <th>" + ApplicationCommon.CNV("Note") + $@":</th>
                        <td>" + DOC_Field("NOTE", "Note") + $@" </td>
                    </tr>
                </tbody>
            </table>


            <br />
            <br />
            <div id=""toolbarportale"">
            </div>
            <br />
            <!--CHIARIMENTI-->
            <div id=""CHIARIMENTI"">
            </div>

        ");

        //'--recupero la forma tecnica della data di scadenza
        string strdate;
        strdate = "";
        if (!string.IsNullOrEmpty(DOC_FieldTecnical("TESTATA", "DataTermineQuesiti"))) {

            //dim objdate
            Fld_Date objdate = new Fld_Date();//createobject("Ctlhtml.Fld_date")
            objdate.Init(6, "", DOC_FieldTecnical("TESTATA", "DataTermineQuesiti"));
            //'strdate=objdate.DateToStr(trim(DOC_Field("TESTATA","DataScadenza") ))
            strdate = objdate.SQLValue();
            strdate = strdate.Replace("'", "");
            strdate = strdate.Replace(" ", "T");
        }

        htmlToReturn.Write($@"
            <!--CAMPI TECNICI DI LAVORO-->

            <input type=""hidden"" id=""EXPIRYDATE"" name=""EXPIRYDATE"" value=""" + strdate + $@""">

            <input type=""hidden"" id=""DOCUMENT"" name=""DOCUMENT"" value=""BANDO_SEMPLIFICATO"">
            <input type=""hidden"" id=""IDDOC_GUID"" name=""IDDOC_GUID"" value=""" + idDoc + $@""">
            <input type=""hidden"" id=""FASCICOLO"" name=""FASCICOLO"" value=""" + CStr(DOC_FieldTecnical("DOCUMENT", "Fascicolo")).Trim() + $@""">
            <input type=""hidden"" id=""PARAM_QUESITINEW"" value=""" + idDoc + $@"@"">
            <input type=""hidden"" id=""TIPODOC"" value=""BANDO_SDA"">


            <input type=""hidden"" id=""RichiestaQuesito"" value=""" + CStr(DOC_FieldTecnical("TESTATA", "RichiestaQuesito")).Trim() + $@""">

            <!--input type=""hidden"" id=""RichiestaQuesito"" value=""1""-->
            <input type=""hidden"" id=""SYS_INSERISCIQUESITIDALPORTALE"" value=""SI"" />

        ");

        try{
            FreeMemDocument(session);
        }catch{}



    }



    drawContent();

    ViewData["mp_jsOnload"] = "apriDettaglioStampa();";
    ViewData["Title"] = ApplicationCommon.CNV( "Bando semplificato" );//Passare titolo della pagina al Layout (_masterPage.cshtml)
    ViewData["pathRoot"] = "../";//Passare la pathRoot al Layout (_masterPage.cshtml)

}
@Html.Raw(htmlToReturn.Out())