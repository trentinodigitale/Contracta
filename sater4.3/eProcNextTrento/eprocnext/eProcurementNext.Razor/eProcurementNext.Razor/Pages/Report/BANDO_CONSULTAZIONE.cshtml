@page "/Report/BANDO_CONSULTAZIONE.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using Microsoft.VisualBasic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.print_documentModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.masterPageToolsModel
@{
	Layout = ConfigurationServices.GetKey("LayoutVersion", "_masterPage");
}
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
}
@{
    int User = CInt(session["idPfu"]);

    objDoc = PrintDocument(session, htmlToReturn, HttpContext, Response, Request);//PrintDocument ok
    string idDoc = objDoc.mp_IDDoc;
    var sqlParams = new Dictionary<string, object?>();

    //'-- verifica se il fornitore sta partecipando
    sqlParams.Add("@user", User);
    sqlParams.Add("@id", CInt(idDoc));
    TSRecordSet rsPartecipante = cdf.GetRSReadFromQuery_("select * from CTL_DOC_Destinatari d inner join ProfiliUtente p on pfuIdAzi = IdAzi where  p.IdPfu = @user and idHeader = @id", ApplicationCommon.Application.ConnectionString, sqlParams);

    dynamic getAziRagioneSociale(string azienda)
    {
        //'on error resume next

        sqlParams.Clear();
        sqlParams.Add("@idazi",azienda);
        TSRecordSet rsAzi = cdf.GetRSReadFromQuery_("select * from aziende with(nolock) where idazi = @idazi", ApplicationCommon.Application.ConnectionString, sqlParams);
        if (rsAzi.RecordCount == 0)
        {// then
            return "";
        }
        else
        {
            return rsAzi.Fields["aziRagioneSociale"];
        }
    }

    string PrintDataORA(string strDataOda)
    {
        return Strings.Left( strDataOda , 10 ) + " " + ApplicationCommon.CNV("ore") + " " + Strings.Right( strDataOda , 8 );
    }

    dynamic getClasseIscrizione( string cod ){

        //on error resume next
        //dim rs
        try
        {
            sqlParams.Clear();
            sqlParams.Add("@cod",cod);
            sqlParams.Add("@nome", "ClasseIscriz");
            TSRecordSet rs = GetRS( "SELECT  v.DMV_DescML  FROM (SELECT 15  AS DMV_DM_ID, dgCodiceInterno AS DMV_Cod , '000.' + dgPath  AS DMV_Father , dgLivello AS DMV_Level , dscTesto AS DMV_DescML , CASE dgFoglia WHEN 1 THEN 'node.gif' ELSE 'folder.gif' END AS DMV_Image, 0 AS DMV_Sort  , CASE CHARINDEX('-', dscTesto) WHEN 0 THEN '0' ELSE LEFT(dscTesto, CHARINDEX('-', dscTesto) -  1) END AS DMV_CodExt FROM DominiGerarchici, DizionarioAttributi , DescsI WHERE dztNome = @nome AND dztIdTid = dgTipoGerarchia AND dztDeleted = 0 AND IdDsc = dgIdDsc AND dgDeleted = 0) v where DMV_COD=@cod",sqlParams );

            if (rs.RecordCount > 0)
            {// then
                rs.MoveFirst();
                return CStr(rs[ "DMV_DescML" ]);
            }
        }
        catch
        {
            
        }

        return "";
    }

    string PresenzaRevoca(string cod)
    {
        sqlParams.Clear();
        sqlParams.Add("@tipoDoc","PDA_COMUNICAZIONE_GENERICA");
        sqlParams.Add("@statoFunzionale", "Inviato");
        sqlParams.Add("@check", "0-REVOCA_BANDO");
        sqlParams.Add("@cod", cod);
        TSRecordSet rs = GetRS("Select id from CTL_DOC with(nolock),ctl_doc_allegati with(nolock) where idheader=id and Tipodoc=@tipoDoc and StatoFunzionale=@statoFunzionale and jumpcheck = @check and LinkedDoc=@cod",sqlParams);
        //'rs.moveFirst

        if (rs.RecordCount > 0)
        {// then			
            return "si";
        }
        else
        {
            return "no";					
        }
    }

    string PresenzaProroga(string cod)
    {
        sqlParams.Clear();
        sqlParams.Add("@tipoDoc","PROROGA_CONSULTAZIONE");
        sqlParams.Add("@statofunzionale", "Inviato");
        sqlParams.Add("@check", "BANDO_CONSULTAZIONE");
        sqlParams.Add("@codice", cod);
        TSRecordSet rs = GetRS("Select id from CTL_DOC with(nolock) where Tipodoc=@tipoDoc and StatoFunzionale=@statofunzionale and jumpcheck = @check and LinkedDoc=@codice",sqlParams);
        //'rs.moveFirst

        if (rs.RecordCount > 0)
        {
            return "si";
        }
        else
        {
            return "no";					
        }
    }

    string PresenzaRettifica(string cod)
    {
        sqlParams.Clear();
        sqlParams.Add("@tipoDoc","RETTIFICA_CONSULTAZIONE");
        sqlParams.Add("@statoFunzionale", "Inviato");
        sqlParams.Add("@check", "BANDO_CONSULTAZIONE");
        sqlParams.Add("@cod", cod);
        TSRecordSet rs = GetRS( "Select id from CTL_DOC with(nolock) where Tipodoc=@tipoDoc and StatoFunzionale=@statoFunzionale and jumpcheck = @check and LinkedDoc=@cod",sqlParams );
        //'rs.moveFirst

        if (rs.RecordCount > 0)
        {// then			
            return "si";
        }
        else
        {
            return "no";					
        }

        //set rs = nothing	
    }

    dynamic getDataTermineQuesitiOriginale(string cod){
        //dim rs
        sqlParams.Clear();
        sqlParams.Add("@id", cod);
        sqlParams.Add("@dse_id","TESTATA");
        sqlParams.Add("@name", "OLD_DataTermineQuesiti");
        TSRecordSet rs = GetRS("Select  convert(varchar(10),cast(value as datetime),103)+' '+convert(varchar(8),cast(value as datetime),114)  as DataOriginale from ctl_doc_value where idheader=( Select  min(c2.id) from ctl_doc c inner join  ctl_doc c2 on c2.linkedDoc=c.id and c2.tipodoc in ( 'RETTIFICA_CONSULTAZIONE','PROROGA_CONSULTAZIONE') where c.id=@id) and DSE_ID=@dse_id and Dzt_name=@name ",sqlParams);

        if (rs.RecordCount > 0){// then			
            rs.MoveFirst();
            return rs.Fields["DataOriginale"];
        }else{
            return "";
        }
    }

    dynamic getDataScadenzaOfferta(string cod)
    {
        sqlParams.Clear();
        sqlParams.Add("@id", cod);
        sqlParams.Add("@dse_id","TESTATA");
        sqlParams.Add("@name", "OLD_DataPresentazioneRisposte");
        TSRecordSet rs = GetRS( "Select  convert(varchar(10),cast(value as datetime),103)+' '+convert(varchar(8),cast(value as datetime),114)  as DataOriginale from ctl_doc_value where idheader=( Select  min(c2.id) from ctl_doc c inner join  ctl_doc c2 on c2.linkedDoc=c.id and c2.tipodoc in ( 'RETTIFICA_CONSULTAZIONE','PROROGA_CONSULTAZIONE')  where c.id=@id) and DSE_ID=@dse_id and Dzt_name=@name ",sqlParams );

        if (rs.RecordCount > 0)
        {// then		
            rs.MoveFirst();
            return rs.Fields["DataOriginale"];
        }
        else
        {
            return "";				
        }
    }

    dynamic getDataAperturaOfferte(string cod)
    {
        sqlParams.Clear();
        sqlParams.Add("@id", cod);
        sqlParams.Add("@dse_id","TESTATA");
        sqlParams.Add("@name", "OLD_DataSeduta");
        TSRecordSet rs = GetRS("Select  convert(varchar(10),cast(value as datetime),103)+' '+convert(varchar(8),cast(value as datetime),114)  as DataOriginale from ctl_doc_value where idheader=( Select  min(c2.id) from ctl_doc c inner join  ctl_doc c2 on c2.linkedDoc=c.id and c2.tipodoc in ( 'RETTIFICA_CONSULTAZIONE','PROROGA_CONSULTAZIONE')  where c.id=@id) and DSE_ID=@dse_id and Dzt_name=@name ",sqlParams);

        if (rs.RecordCount > 0)
        {// then	
            rs.MoveFirst();
            return rs.Fields["DataOriginale"];
        }
        else
        {
            return "";				
        }
    }

    string SogliaAllegatiSuperata(string cod)
    {
        string strToReturn;
        sqlParams.Clear();
        sqlParams.Add("@id", cod);
        sqlParams.Add("@dse_id", "SOGLIA_ALLEGATI");
        sqlParams.Add("@name", "MAX_SOGLIA_ALLEGATI_SUPERATA");
        sqlParams.Add("@value", "YES");
        TSRecordSet rs = GetRS("Select idrow from ctl_doc_value with (nolock) where idheader=@id and DSE_ID=@dse_id and DZT_NAME=@name and value=@value",sqlParams);

        strToReturn = "NO";				

        if (rs is not null)
        {//then
            if (rs.RecordCount > 0)
            {	
                rs.MoveFirst();			
                strToReturn= "YES";
            }
            else
            {
                strToReturn="NO";					
            }
        }

        return strToReturn;
    }

    int bPartecipante;
    bPartecipante = 0;
    if (rsPartecipante.RecordCount > 0)
    {// then
        bPartecipante = 1;
    }

    void drawContent()
    {
        stackUpdateCurrentPosition("report", "report/BANDO_CONSULTAZIONE.asp?" + GetQueryStringFromContext(Request.QueryString), ApplicationCommon.CNV("Consultazioni Preliminari di Mercato"), session, HttpContext);

        //' Codice che recuper la Caption del documento e la mette sulla stampa in testa alla pagina

        Caption obj = new Caption();//createobject( "CtlHtml.Caption" )
                                    //set objdb = server.CreateObject("ctldb.clsTabManage")
                                    //dim rs
        dynamic caption="";
        sqlParams.Clear();
        sqlParams.Add("@id", idDoc);
        TSRecordSet rs = cdf.GetRSReadFromQuery_("select ISNULL(M.ML_Description,L.DOC_DescML) as Caption from ctl_doc C inner join LIB_Documents L on L.DOC_ID=C.TIPODOC left join lib_multilinguismo M on M.ML_KEY=L.DOC_DescML where C.id=@id", ApplicationCommon.Application.ConnectionString, sqlParams);

        if (rs.RecordCount > 0){//then
            rs.MoveFirst();
            caption = rs.Fields["Caption"];
        }
        //set objdb = nothing		
        if (IsMasterPageNew())
        {
            htmlToReturn.Write($@"
                <table width=""100%"" class=""Caption"" border=""0"" cellspacing=""0"" cellpadding=""0"">
                    <tbody>
                        <tr class=""pageTitle"">
                            <td> " + CStr(caption) + $@" </td>
                        </tr>
                    </tbody>
                </table>
            ");
        }
        else
        {
            htmlToReturn.Write(obj.SetCaption(CStr(caption)));
        }
        //set obj = nothing

        htmlToReturn.Write($@"


	        <!--SUGGERIMENTI solo sul portale -->                        		                      	
            <div class=""tips"" id=""contenitoresuggerimento"">
  	            <div class=""tipsbar"">
    		        <a href=""#suggerimento"">" + ApplicationCommon.CNV("Nascondi suggerimenti") + $@"</a>
      		        <a href=""#suggerimento"" class=""suggest"">" + ApplicationCommon.CNV("Mostra suggerimenti") + $@"</a>
  	            </div>
  	            <div id=""suggerimento"" class=""tipscontent"">

  	               "); //'-- da rivedere in funzione delle caratteristiche di gara, aperta ,ristretta,negoziata,invito ecc.. 
        htmlToReturn.Write($@"
                   " + ApplicationCommon.CNV("Suggerimento_Iscrizione GARA") + $@"


                   <br>
	               <br>

                </div>
            </div>            

  	        <br>



	        <!--TOOLBAR DI TESTA  E TITOLO-->      

            ");
        //'--------------------------
        //'-- Toolbar LATO PORTALE 
        //'--------------------------
        htmlToReturn.Write($@"
            <div id=""paginazione"" class=""paging"" >  
                <div class=""icons"">
                    <a href=""javascript:window.print();"" class=""print"">" + ApplicationCommon.CNV("StampaEffettiva") + $@"</a>  
                </div>




           </div>

            ");
        //'--------------------------
        //'-- Toolbar lato applicazione BANDI PUBBLICI
        //'--------------------------
        htmlToReturn.Write($@"
            <div id=toolbarprivate class=""paging comandi"" style=""display:none;"">

                <div class=""icons1"">
                    <ul>
                        <li style=""background:url(" + ApplicationCommon.Application["WEBSERVERPORTALE"] + "/" + ApplicationCommon.Application["NOMEAPPPORTALE"] + $@"/images/stampa.jpg) center left no-repeat; padding:28px;margin-top:0px;margin-bottom:0px; "" ><a style=""cursor:pointer;"" onclick=""javscript:window.print();"">" + ApplicationCommon.CNV("StampaEffettiva") + $@"</a></li> 
                    </ul>
                </div>

                <div class=""comandi_interni"" att=2 >
                    <ul>

        ");

        if (DOC_Field("DOCUMENT", "StatoFunzionale").Trim() != "Revocato" && DOC_Field("DOCUMENT", "StatoFunzionale").Trim() != "Bando In Rettifica") {
            if (DateAndTime.Now.Ticks < CDate(DOC_FieldTecnical("TESTATA", "DataScadenzaOfferta")).Ticks) {
                htmlToReturn.Write($@"
                    <li><input id=""Iscriviti"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Partecipa") + $@""" onclick=""Javascript:CREATE_ANSWER_NEW('../Ctl_Library/Document/Partecipa.asp?TIPODOC=RISPOSTA_CONSULTAZIONE&IdMsgPar=" + idDoc + $@"');"" ></li>
                ");
            } 
        }

        htmlToReturn.Write($@"
                            <li><input id=""DocCollegati"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Documenti Collegati") + $@""" onclick=""Javascript:OpenCollegati_NEW('" + DOC_FieldTecnical("TESTATA","Fascicolo").Trim()  + $@"');"" ></li>
        ");

        if (SogliaAllegatiSuperata(idDoc) != "YES" ){
            htmlToReturn.Write($@"
        	<li><input id=""ScaricaAllegati"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Scarica Allegati") + $@""" onclick=""Javascript:ScaricaAllegati('TMP_DIFF=" + DateAndTime.Now.Ticks + $@"&HIDECOL=ValoreImportoLotto&OPERATION=DOWNLOAD&DOCUMENT=BANDO_CONSULTAZIONE&IDDOC=" + idDoc + $@"&MODEL=&URL_EXTRA_ATTACH=../../Report/avvisi_di_revoca.asp,../../Report/avvisi_di_proroga.asp,../../Report/avvisi_di_rettifica.asp');""></li>			
            ");
        }else{
            htmlToReturn.Write($@"
            <li><input id=""ScaricaAllegati"" type=button  class=""btn disabled"" value=""" + ApplicationCommon.CNV("Scarica Allegati") + $@""" title=""" + HtmlEncode ( ApplicationCommon.CNV("Scarica Allegati disabilitato per soglia superata")) + $@""" ></li>
            ");
        }

        htmlToReturn.Write($@"
                    <li><input id=""Chiudi"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Chiudi") + $@""" onclick=""Javascript:breadCrumbPop();"" ></li>
                    </ul>
                </div>

            </div>
        ");

        //'--------------------------
        //'-- Toolbar lato applicazione BANDI PRIVATI a cui stai partecipandi
        //'--------------------------

        htmlToReturn.Write($@"
                    <div id=toolbarpublic class=""paging comandi"" style=""display:none;"">
            <div class=""icons1"">
                <ul>
                    <li style=""background:url(" + ApplicationCommon.Application["WEBSERVERPORTALE"] + "/" + ApplicationCommon.Application["NOMEAPPPORTALE"] + $@"/images/stampa.jpg) center left no-repeat; padding:28px;margin-top:0px;margin-bottom:0px; "" ><a style=""cursor:pointer;"" onclick=""javscript:window.print();"">" + ApplicationCommon.CNV("StampaEffettiva") + $@"</a></li> 

                </ul>
            </div>

            <div class=""comandi_interni"" att=1>
                <ul>
        ");

        if (DOC_Field("DOCUMENT","StatoFunzionale").Trim() != "Revocato"  && DOC_Field("DOCUMENT","StatoFunzionale").Trim() != "Bando In Rettifica" ) {
            if (DateAndTime.Now.Ticks < CDate( DOC_FieldTecnical("TESTATA","DataScadenzaOfferta") ).Ticks  ){
                htmlToReturn.Write($@"
						<li><input id=""Iscriviti"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Partecipa") + $@""" onclick=""Javascript:CREATE_ANSWER_NEW('../Ctl_Library/Document/Partecipa.asp?TIPODOC=RISPOSTA_CONSULTAZIONE&IdMsgPar=" + idDoc + $@"');"" ></li>
                ");
            }
        }

        if (SogliaAllegatiSuperata(idDoc) != "YES") {
            htmlToReturn.Write($@"	
                <li><input id=""ScaricaAllegati"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Scarica Allegati") + $@""" onclick=""Javascript:ScaricaAllegati('TMP_DIFF=" + DateAndTime.Now.Ticks + $@"&HIDECOL=ValoreImportoLotto&OPERATION=DOWNLOAD&DOCUMENT=BANDO_CONSULTAZIONE&IDDOC=" + idDoc + $@"&MODEL=&URL_EXTRA_ATTACH=../../Report/avvisi_di_revoca.asp,../../Report/avvisi_di_proroga.asp,../../Report/avvisi_di_rettifica.asp');""></li>			
            ");
        }else{
            htmlToReturn.Write($@"	
                <li><input id=""ScaricaAllegati"" type=button  class=""btn disabled"" value=""" + ApplicationCommon.CNV("Scarica Allegati") + $@""" title=""" + HtmlEncode ( ApplicationCommon.CNV("Scarica Allegati disabilitato per soglia superata")) + $@""" ></li>
            ");
        }

        htmlToReturn.Write($@"
                <li><input id=""Chiudi"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Chiudi") + $@""" onclick=""Javascript:breadCrumbPop();"" ></li>

                </ul>
            </div>

        </div>





	    <table id=""template_doc"" >


		    <thead>
			    <tr>
				    <th colspan=""4"" align=left nowrap>
        ");
        htmlToReturn.Write("Consultazione - Dettagli");

        htmlToReturn.Write($@"
                    </th>
			        </tr>
		        </thead>

		        <tbody>	



	        <!-- INIZIO DAti di dettaglio del bando -->
			        <tr>
				        <th>
				        " + ApplicationCommon.CNV("Oggetto") + $@"</th>
				        <td>
				        <strong>
        ");

        if (DOC_Field("DOCUMENT","StatoFunzionale").Trim() == "Revocato"){// then %>
            htmlToReturn.Write(ApplicationCommon.CNV("bando revocato") + " - ");
        }
        if (DOC_Field("DOCUMENT","StatoFunzionale").Trim() == "Bando In Rettifica"){// then %>
            htmlToReturn.Write(ApplicationCommon.CNV("Bando In Rettifica") + " - ");
        }
        if (DOC_Field("DOCUMENT","StatoFunzionale").Trim() != "Revocato" && DOC_Field("DOCUMENT","StatoFunzionale").Trim() != "Bando In Rettifica" && ( PresenzaProroga(idDoc) == "si"  || PresenzaRettifica(idDoc) == "si" ) ){
            htmlToReturn.Write(ApplicationCommon.CNV("bando rettificato") + " - ");
        }

        htmlToReturn.Write($@"
            </strong>" + DOC_Field("TESTATA", "Body") + $@"</td>
			</tr>



			<tr>
				<th>
					" + ApplicationCommon.CNV("Incaricato") + $@"</th>
				<td>
					" + DOC_Field("TESTATA", "UserRUP") + $@"</td>
			</tr>
        ");

        if (DOC_Field("TESTATA","DataTermineQuesiti")  != "&nbsp;" ){
            htmlToReturn.Write($@"
				<tr>
					<th>" + ApplicationCommon.CNV("Termine richiesta quesiti") + $@":</th> ");
            if (PresenzaProroga(idDoc) == "si" || PresenzaRettifica(idDoc) == "si" ){
                htmlToReturn.Write($@"<td>");
                htmlToReturn.Write($@"<b>Data Originale</b> - " + PrintDataORA(getDataTermineQuesitiOriginale(idDoc)) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]");
                htmlToReturn.Write($@"<b> Data Prorogata</b> - " + PrintDataORA(DOC_Field("TESTATA", "DataTermineQuesiti")) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>");
            }else{
                htmlToReturn.Write($@"<td >" + PrintDataORA(DOC_Field("TESTATA", "DataTermineQuesiti")) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>");
            }
            htmlToReturn.Write($@"<tr>");
        }

        if (DOC_Field("TESTATA","DataScadenzaOfferta")  != "&nbsp;"  ){
            htmlToReturn.Write($@"
			<tr>
				<th>");			
            htmlToReturn.Write(ApplicationCommon.CNV("Presentare le risposte entro il"));
            htmlToReturn.Write($@":</th> ");
            if (PresenzaProroga(idDoc) == "si" || PresenzaRettifica(idDoc) == "si"){
                htmlToReturn.Write($@"<td>");
                htmlToReturn.Write($@"<b>Data Originale</b> - " + PrintDataORA(getDataScadenzaOfferta(idDoc)) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]");
                htmlToReturn.Write($@"<b> Data Prorogata</b> - " + PrintDataORA(DOC_Field("TESTATA", "DataScadenzaOfferta")) + $@"[" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>");
            }else{
                htmlToReturn.Write($@"<td >" + PrintDataORA(DOC_Field("TESTATA", "DataScadenzaOfferta")) + $@" [" + ApplicationCommon.CNV("Ora Italiana") + $@"]</td>");
            }
            htmlToReturn.Write($@"</tr>");
        }

        if (DOC_Field("TESTATA","Appalto_Verde") == "si" ){
            htmlToReturn.Write($@"	

				<tr>
					<th>
            ");						
            htmlToReturn.Write(ApplicationCommon.CNV("Motivazione Appalto Verde"));

            htmlToReturn.Write($@":
					</th> 						
					<td>
						" + DOC_Field("TESTATA","Motivazione_Appalto_Verde")  + $@"
					</td>

				</tr>

			");

        }

        if (DOC_Field("TESTATA","Acquisto_Sociale") == "si" ){
            htmlToReturn.Write($@"	

				<tr>
					<th>
            ");						
            htmlToReturn.Write(ApplicationCommon.CNV("Motivazione Acquisto Sociale"));

            htmlToReturn.Write($@":
					</th> 						
					<td>
						" + DOC_Field("TESTATA","Motivazione_Acquisto_Sociale") + $@"
					</td>

				</tr>
			");
        }

        htmlToReturn.Write($@"
            <!---se questa griglia BANDO.rettifiche � vuota nasconderla-->
			<!--tr>
				<th>
					#DATADOC id='cnv.Avvisi di Rettifica'/#</th>
				<td>
					#DATADOC id='BANDO.rettifiche' /#</td>
			</tr-->
			<!-- FINE Dati di dettaglio del bando -->
        ");

        htmlToReturn.Write($@"


			<tr>
				<th>" + ApplicationCommon.CNV("Documentazione") + $@":</th>   
				<td style=""padding:0px;"">


						<table class=""GridPrintProducts""><tr class="""">

							<td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
							<td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Allegato") + $@"</font></td></tr>
        ");

        Fld_Attach objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
        if (!string.IsNullOrEmpty(CStr(ApplicationCommon.Application["NOMEAPPLICAZIONE"]))){
            objattach.Path = "/" + CStr(ApplicationCommon.Application["NOMEAPPLICAZIONE"]) + "/";
        }else{
            objattach.Path = "/application/";
        }

        //'-- disegnare la griglia della documentazione
        int i;
        //stop
        int nr;
        nr = DOC_NumRow("DOCUMENTAZIONE", "");
        for (i = 0; i<= nr-1;i++){// to nr-1

            objattach.Init(18, "Allegato", DOC_FieldRowTecnical("DOCUMENTAZIONE", "Allegato", i), null, null, "IN",true);


            htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + DOC_FieldRow("DOCUMENTAZIONE", "Descrizione", i) + @"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
            objattach.Html(htmlToReturn, false);
            htmlToReturn.Write($@"</font></td></tr>");

        }

        htmlToReturn.Write($@"
            </table>



				</td>
			</tr>
        ");

        //'--Stampa Allegati Proroga o rettifica se presente
        if (PresenzaProroga(idDoc) == "si" || PresenzaRettifica(idDoc) == "si" ){
            htmlToReturn.Write($@"


							<tr>
								<th>" + ApplicationCommon.CNV("Avvisi di Rettifica") + $@":</th>   
							<td style=""padding:0px;"">

									<table class=""GridPrintProducts""><tr class="""">

									<td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
									<td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Allegato") + $@"</font></td></tr>

			");

            //dim rsproroga
            sqlParams.Clear();
            sqlParams.Add("@id", idDoc);
            TSRecordSet rsproroga = GetRS("Select Descrizione,Allegato from ctl_doc c " +
                                "inner join ctl_doc c2 on c2.linkedDoc=c.id and c2.tipodoc='PROROGA_CONSULTAZIONE' " +
                                "and c2.StatoFunzionale='Inviato' and c2.jumpcheck='BANDO_CONSULTAZIONE' " +
                                "inner join ctl_doc_allegati on  idheader=c2.id where c.id=@id",sqlParams);		

            if (rsproroga.RecordCount > 0){// then
                objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                if (!string.IsNullOrEmpty(CStr(ApplicationCommon.Application["NOMEAPPLICAZIONE"]))){
                    objattach.Path = "/" + CStr(ApplicationCommon.Application["NOMEAPPLICAZIONE"]) + "/";
                }else{
                    objattach.Path = "/application/";
                }

                for (i = 1; i<= rsproroga.RecordCount; i++){//to rsproroga.recordcount
                    objattach.Init(18, "Allegato", rsproroga.Fields["Allegato"], null, null, "IN", true);

                    htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + rsproroga.Fields["Descrizione"] + @"</font></td><td class=""linkAttachment""><font class=""PrintValues"">"); 
                    objattach.Html(htmlToReturn, false);
                    htmlToReturn.Write($@"</font></td></tr>");

                    rsproroga.MoveNext();
                }
            }


            //dim rsrettifica

            TSRecordSet rsrettifica = GetRS("Select Descrizione,Allegato from ctl_doc c " +
                                "inner join ctl_doc c2 on c2.linkedDoc=c.id and c2.tipodoc='RETTIFICA_CONSULTAZIONE' " +
                                "and c2.StatoFunzionale='Inviato' and c2.jumpcheck='BANDO_CONSULTAZIONE' " +
                                "inner join ctl_doc_allegati on  idheader=c2.id where c.id=@id",sqlParams);		

            if (rsrettifica.RecordCount > 0){// then
                objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                if (!string.IsNullOrEmpty(CStr(ApplicationCommon.Application["NOMEAPPLICAZIONE"]))){
                    objattach.Path = "/" + CStr(ApplicationCommon.Application["NOMEAPPLICAZIONE"]) + "/";
                }else{
                    objattach.Path = "/application/";
                }

                for (i = 1; i<= rsrettifica.RecordCount; i++){ //to rsrettifica.recordcount
                    objattach.Init(18, "Allegato", rsrettifica.Fields["Allegato"], null, null, "IN", true);

                    htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + rsrettifica.Fields["Descrizione"] + $@"</font></td><td class=""linkAttachment""><font class=""PrintValues"">"); 
                    objattach.Html(htmlToReturn, false);
                    htmlToReturn.Write("</font></td></tr>");

                    rsrettifica.MoveNext();
                }
            }

            htmlToReturn.Write($@"
                </table>	 

							</td>
						</tr>
            ");

        }

        htmlToReturn.Write($@"<!-- AVVISI DI GARA -->	");
        sqlParams.Clear();
        sqlParams.Add("@tipoDoc","avviso_gara");
        sqlParams.Add("@statoFunzionale","Inviato");
        sqlParams.Add("@doc", CStr(CLng(idDoc)));
        TSRecordSet rsAvvisi = GetRS("select note, SIGN_ATTACH, DataInvio from ctl_doc with(nolock) where tipodoc =@tipoDoc and StatoFunzionale = @statoFunzionale and deleted = 0 and linkeddoc =@doc ",sqlParams);

        if (rsAvvisi.RecordCount > 0)
        {// then
            rsAvvisi.MoveFirst();
            htmlToReturn.Write($@"
                <tr>
					<th>" + ApplicationCommon.CNV("Avvisi di Gara") + $@":</th>   

					<td style=""padding:0px;"">

							<table class=""GridPrintProducts""><tr class="""">

								<td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Descrizione") + $@"</font></td>
								<td class=""CellIntestGrid"" width=""50%""><font class=""PrintCols"">" + ApplicationCommon.CNV("Allegato") + $@"</font></td></tr>


            ");


            for (i = 1; i <= rsAvvisi.RecordCount; i++)
            { //to rsAvvisi.recordcount

                objattach = new Fld_Attach();//CreateObject("ctlhtml.fld_attach")
                objattach.Init(18, "Allegato", rsAvvisi.Fields["SIGN_ATTACH"], null, null, "IN", true);

                htmlToReturn.Write($@"<tr class=""""><td valign="""" class=""CellGridPrintProducts""><font class=""PrintValues"">" + HtmlEncode(CStr(rsAvvisi.Fields["note"])) + @"</font></td><td class=""linkAttachment""><font class=""PrintValues"">");
                objattach.Html(htmlToReturn, false);
                htmlToReturn.Write($@"</font></td></tr>");

                rsAvvisi.MoveNext();

                //set objattach=nothing

            }

            htmlToReturn.Write($@"
                </table>	 

					</td>

				</tr>
            ");

        }

        htmlToReturn.Write($@"
                    <tr>
				        <th>" + ApplicationCommon.CNV("Note") + $@":</th> 
				        <td >" + DOC_Field("NOTE","Note") + $@" </td>
			        </tr>
		        </tbody>
	        </table>


	        <br>
	        <br>
        ");

        //'--------------------------
        //'-- Toolbar LATO PORTALE 
        //'--------------------------
        htmlToReturn.Write($@"<div id=""toolbarportale"">");

        //'-- il comando di partecipa sul portale si attiva solo se la scadenza non � stata raggiunta ed il tipodocumento ( tipoBando ) � un Bando
        //'-- avvisi ed inviti non hanno modo di partecipare lato pubblico
        if (DateAndTime.Now.Ticks < CDate(DOC_FieldTecnical("TESTATA", "DataScadenzaOfferta")).Ticks) {// then
            htmlToReturn.Write($@"
                <input id=""Iscriviti"" type=button  class=""btn"" value=""" + ApplicationCommon.CNV("Partecipa") + $@" onclick=""javascript:Partecipa('modalepartecipa');"" >
            ");
        }

        htmlToReturn.Write($@"
            </div>
 	        <br>	 

	        <!--CHIARIMENTI-->  
	        <div id=CHIARIMENTI>

	        </div>
        ");

        string strdate;
        strdate = "";
        if (!string.IsNullOrEmpty(DOC_FieldTecnical("TESTATA","DataTermineQuesiti"))){

            //dim objdate
            Fld_Date objdate = new Fld_Date();//createobject("Ctlhtml.Fld_date")
            objdate.Init(6, "", DOC_FieldTecnical("TESTATA", "DataTermineQuesiti"));
            //'strdate=objdate.DateToStr(trim(DOC_Field("TESTATA","DataScadenza") ))
            strdate = objdate.SQLValue();
            strdate = strdate.Replace("'","");
		    strdate = strdate.Replace(" ","T");
		
		    //'response.write "DATA - [" & strdate & "] -  [" & trim(DOC_FieldTecnical("TESTATA","RichiestaQuesito") ) & "]"
	    }
        htmlToReturn.Write($@"
            <!--CAMPI TECNICI DI LAVORO-->

	        <input type=hidden id=""EXPIRYDATE"" name=""EXPIRYDATE"" value=""" + strdate + $@""">
	        <input type=hidden id=""DOCUMENT"" name=""DOCUMENT"" value=""BANDO_CONSULTAZIONE"">
	        <input type=hidden id=""IDDOC_GUID"" name=""IDDOC_GUID"" value=""" + idDoc + $@""">
	        <input type=hidden id=""FASCICOLO"" name=""FASCICOLO"" value=""" + DOC_FieldTecnical("TESTATA","Fascicolo").Trim() + $@""">
	        <input type=hidden id=""PARAM_QUESITINEW"" value=""" + idDoc + $@"@"">
	        <input type=hidden id=""TIPODOC"" value=""BANDO_CONSULTAZIONE"">
        ");

        if (DOC_Field("DOCUMENT","StatoFunzionale").Trim() == "Revocato"){
            htmlToReturn.Write($@"
		        <input type=hidden id=""SYS_INSERISCIQUESITIDALPORTALE"" value=""NO"">
	        ");
        }else{
            //TipoBandoGara nè definito nè valorizzato
		    //if (TipoBandoGara != "3"){
            if ("" != "3"){
                htmlToReturn.Write($@"
			        <input type=hidden id=""RichiestaQuesito"" value=""" + DOC_FieldTecnical("TESTATA","RichiestaQuesito").Trim() + $@""">
		        ");
            }else{
                htmlToReturn.Write($@"
			        <input type=hidden id=""RichiestaQuesito"" value=""3"">
		        ");
            }
	    }


        try{
            FreeMemDocument(session);
        }catch{}
    }



    drawContent();

    ViewData["mp_jsOnload"] = "apriDettaglioStampa();";
    ViewData["Title"] = ApplicationCommon.CNV( "Consultazioni Preliminari di Mercato" );//Passare titolo della pagina al Layout (_masterPage.cshtml)
    ViewData["pathRoot"] = "../";//Passare la pathRoot al Layout (_masterPage.cshtml)

}
@Html.Raw(htmlToReturn.Out())