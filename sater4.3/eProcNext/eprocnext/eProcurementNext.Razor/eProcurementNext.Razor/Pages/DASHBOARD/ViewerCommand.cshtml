@page "/DASHBOARD/ViewerCommand.asp"
@using eProcurementNext.Application
@using eProcurementNext.CommonDB
@using eProcurementNext.DashBoard
@using eProcurementNext.CommonModule
@using Microsoft.VisualBasic
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.intestModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.CommonModule.Basic;
@inject eProcurementNext.Session.ISession session;
@using static eProcurementNext.Session.SessionMiddleware
@model eProcurementNext.Razor.Pages.DASHBOARD.ViewerCommandModel
@{
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new EprocResponse(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
}
@{

	validate("IDLISTA", (CStr(GetParamURL(Request.QueryString.ToString(), "FILTER_USER_PROFILE")).Replace(",", "")).Replace("~", ""), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);
	validate("TABLE", CStr(GetParamURL(Request.QueryString.ToString(), "TABLE")), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);
	validate("KEY", CStr(GetParamURL(Request.QueryString.ToString(), "KEY")), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);
	validate("FIELD", CStr(GetParamURL(Request.QueryString.ToString(), "FIELD")).Replace(":", ""), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);

	if(!string.IsNullOrEmpty(CStr(GetParamURL(Request.QueryString.ToString(), "BUFFER"))))
	{
		//'-- riporto il valore del buffer nella CTL_IMPORT
		string idpfu = CStr(session["idpfu"]);
		string strSql = "Delete from ctl_import where idpfu=" + idpfu + ";Insert into CTL_IMPORT (idpfu,A) Values (" + idpfu + ",'" + GetParamURL(Request.QueryString.ToString(), "BUFFER").Replace("'", "''") + "')";
		//'response.write strSql
		//'response.end
		CommonDbFunctions cdb = new CommonDbFunctions();
		cdb.Execute(strSql, ApplicationCommon.Application["ConnectionString"]);

	}
	StartPage(htmlToReturn);
	if (CStr(session["HomePageLight"]) == "1" ){
		htmlToReturn.Write("<script>var BrowseInPage=1;</script>" + Environment.NewLine);
	}else{
		htmlToReturn.Write("<script>var BrowseInPage=0;</script>" + Environment.NewLine);
	}
	ViewerCommand view = new ViewerCommand(HttpContext,session,htmlToReturn);
	view.run(htmlToReturn);

	if (CStr(GetParamURL(Request.QueryString.ToString(), "ajax")) != "1" ){

		htmlToReturn.Write("</body>");
		htmlToReturn.Write("</html>");
			
	}

}@Html.Raw(htmlToReturn.Out())