@page "/AVCP/AVCP_LOAD.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using Microsoft.VisualBasic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@model eProcurementNext.Razor.Pages.AVCP.AVCP_LOADModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new CommonDbFunctions();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new EprocResponse(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));

	int lIdpfu=-20;
	string backoffice = GetParamURL(Request.QueryString.ToString(), "backoffice");
	if(backoffice.ToUpper() != "YES")
	{
		lIdpfu = session["IdPfu"];
	}
	//'public function OPEN_DOCUMENT_AVCP_POPOLAMENTO()
	string sql = "";
	string Ente = "";
	string Anno = "";
	string idPopolamento = "";
	string RagioneSociale = "";
	string Titolo = "";
	string ErrText = "";
	int ICON_MSG = 0;
	string CAPTION_MSG = "";

	validate("ENTE", GetParamURL(Request.QueryString.ToString(), "ENTE"), TIPO_PARAMETRO_INT, SOTTO_TIPO_VUOTO, "", 1, HttpContext, session);
	validate("ANNO",GetParamURL(Request.QueryString.ToString(), "ANNO"), TIPO_PARAMETRO_INT, SOTTO_TIPO_VUOTO, "", 1, HttpContext, session);
	Ente = GetParamURL(Request.QueryString.ToString(), "ENTE");
	Anno = GetParamURL(Request.QueryString.ToString(), "ANNO");
	Dictionary <string,object> SqlParameters = new Dictionary<string, object>();
	SqlParameters.Add("@tipoDoc", "AVCP_POPOLAMENTO");
	SqlParameters.Add("@completato", "Completato");
	SqlParameters.Add("@pubblicato", "Pubblicato");
	SqlParameters.Add("@ente", Ente);
	SqlParameters.Add("@anno", Anno);
	//'-- verifica la presenza di un documento non ancora completato per l'ente/Anno richiesto in quel caso lo apre
	sql = " select Id from CTL_DOC with(nolock) where TipoDoc = @tipoDoc and statofunzionale not in ( @completato , @pubblicato )  and azienda =@ente  and NumeroDocumento = @anno ";

	TSRecordSet rs = cdf.GetRSReadFromQuery_(sql, ApplicationCommon.Application.ConnectionString, SqlParameters);
	// '-- se esiste prendo l'id Per riaprirlo
	if(rs.RecordCount >0)
	{
		rs.MoveFirst();
		idPopolamento = CStr(rs["Id"]);
		ErrText = "Attenzione per Ente sul periodo indicato in corso un aggiornamento. Verificare la cartella Elaborazioni in corso";
		ICON_MSG = 1;
		CAPTION_MSG = "INFO";
	}
	else
	{
		SqlParameters.Clear();
		SqlParameters.Add("@azi", CInt(Ente));
		//'--recupero ragione sociale ente
		sql = "select aziRagioneSociale from Aziende with (nolock) where IdAzi = @azi";
		rs = cdf.GetRSReadFromQuery_(sql, ApplicationCommon.Application.ConnectionString, SqlParameters);
		if(rs.RecordCount >0)
		{
			rs.MoveFirst();
			RagioneSociale = CStr(rs["aziRagioneSociale"]);
		}
		//'--Titolo = "Aggiornamento dati AVCP per " & RagioneSociale & " anno " & + Anno
		Titolo = $"Aggiornamento dati adempimenti Legge 190 per {RagioneSociale} anno {Anno}";
		//'--ExecSQL sql
		//'set rs = GetRS(sql)
		//'if rs.recordcount > 0 then
		//
		//'	rs.movefirst
		//
		//'	idPopolamento = rs("id").value
		//	
		//'	set rs = nothing
		//	
		//	'-- creiamo un nuovo documento
		sql = "BEGIN TRANSACTION" + Environment.NewLine;
		sql = sql + "begin try" + Environment.NewLine;
		sql = sql + "declare @Id as int " + Environment.NewLine;
		sql = sql + "insert into CTL_DOC ( tipoDoc , idPfu , Azienda , NumeroDocumento , statofunzionale , Titolo ) values ( 'AVCP_POPOLAMENTO' ,  " + lIdpfu + " , '" + Ente + "' , '" + Anno + "' , 'InLavorazione' , '" + Titolo.Replace("'", "''") + "' )" + Environment.NewLine;
		sql = sql + "set @Id = scope_identity() " + Environment.NewLine;

		//'--inserisco entrata nella tabella 
		SqlParameters.Clear();
		SqlParameters.Add("@tipoDoc", "AVCP_POPOLAMENTO");
		SqlParameters.Add("@idpfu", lIdpfu);
		SqlParameters.Add("@ente", Ente);
		SqlParameters.Add("@titolo", Titolo);
		SqlParameters.Add("@tipo", "AVCP");
		SqlParameters.Add("@stato", "InLavorazione");
		SqlParameters.Add("@popolamento", "POPOLAMENTO");
		sql = sql + "insert into CTL_ELABORAZIONI_SCHEDULATE " + Environment.NewLine;
		sql = sql + "([IdDoc], [TipoDoc], [Idpfu], [Azienda], [Titolo], [DataInizio], [PercAvanzamento], [Deleted], [StatoFunzionale], [DataUltimaElaborazione], [DPR_DOC_ID], [DPR_ID])" + Environment.NewLine;
		sql = sql + "	values " + Environment.NewLine;
		sql = sql + "(@Id, @tipoDoc, @idpfu, @ente, @titolo, getdate(), 0, 0, @stato, null, @tipo, @popolamento)" + Environment.NewLine;
		sql = sql + "end try" + Environment.NewLine;
		sql = sql + "begin catch" + Environment.NewLine;
		sql = sql + "rollback transaction" + Environment.NewLine;
		sql = sql + "end catch" + Environment.NewLine;
		sql = sql + "COMMIT TRANSACTION" + Environment.NewLine;

		//'response.write sql & "@@@ERRORE@@@1"
		//'response.end
		try
		{
			rs = cdf.GetRSReadFromQuery_(sql, ApplicationCommon.Application.ConnectionString, SqlParameters);
		}
		catch
		{
			ErrText = "Errore nella generazione della Richiesta schedulata, si prega di ripetere l'operazione";
			ICON_MSG = 3;
			CAPTION_MSG = "ERRORE";
		}
		ErrText = @"Richiesta schedulata. Per controllare avanzamento aprire la cartella ""Elaborazioni in corso""";
		ICON_MSG = 1;
		CAPTION_MSG = "INFO";
		//'else

		//'	ErrText = "Errore nella generazione della Richiesta schedulata, si prega di ripetere l'operazione"
		//'	ICON_MSG = 3
		//'	CAPTION_MSG = "ERRORE"

		//'end if


	}
	htmlToReturn.Write(ErrText + "@@@" + CAPTION_MSG + "@@@" + ICON_MSG);
	throw new ResponseEndException(htmlToReturn.Out(), Response, ErrText + "@@@" + CAPTION_MSG + "@@@" + ICON_MSG);
	//'Response.Redirect "../ctl_library/MessageBoxWin.asp?ML=YES&MSG=" & ErrText  & "&CAPTION="& CAPTION_MSG &"&ICO=" & ICON_MSG
	//
	//'-- reidirizzo la pagina sull'apertura del documento
	//'Response.Redirect "../ctl_library/document/document.asp?MODE=SHOW&COMMAND=RELOAD&JScript=AVCP_POPOLAMENTO&DOCUMENT=AVCP_POPOLAMENTO&IDDOC=" & idPopolamento & "&CUR_FLD_SELECTED_ON_DOC=&lo=" & Request.QueryString ("lo") & "&SHOWCAPTION=" & Request.QueryString ("SHOWCAPTION") & "&NEW_WIN=" & Request.QueryString ("NEW_WIN")
	
	
	//'end function
	//
	//
	//'function NEXT_STEP(   )
	//
	//		
	//
	//'    dim sql 
	//'    dim ID_DOC_POPOLAMENTO
	//'    dim idStep
	//'	dim idPopolamento
	//    
	//'	call validate( "IDDOC", request.querystring("IDDOC"), TIPO_PARAMETRO_INT, SOTTO_TIPO_VUOTO, "", 1)
	//'	call validate( "STEP", request.querystring("STEP"), TIPO_PARAMETRO_INT, SOTTO_TIPO_VUOTO, "", 1)
	//
	//'	ID_DOC_POPOLAMENTO = request.querystring("IDDOC")
	//'	idStep = request.querystring("STEP")
	//
	//	
	//	
	//'	sql = "exec Avcp_Popola_da_DOC_STEP  " & ID_DOC_POPOLAMENTO & " , " & idStep
	//		
	//
	//'	set rs = GetRS(sql)
	//'	if err.number = 0 then
	//'		if rs.recordcount > 0 then
	//
	//'			rs.movefirst
	//
	//'			response.write  rs("Result").value
	//		
	//'		end if
	//'	else	
	//'		response.write ""
	//'	end if
	//	
	//	
	//'end function	
}@Html.Raw(htmlToReturn.Out())