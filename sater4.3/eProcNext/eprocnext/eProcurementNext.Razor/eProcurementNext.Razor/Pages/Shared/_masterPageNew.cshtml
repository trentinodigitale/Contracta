@using eProcurementNext.BizDB;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using eProcurementNext.Core.Storage
@using eProcurementNext.Session
@using Microsoft.VisualBasic
@using System.Web
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.masterPageToolsModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.cnvModel;
@inject eProcurementNext.Session.ISession _session;
@inject eProcurementNext.Application.IEprocNextApplication _application;
@inject IWebHostEnvironment _environment
@using static eProcurementNext.CommonModule.Basic;
@using static eProcurementNext.Session.SessionMiddleware
@{
    string? pathRoot = (ViewData["pathRoot"] != null) ? ViewData["pathRoot"].ToString() : "../";// da settare su ogni pagina che richiama drawMasterPage(), Vedere cosa è stato fatto in Viewer.cshtml (Viewer.asp)
    string? title = (ViewData["Title"] != null) ? ViewData["Title"].ToString() : "Home page";
    string mp_jsOnload = (ViewData["mp_jsOnload"] != null) ? ViewData["mp_jsOnload"].ToString() : "";
    string mp_DocumentParamJS = (ViewData["mp_DocumentParamJS"] != null) ? ViewData["mp_DocumentParamJS"].ToString() : "";
    LoadSession(Context, _session);
}
@{
    string versioneAflink = HttpUtility.UrlEncode(CStr((_application["VERSIONE_AFLINK"] != null) ? _application["VERSIONE_AFLINK"] : "0"));
    string PATH_STYLE = !string.IsNullOrEmpty(GetParamURL(Context.Request.QueryString.ToString(), "PATH_STYLE")) ? GetParamURL(Context.Request.QueryString.ToString(), "PATH_STYLE") : CStr(_session["PATH_STYLE"]);
    long durataSessione = SessionCommon.SessionTimeout - CLng(_application["AVVISO_SESSIONE_LAG"]);
    string portaleCliente = CStr(_application["SITO_ISTITUZIONALE_CLIENTE"]) != "" ? CStr(_application["SITO_ISTITUZIONALE_CLIENTE"]) : "http://www.regione.emilia-romagna.it";
    string layout = !string.IsNullOrEmpty(CStr(Context.Request.Query["lo"])) ? CStr(Context.Request.Query["lo"]) : "none";
    
     //'-- se ci sono per errore più parametri 'lo' nella querystring, il parametro mi arriverà con la virgola. quindi lo testo con una instr
    if (CStr(layout).ToLower().Contains("print", StringComparison.Ordinal))
    {
        layout = "print";
    }

    string redirectLocation = "";

    //--recupero i valori ammessi per "lo=" dalla SYS
    string VALORI_AMMESSI_PARAM_LO = CStr(Application.ApplicationCommon.Application["VALORI_AMMESSI_PARAM_LO"]);
    if ( string.IsNullOrEmpty(VALORI_AMMESSI_PARAM_LO))
    {
        VALORI_AMMESSI_PARAM_LO = "no@base@none@print@content@lista_attivita@document@drawer";     
    }
    string[] whiteList = VALORI_AMMESSI_PARAM_LO.Split("@");
	bool found = false;
	found =	whiteList.Any(x => { return (x.ToLower() == layout.ToLower()); });

    //'--se layout non è un tra i valori ammessi blocco per accesso fraudolento	
	if ( found == false)
    {
		
		BlackList objBlack = new();
        objBlack.addIp(objBlack.getAttackInfo(Context, CStr(_session["idpfu"]), "Parametro LO nella layout non accettato in white-list"), _session, _application["ConnectionString"]);
		
		//passo il controllo a blocked.asp per segnalare l'infrazione
		if (!string.IsNullOrEmpty(Application.ApplicationCommon.Application["NOMEAPPLICAZIONE"]))
        {
            redirectLocation = "/" + Application.ApplicationCommon.Application["NOMEAPPLICAZIONE"] + "/blocked.asp";
        }
        else
        {
            redirectLocation = $"{Application.ApplicationCommon.Application["strVirtualDirectory"]}/blocked.asp";
        }



		throw new ResponseRedirectException(redirectLocation, Context.Response);

	}
    
    
    
    if(layout == "none")
    {
        string templo = GetValueFromForm(Context.Request, "lo");
        if (!string.IsNullOrEmpty(templo))
        {
            layout = templo;
        }

    }

    string NOMEAPPLICAZIONE_ALLEGATI = CStr(_application["NOMEAPPLICAZIONE_ALLEGATI"]);
    string ATTIVA_DRAG_AND_DROP_ATTACH = CStr(_application["ATTIVA_DRAG_AND_DROP_ATTACH"]);

   

    switch (layout)
    {
        case "base":
            await RenderBase();
            break;
        case "print":
            await RenderPrint();
            break;
        case "DOCUMENT":
            await RenderDocument();
            break;
        case "lista_attivita":
            await RenderListaAttivita();
            break;
        case "drawer":
            await RenderDrawer();
            break;
        case "content":
    @RenderBody()
            break;
        default:
            await RenderDefault();
            break;
    }

}
@{
    async Task RenderBase(){
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml" lang="it" xml:lang="it">
    @{
                await RenderHead();
    }

    <body onchange="Set_Change_Document();" onmouseup="Set_OnClick_Document();">
                    @{
                    await RenderFirstPartOfBody();
                    }

                    @await Component.InvokeAsync("Chat", new { pathRoot = pathRoot })
                
                    <div id="GOTOP" class="backtop" onclick="GoTop()"  style="display:none" ><img src="@(pathRoot)ctl_library/images/general/top.png" alt="Vai inizio pagina" height="42" width="42"></div>		
                
                    <!-- LAYOUT FASE II - LIKE VAPOR -->
                    <div id="container">
                        <nav class="navbar navbar-default no-margin">
                            <div class="row">
                                <div class="col-10 col-lg-6 d-flex">
                                   <!-- navbar-header-->
                                   <div class="navbar-collapse" id="bs-example-navbar-collapse-1">
                                      <ul class="nav navbar-nav">
                                         <li class="active">
                                            <button class="navbar-toggle in" data-toggle="collapse" id="menu-toggle-2"> <i class="fa fa-bars" aria-hidden="true"></i>

                                            </button>
                                         </li>
                                      </ul>
                                   </div>
                                   <!-- bs-example-navbar-collapse-1 -->
                                   <!-- Brand and toggle get grouped for better mobile display -->
         
                                   <div class="navbar-header fixed-brand logo-src" id="main_top_left_div">
                                     <a href="@Application.ApplicationCommon.CNV("url_sito_cliente")" target="_blank">
        <img alt="logo" src="@(pathRoot)images/logoCliente.png" />
    </a>
                                  </div>

                                     <!-- Search Bar -->
                                     <div class="input-group">
                                        <input id="menuSXSearch" type="text" class="form-control search-bar" placeholder="Cerca nel menù" aria-label="" aria-describedby="basic-addon1">
                                        <div class="input-group-append">
                                        <button class="btn input-group-btn" type="button"><i class="fa fa-search"></i></button>
                                        </div>
                                    </div>

                                    <!-- Numero Verde -->
                                    <div class="top_header_mid">
                                        @(Html.Raw(CNV("ML_HEADER_INFO_CLIENTE", _session)))
                                    </div>
                                </div>
                                <div class="col-6 header-right">
                                    <div class="header-dots">
                                        <div class="dropdown">
                                            <button id="buttonWorkspace" type="button" title="Info Azienda" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" class="p-0 me-5 btn btn-link companyButton openRightArea">
                                                <span class="icon-wrapper icon-wrapper-alt rounded-circle">
                                                <span class="icon-wrapper-bg bg-primary"></span>
                                                <i class="fa fa-building-o buildingIcon" aria-hidden="true"></i> <span class="nomeAziendaHeader">Nome Azienda</span><i class="fa fa-angle-down pl-2 angleDownNomeAziendaHeader" aria-hidden="true"></i>
                                                </span>
                                            </button>
                                        </div>
                                        @if(CStr(_application["link_manuali"])!="") 
                                    {
                                    <div class="dropdown">
                                        <button id="buttonLinkManuali" type="button" title="Cerca nei manuali" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" link-manuali="@HttpUtility.HtmlEncode(CStr(_application["link_manuali"]))" title="Cerca nei manuali" class="p-0 me-4 btn btn-link buttonHeaderRight">
                                                <span class="icon-wrapper icon-wrapper-alt rounded-circle">
                                                <span class="icon-wrapper-bg bg-primary"></span>
                                                <i class="fa fa-question-circle-o" aria-hidden="true"></i>
                                                </span>
                                            </button>
                                        </div>
                                    }
                                       @if(CStr(_application["chat_on"]).ToLower()!="no") 
                                    {
                                        <div class="dropdown">
                                            <button id="buttonChat" type="button" title="Chat" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" class="p-0 me-4 btn btn-link buttonHeaderRight openRightArea">
                                                <span class="icon-wrapper icon-wrapper-alt rounded-circle">
                                                <span class="icon-wrapper-bg bg-primary"></span>
                                                <i class="fa fa-comments" aria-hidden="true"></i>
                                                </span>
                                            </button>
                                        </div>
                                    }
                                        <div class="dropdown">
                                            <button id="buttonRecentActivity" type="button" title="Recenti" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" class="p-0 me-4 btn btn-link buttonHeaderRight openRightArea">
                                                <span class="icon-wrapper icon-wrapper-alt rounded-circle">
                                                <span class="icon-wrapper-bg bg-primary"></span>
                                                <i class="fa fa-clock-o" aria-hidden="true"></i>
                                                </span>
                                            </button>
                                        </div>
                                        <div class="dropdown">
                                            <button id="buttonBookmarks" type="button" title="Preferiti" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" class="p-0 me-4 btn btn-link buttonHeaderRight openRightArea">
                                                <span class="icon-wrapper icon-wrapper-alt rounded-circle">
                                                <span class="icon-wrapper-bg bg-primary"></span>
                                                <i class="fa fa-star-o" aria-hidden="true"></i>
                                                </span>
                                            </button>
                                        </div>
                                        <div class="dropdown">
                                            <button id="buttonNotify" type="button" title="Notifiche" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" class="p-0 me-4 btn btn-link buttonHeaderRight openRightArea">
                                                <span class="icon-wrapper icon-wrapper-alt rounded-circle">
                                                <span class="icon-wrapper-bg bg-primary"></span>
                                                <i class="fa fa-bell-o" aria-hidden="true"></i>
                                                </span>
                                            </button>
                                        </div>
                                        @*<div class="dropdown">
                                        <button id="buttonUserArea" type="button" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" class="p-0 me-4 btn btn-link buttonHeaderRight openRightArea">
                                            <span class="icon-wrapper icon-wrapper-alt rounded-circle">
                                            <span class="icon-wrapper-bg bg-primary"></span>
                                            <i class="fa fa-user-o" aria-hidden="true"></i>
                                            </span>
                                        </button>
                                    </div> *@
                                        <button id="buttonUserUtility" type="button" title="Utility Utente" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" class="p-0 btn btn-link rounded-circle buttonAreaUtente openRightArea">
                                            <span class="icon-wrapper icon-wrapper-alt">
                                            <span class="icon-wrapper-bg"></span>
                                            <i class="fa-solid fa-user-gear" aria-hidden="true" style="color: var(--main-header-menu-color)"></i>
                                            </span>
                                        </button>
                                    </div>
                                </div>
                                <div class="dropdown col-2 col-lg-6">
                                            <button id="buttonHeaderRightMobile" type="button" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" class="p-0 me-4 btn btn-link buttonHeaderRightMobile d-none toRight">
                                                <span class="icon-wrapper icon-wrapper-alt rounded-circle">
                                                <span class="icon-wrapper-bg bg-primary"></span>
                                                <i class="fa fa-ellipsis-v" aria-hidden="true"></i>
                                                </span>
                                            </button>
                                        </div>
                                
                                @{
                                await RenderRightArea();
                                }
                        </nav>
                        <div id="wrapper" class="toggled-2">
                            <!-- Sidebar -->
                            <div id="sidebar-wrapper">
                                <ul class="sidebar-nav nav-pills nav-stacked" id="menu"></ul>
                            </div>
                            
                            <!-- /#sidebar-wrapper -->
                            <!-- Page Content -->
                            <div id="page-content-wrapper">

                                <div style="margin-bottom: 10px;margin-top: 10px;" class="ms-5">
                                    @await Component.InvokeAsync("Breadcrumb" , new { pathRoot = pathRoot, firstElement = CNV("portaleCliente", _session), durataSessione = durataSessione })
                                </div>


                                <div class="container-fluid min-width">
                                    @RenderBody()
                                @*
                         <div class="row">
                            <div class="col-lg-12">
                                @RenderBody()
                               <h1>eProcNext - <span class="main-color">Fase II</span> - Vapor Like</h1>
                               <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Provident laudantium nobis cum dignissimos ex inventore, velit blanditiis. Quod laborum soluta quidem culpa officia eligendi, quam, recusandae iste aliquid amet odit! </p>
                            </div>
                             <div class="col-lg-3">
                                <div class="card">
                                  <img class="card-img-top" src="/images/pathToYourImage.png" alt="Card image cap">
                                  <div class="card-body">
                                    <h4 class="card-title">Card title</h4>
                                    <p class="card-text">
                                      Some quick example text to build on the card title
                                      and make up the bulk of the card's content.
                                    </p>
                                    <a href="#!" class="btn btn-primary">Go somewhere</a>
                                  </div>
                                </div>
                             </div>
                             <div class="col-lg-3">
                                <div class="card">
                                  <img class="card-img-top" src="/images/pathToYourImage.png" alt="Card image cap">
                                  <div class="card-body">
                                    <h4 class="card-title">Card title</h4>
                                    <p class="card-text">
                                      Some quick example text to build on the card title
                                      and make up the bulk of the card's content.
                                    </p>
                                    <a href="#!" class="btn btn-primary">Go somewhere</a>
                                  </div>
                                </div>
                             </div>
                             <div class="col-lg-3">
                                <div class="card">
                                  <img class="card-img-top" src="/images/pathToYourImage.png" alt="Card image cap">
                                  <div class="card-body">
                                    <h4 class="card-title">Card title</h4>
                                    <p class="card-text">
                                      Some quick example text to build on the card title
                                      and make up the bulk of the card's content.
                                    </p>
                                    <a href="#!" class="btn btn-primary">Go somewhere</a>
                                  </div>
                                </div>
                             </div>
                             <div class="col-lg-3">
                                <div class="card">
                                  <img class="card-img-top" src="/images/pathToYourImage.png" alt="Card image cap">
                                  <div class="card-body">
                                    <h4 class="card-title">Card title</h4>
                                    <p class="card-text">
                                      Some quick example text to build on the card title
                                      and make up the bulk of the card's content.
                                    </p>
                                    <a href="#!" class="btn btn-primary">Go somewhere</a>
                                  </div>
                                </div>
                            </div>
                        </div>
                        *@
                                </div>
                                @{
                                await RenderFooter();
                                }
                            </div>
                           <!-- /#page-content-wrapper -->
                        </div>
                        <!-- /#wrapper -->
                        <!-- jQuery -->
                    </div>
                    <!-- FINE LAYOUT FASE II - LIKE VAPOR -->

                    
                    <div class="INFO_BOX" id="INFO_PROCESS">
                    </div>


                    <div class="INFO_BOX2" id="INFO_PROCESS2">
                        <div class="INFO_BOX_TB">
                            <span class="fa-3x">
                                <i class="fas fa-circle-notch fa-spin"></i>
                            </span>
                        </div>
                    </div>

                    <!--WriteScrollReposition-->
                    @if (!IsNull(_session["stack_index"]) ){

                        <input  type="hidden" name="PATH_LEVEL_NAVIGATION" id="PATH_LEVEL_NAVIGATION" value="@(_session["stack_index"])" > 
	
				}
                    @{
                    await RenderJSFaseII();
                    }
    </body>
    </html>
    }

    async Task RenderPrint()
    {
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml" lang="it" xml:lang="it">

    <head>
            
                        <title>@(Html.Raw(CNV(title, _session)))</title>
                        <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
                
                        <link rel="icon" href="@(pathRoot)favicon.ico" />

                        <link rel="stylesheet" href="@(pathRoot)CTL_Library/Themes/main_stampa.css?v=@(versioneAflink)" type="text/css" /> 
                        <!-- alla stampante oltre al main_stampa.css AGGIUNGIAMO il main_print.css -->		
                        <link rel="stylesheet" href="@(pathRoot)CTL_Library/Themes/main_print.css?v=@(versioneAflink)" type="text/css" media="print" />		
                        <link rel="stylesheet" href="@(pathRoot)CTL_Library/themes/bootstrap_print.css?v=@(versioneAflink)" type="text/css" /> 
                            @{
					    //'se richiesto in configurazione include un js per la stampa
					    if( GetParamURL(Context.Request.QueryString.ToString(), "JSCRIPT_STAMPA").ToUpper() == "YES" && !string.IsNullOrEmpty(GetParamURL(Context.Request.QueryString.ToString(), "JSCRIPT_STAMPA_NAME")))
					    {

                                            <text>
                                                <script src="@(pathRoot)CTL_LIBRARY/jscript/jquery/js/jquery-1.10.2.js?v=@(versioneAflink)" type="text/javascript"></script>
                                                <script src="@(pathRoot)CTL_LIBRARY/jscript/jquery/js/jquery-ui-1.10.4.min.js?v=@(versioneAflink)" type="text/javascript"></script>
                                                <script src="@(pathRoot)CTL_Library/JScript/getObj.js?v=@(versioneAflink)" type="text/javascript"></script>
                                                <script src="@(pathRoot)CTL_LIBRARY/JScript/setVisibility.js?v=@(versioneAflink)" type="text/javascript"></script>
                                                <script src="@(pathRoot)CustomDoc/jsapp/@(CStr(GetParamURL(Context.Request.QueryString.ToString(), "jscript"))).js?v=@(versioneAflink)" type="text/javascript"></script>
                                            </text>

                        }
                            }
                            <link rel="stylesheet" href="@(pathRoot)css/vapor/vapor_print.css?v=@(versioneAflink)" type="text/css" media="screen, print" />

                        

    </head>

    <!-- <body onload="window.print()" onfocus="window.close()"> -->
                    <body onunload="try{window.opener.ShowWorkInProgress(false);}catch(e){}">

                        <div id="container">

                            <div class="middle" id="main_middle_div">
                                <table class="TableLayout">
                                    <tr>
                                        <td class="TdRight">
                                            <div class="right" id="contenutopagina">
                                                @if (CStr(GetParamURL(Context.Request.QueryString.ToString(), "SHOW_TOOLBAR_PRINT")).Trim() != "NO")
                                        {
                                                    <ul class="Toolbar_stampa">

                                                        @if (!string.IsNullOrEmpty(CStr(GetParamURL(Context.Request.QueryString.ToString(), "TOOLBAR_PRINT")).Trim()))
                                                {
                                                    string strSql = "select isnull(lfn_captionML,'') as caption, isnull(lfn_OnClick,'') as onClick, isnull(lfn_paramTarget,'') as params , isnull(lfn_UrlNewPage,'') as url from LIB_Functions where LFN_GroupFunction = '" + CStr(GetParamURL(Context.Request.QueryString.ToString(), "TOOLBAR_PRINT")).Trim().Replace(@"'", @"''") + "' order by lfn_order";

                                                    eProcurementNext.CommonDB.CommonDbFunctions cdf = new CommonDbFunctions();

                                                    TSRecordSet rs = cdf.GetRSReadFromQuery_(strSql, _application["ConnectionString"]);
                                                    if (rs.RecordCount > 0)
                                                    {

                                                        rs.MoveFirst();

                                                        while (!rs.EOF)
                                                        {
                                                            string strOnClick = "";
                                                            if (!string.IsNullOrEmpty(CStr(rs.Fields["onClick"])))
                                                            {
                                                                strOnClick = $@" onclick=""{rs.Fields["onClick"]}( '{rs.Fields["params"]}');try{{window.opener.ShowWorkInProgress(false);}}catch(e){{}}self.close();return false;"" ";
                                                            }
                                                            else
                                                            {
                                                                strOnClick = $@" onclick=""ExecFunction('{rs.Fields["url"]}','' ,''); try{{window.opener.ShowWorkInProgress(false);}}catch(e){{}} self.close(); return false;"" ";
                                                            }

                                                            string caption = CStr(rs.Fields["caption"]);


                                                                    <li class="Toolbar_button">
                                                                        <a class="button_link" @Html.Raw(strOnClick) href="#">@Html.Raw(CNV(caption, _session))</a>
                                                                    </li>
                                                            rs.MoveNext();

                                                        }

                                                    }
                                                }


                                                        <li class="Toolbar_button">
                                                            <a id="USER_DOC_READONLY_TOOLBAR_DOCUMENT_PRINT" class="button_link" onclick="Javascript:window.print();return false;" href="#" title="Stampa">@(Html.Raw(CNV("Stampa", _session)))</a>
                                                        </li>
                                                        <li class="Toolbar_button last">
                                                            <a id="USER_DOC_READONLY_TOOLBAR_DOCUMENT_EXCEL" class="button_link" onclick="Javascript:self.close(); try{window.opener.ShowWorkInProgress(false);}catch(e){} return false;" href="#" title="Chiudi">@(Html.Raw(CNV("Chiudi", _session)))</a>
                                                        </li>
                                                    </ul>
                                        }
                                                @RenderBody()
                                            </div>
                                        </td>
                                    </tr>	
                                </table>	
                            </div>
                    
                            <div id="push">
                            </div>
                    
                        </div>
    </body>
    </html>
    }

    async Task RenderDefault()
    {
        await RenderHead();
        await RenderRightArea();
    @RenderBody()
        await RenderJSFaseII();
    }

    async Task RenderDrawer()
    {

        await RenderHead();

        await RenderFirstPartOfBody();

    @RenderBody()
    }

    async Task RenderListaAttivita()
    {
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml" lang="it" xml:lang="it">

    @{
            await RenderHead();
    }


    <!-- <body onscroll="OnBodyScroll()" > -->
                <body onchange="Set_Change_Document();" onmouseup="Set_OnClick_Document();">
                    @{
                await RenderFirstPartOfBody();
                    }

                        <div id="container" class="ListaAtt">
                            <!-- NUOVO LAYOUT -->
                             <nav class="navbar navbar-default no-margin">
                                <div class="row">
                                    <div class="col-10 col-lg-6 d-flex">
                                   <!-- Brand and toggle get grouped for better mobile display -->
         
                                   <div class="navbar-header fixed-brand logo-src" id="main_top_left_div">
                                     <a href="@Application.ApplicationCommon.CNV("url_sito_cliente")" target="_blank">
                                     <img alt="logo" src="@(pathRoot)images/logoCliente.png" />
                                     </a>
                                  </div>

                                    <!-- Numero Verde -->
                                    <div class="top_header_mid">
                                        @(Html.Raw(CNV("ML_HEADER_INFO_CLIENTE", _session)))
                                    </div>
                                </div>
                                    <div class="col-6 header-right">
                                    <div class="header-dots">
                                        
                                    </div>
                                </div>
                                    <div class="dropdown col-2 col-lg-6">
                                    <button id="buttonHeaderRightMobile" type="button" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" class="p-0 me-4 btn btn-link buttonHeaderRightMobile d-none toRight">
                                        <span class="icon-wrapper icon-wrapper-alt rounded-circle">
                                        <span class="icon-wrapper-bg bg-primary"></span>
                                        <i class="fa fa-ellipsis-v" aria-hidden="true"></i>
                                        </span>
                                    </button>
                                </div>
                                
                                @{
                                await RenderRightArea();
                                }
                            </nav>
                            <div id="wrapper" class="toggled-2">
                            <!-- FINE NUOVO LAYOUT -->
                                <div id="page-content-wrapper">
                                    <div style="margin-bottom: 10px;margin-top: 10px;" class="ms-5">
                                        @await Component.InvokeAsync("Breadcrumb" , new { pathRoot = pathRoot, firstElement = CNV("portaleCliente", _session), durataSessione = durataSessione })
                                    </div>
                                    <div class="container-fluid min-width">
                                         @RenderBody()
                                    </div>
                                </div>
                            </div>
                            @{
                                await RenderFooter();
                                }
                        </div>

                        <div class="INFO_BOX" id="INFO_PROCESS">
                        </div>

                        <div class="INFO_BOX2" id="INFO_PROCESS2">
                            <div class="INFO_BOX_TB">
                                <span class="fa-3x fullscreenLoader">
                                    <i class="fas fa-circle-notch fa-spin"></i>
                                </span>
                            </div>
                        </div>
                    
                    @*@await Component.InvokeAsync("WriteScrollReposition")*@
                    @{
                    await RenderJSFaseII();
                    }

    </body>
    </html>
    }

    async Task RenderDocument()
    {
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml" lang="it" xml:lang="it">
    @{
                await RenderHead();
    }


    <!-- <body onscroll="OnBodyScroll()" > -->
                    <body onchange="Set_Change_Document();" onmouseup="Set_OnClick_Document();">
                        @{
                    await RenderFirstPartOfBody();

                        }

                        <div class="INFO_BOX" id="INFO_PROCESS">
                        </div>
                        
                        <div class="INFO_BOX2" id="INFO_PROCESS2">
                            <div class="INFO_BOX_TB">
                                <span class="fa-3x">
                                    <i class="fas fa-circle-notch fa-spin"></i>
                                </span>
                            </div>
                        </div>
                        @RenderBody()
                    


    </body>
    </html>
    }

    async Task RenderHead()
    {
    <head>
                        <title>@CNV(title, _session)</title>
                        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
                        <!-- Forziamo il disable della 'compatibilità' perchè crea problemi di visualizzazione -->
                        <meta http-equiv="X-UA-Compatible" content="IE=9; IE=8; IE=7; IE=EDGE" /> <!--EDGE è per IE10+ -->

                        <link rel="stylesheet" href="@(pathRoot)CTL_Library/jscript/jquery/jquery-ui.css?v=@(versioneAflink)" />


                        <link rel="icon" href="@(pathRoot)favicon.ico?v=@(versioneAflink)" />
                        
                         @if(!CStr(Context.Request.Path).Contains("gerarchici")){

                        <link rel="stylesheet" href="@(pathRoot)CTL_Library/themes/customDGUE.css?v=@(versioneAflink)" type="text/css">

                        <!-- Bootstrap CSS -->

                         <link rel="stylesheet" href="@(pathRoot)css/bootstrap/bootstrap.css?v=@(versioneAflink)" type="text/css" media="screen" />
                        <link rel="stylesheet" href="@(pathRoot)css/bootstrap/bootstrap-grid.css?v=@(versioneAflink)" type="text/css" media="screen" />
                        <link rel="stylesheet" href="@(pathRoot)css/bootstrap/bootstrap-reboot.css?v=@(versioneAflink)" type="text/css" media="screen" />
                     
                     }

                        <link rel="stylesheet" href="@(pathRoot)CTL_Library/chat/chat.css?v=@(versioneAflink)" type="text/css" media="screen,projection" />

                        @if(CInt(_application["VERSIONE_GRAFICA"]) > 0){
                            <link rel="stylesheet" href="@(pathRoot)CTL_Library/Themes/main_base_new.css?v=@versioneAflink" type="text/css" media="screen,projection"/> 
			    }
                        <link rel="stylesheet" href="@(pathRoot)CTL_Library/Themes/main.css?v=@(versioneAflink)" type="text/css" media="screen,projection" />
                        <link rel="stylesheet" href="@(pathRoot)CTL_Library/Themes/main_stampa.css?v=@(versioneAflink)" type="text/css" media="print" />

                        @if(!string.IsNullOrEmpty(GetParamURL(Context.Request.QueryString.ToString(), "CALENDAR"))){
                        <link rel=stylesheet href="@(pathRoot)CTL_Library/Themes/calendar.css?v=@versioneAflink" type="text/css" />
                    }


                        <!-- CSS per nuovo Template -->
                        <link rel="stylesheet" href="@(pathRoot)css/vapor/vapor.css?v=@(versioneAflink)" type="text/css" media="screen" />
                        <link rel="stylesheet" href="@(pathRoot)css/vapor/customColor.css?v=@(versioneAflink)" type="text/css" media="screen" />
                        <link rel="stylesheet" href="@(pathRoot)css/vapor/customIcon.css?v=@(versioneAflink)" type="text/css" media="screen" />
                        <!-- CSS per nuovo Template Viewer -->
                        @if (this.Context.Request.Path.ToString().ToLower().Contains("cube")){
                                    <link rel="stylesheet" href="@(pathRoot)css/vapor/cubeVapor.css?v=@(versioneAflink)" type="text/css" media="screen" />
                    }

                        <!-- FontAwesome -->
                        <link rel="stylesheet" href="@(pathRoot)font-awesome/css/font-awesome.min.css?v=@(versioneAflink)" />


                        <!-- Bootstrap JS -->
                        <script src="@(pathRoot)js/bootstrap/bootstrap.js?v=@(versioneAflink)"></script>

                        <script src="@(pathRoot)CTL_Library/JScript/checkbrowser.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/JScript/getObj.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/JScript/setClassName.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/JScript/Grid/LockedGrid.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/jscript/Grid/GetIdSelectedRow.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/jscript/PROPERTYSELECTOR/PropertySelector.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/jscript/GetPosition.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/jscript/Grid/Grid.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/jscript/Grid/GetIdRow.js?v=@(versioneAflink)" type="text/javascript"></script>

                        <script src="@(pathRoot)CTL_Library/jscript/ExecFunction.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/jscript/OpenCloseSubMenu.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/jscript/toolbar/toolbar.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/jscript/DOCUMENT/document.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/jscript/DOCUMENT/sec_Dettagli.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/jscript/DOCUMENT/Sec_Dettagli_AddRow.js?v=@(versioneAflink)" type="text/javascript"></script>

                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/ck_Attach.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/ck_mail.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/ck_Quiz.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/ck_Text.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/ck_TextArea.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/ck_VD.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/ck_VN.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/ExtendedAttrib.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/FldDom.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/FldExtDom.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/FldHierarchy.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/SearchDocumentForExtendeAttrib.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/JScript/FIELD/UpdateFieldVisual.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_Library/JScript/replaceExtended.js?v=@(versioneAflink)" type="text/javascript"></script>

                        <script src="@(pathRoot)CTL_LIBRARY/jscript/jquery/js/jquery-3.6.0.min.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/jscript/jquery/js/jquery-ui.min.js?v=@(versioneAflink)" type="text/javascript"></script>
                       
                        <script src="@(pathRoot)CTL_LIBRARY/jscript/jquery.rte.AFS.js?v=@(versioneAflink)" type="text/javascript"></script>

                        <script src="@(pathRoot)CTL_Library/JScript/setVisibility.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)DASHBOARD/jsapp/ViewerDel.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)DASHBOARD/jsapp/ViewerUpd.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)DASHBOARD/jsapp/ViewerDelConfirm.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)DASHBOARD/jsapp/Dash_ExecProcess.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)DASHBOARD/jsapp/ViewerPrint.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)DASHBOARD/jsapp/ViewerFilter.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)DASHBOARD/jsapp/DashBoardOpenFunc.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)DASHBOARD/jsapp/ViewerExcel.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)DASHBOARD/jsapp/ViewerGrigliaXml.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)DASHBOARD/jsapp/CubeGrid.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)DASHBOARD/jsapp/Dash_DocCopy.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/jscript/DOCUMENT/Print.js?v=@(versioneAflink)" type="text/javascript"></script>
                        <script src="@(pathRoot)CTL_LIBRARY/jscript/ScrollPage/ScrollPage.js?v=@(versioneAflink)" type="text/javascript"></script>

                       @{
				      if(ATTIVA_DRAG_AND_DROP_ATTACH == "YES")
				      {
                                  <text>
                                       <!--FUNZIONTAMENTO UPLOADER--> 
                                      <link rel="stylesheet" href="/@(NOMEAPPLICAZIONE_ALLEGATI)/assets/tableupload.css?v=@(versioneAflink)" type="text/css">
                                      <script src="/@(NOMEAPPLICAZIONE_ALLEGATI)/scripts/aftoolkit.js?v=@(versioneAflink)"></script>
                                      <script src="/@(NOMEAPPLICAZIONE_ALLEGATI)/scripts/table_uploader.js?v=@(versioneAflink)"></script>
                                      <script src="/@(NOMEAPPLICAZIONE_ALLEGATI)/js/plupload/js/plupload.full.min.js?v=@(versioneAflink)"></script>
                                      <script src="/@(NOMEAPPLICAZIONE_ALLEGATI)/js/plupload/js/i18n/it.js?v=@(versioneAflink)"></script>
                                  </text>
				      }

                       }


                        <script src="@(pathRoot)CTL_Library/JScript/main.js?v=@(versioneAflink)" type="text/javascript"></script>

                        @if(_application["chat_on"].ToLower()!="no") {
                        <script src="@(pathRoot)CTL_Library/Chat/chat.js?v=@versioneAflink" type="text/javascript"></script>
                    }

                        <script type="text/javascript">
                            @{
                            dynamic idPfu = CStr(_session["idpfu"]);

                            if (string.IsNullOrEmpty(idPfu))
                            {
                                idPfu = -20;
                            }

                            dynamic idAzi = CStr(_session["IDAZI"]);
                            if (string.IsNullOrEmpty(idAzi)) {
                                idAzi = -20;
                            }

                            string logoutIAM = "";
                            string idToken = CStr(_session["OPEN_ID_TOKEN"]);

                            if (!string.IsNullOrEmpty(CStr(_application["OPENID_URL_LOGOUT"])) && !string.IsNullOrEmpty(CStr(idToken))) {

                                logoutIAM = CStr(_application["OPENID_URL_LOGOUT"]);

                                if (InStrVb6(1, logoutIAM, "?") <= 0) { //codice originale InStr(logoutIAM,"?") <= 0
                                    logoutIAM = $"{logoutIAM}?";
                                }

                                logoutIAM = $"{logoutIAM}state=xx123321yyy&id_token_hint={HttpUtility.UrlEncode(idToken)}";

                                string retUrl = CStr(_application["OPENID_REDIRECT_URI"]);

                                if (!string.IsNullOrEmpty(retUrl)) {
                                    logoutIAM = $"{logoutIAM}&post_logout_redirect_uri={HttpUtility.UrlEncode(retUrl)}";
                                }

                            }




                                    <text>
                                        /* Variabili globali */
                                        var singleWin = '@(_application["SINGLEWIN"])';
                                        var ApplicationAccessible = '@(_application["ACCESSIBLE"])';
                                        var pathRoot = '@(pathRoot)';
                                        var dDateStart = new Date();
                                        var BrowseInPage = 1;
                                        var LoadFromFrame = '@(Strings.UCase(CStr(_application["LoadFromFrame"])))';
                                        var urlPortale = '@(CStr(_application["strVirtualDirectory"]))';
                                        var urlLogoutIAM = '@(logoutIAM)';
                                        var layout= '@(HttpUtility.HtmlEncode(CStr( GetParamURL(Context.Request.QueryString.ToString(), "lo")).Replace(@"'", @"\'")))';
                                        var idpfuUtenteCollegato = @(idPfu);
                                        var idaziAziendaCollegata = @(idAzi);
                                        var start = +new Date(),diff,minutes,seconds;
                                        var minAvvisoSessione = @(CLng(_application["AVVISO_SESSIONE_MINUTI"]) - 1); //Tempo in minuti allo scadere dei quali l'utente verrà avvisato dell'approssimarsi del _session expired
                                        var userSuffix = '@(CStr(_session[SessionProperty.SESSION_SUFFIX]) != "" ? CStr(_session[SessionProperty.SESSION_SUFFIX]).ToLower() : "i")';
                                        @{
                                    await PrintJavascriptApiConstants();
                                        }
                                        var isFaseII = @CStr(IsMasterPageNew()).ToLower();
                                        var withCredentials = @(CStr(CStr(ConfigurationServices.GetKey("Cookie_HttpOnly", "true")).ToLower() == "true").ToLower());
                                        var avvisaSessione = true;
                                        var continuaConteggio = true;

                                        var urlPortaleDandD = "/" + '@(CStr(_application["NOMEAPPLICAZIONE"]))';
                                        var UploadServiceRootUrl = "/" + '@(CStr(_application["NOMEAPPLICAZIONE_ALLEGATI"]))';
                                        var sizeAttach = '@(CStr(_application["MAX_SIZE_ATTACH"]))';
                                        var estensioniUpload = "/" + '@(CStr(_application["strVirtualDirectory"]))';
                                    </text>
                            }
                        </script>


                        

                        @{
                    dynamic strPathJsCustom;
                    dynamic PATHTOOLBAR;

                    if ( !string.IsNullOrEmpty(CStr(GetParamURL(Context.Request.QueryString.ToString(), "jscript"))) )
                    {
                        PATHTOOLBAR = CStr( GetParamURL(Context.Request.QueryString.ToString(), "PATHTOOLBAR"));

                        if ( string.IsNullOrEmpty(PATHTOOLBAR)) {
                            PATHTOOLBAR = $"{pathRoot}customdoc/";
                        }

                        strPathJsCustom = $@"{HttpUtility.HtmlEncode(PATHTOOLBAR)}jsapp/{HttpUtility.HtmlEncode(CStr(GetParamURL(Context.Request.QueryString.ToString(), "jscript")))}.js";
                        if (CommonStorage.ExistsFile(System.IO.Path.Combine(_environment.WebRootPath, "." + Context.Request.Path, "../", strPathJsCustom.ToString())))
                        {
                                            <script src="@(HttpUtility.HtmlEncode(PATHTOOLBAR))jsapp/@(HttpUtility.HtmlEncode(CStr(GetParamURL(Context.Request.QueryString.ToString(), "jscript")))).js?v=@(versioneAflink)" type="text/javascript"></script>
                        }

                    }

                    PATHTOOLBAR = $"{pathRoot}customdoc/";

                    strPathJsCustom = $@"{HttpUtility.HtmlEncode(PATHTOOLBAR)}jsapp/CustomMain.js";
                    if (CommonStorage.ExistsFile(System.IO.Path.Combine(_environment.WebRootPath, "." + Context.Request.Path, "../", strPathJsCustom.ToString())))
                    {
                                            <script src="@(HttpUtility.HtmlEncode(PATHTOOLBAR))jsapp/CustomMain.js?v=@(versioneAflink)" type="text/javascript"></script>
                    }

                    if( !string.IsNullOrEmpty(mp_DocumentParamJS))
                    {
                                            <script src="@(pathRoot)CustomDoc/JsApp/@(mp_DocumentParamJS).js?v=@(versioneAflink)" type="text/javascript"></script>
                    }

                        }

                        <script type="text/javascript">
                            @{
                        if (string.IsNullOrEmpty(CStr(_application["ATTIVA_FASE_DI_TEST"]).ToUpper()))
                        {
                                                <text>
                                                    try
                                                    {
                                                        document.onmousedown="if (event.button==2) return false";
                                                        document.oncontextmenu=new Function("return false");
                                                    }
                                                    catch(e){}
                                                </text>
                        }
                            }
                            @{
                                        <text>
                                            $(document).ready(function()
                                            {

                                                //-- sostituisce i rich text edit
                                                try
                                                {
                                                    $('.RTE').rte("", "../images/toolbar/");


                                                }
                                                catch(e)
                                                {
                                                }
                                         </text>
                                        if (ATTIVA_DRAG_AND_DROP_ATTACH == "YES")
                                        {
                                                    <text>
                                                    try 
                                                    {
                                                        initgriduploader(urlPortaleDandD, UploadServiceRootUrl, sizeAttach, estensioniUpload);
                                                    } 
                                                    catch(e)
                                                    {
                                                    }
                                                    </text>
                                        }
                                         <text>
                                                try
                                                {
                                                    window.onscroll = OnBodyScroll;

                                                }
                                                catch(e)
                                                {
                                                }

                                                //Sostituisco gli alternative delle immagini/label con il relativo multilinguismo
                                                try
                                                {
                                                    var tmpMlg = '';
                                                    var cacheCnv = [];
                                                    var keyMlng = '';
                                                    var tmpIndice;
                                                    var bFound;
                                                    var imgSrc = '';

                                                    bFound = false;

                                                    $('.img_label_alt, .IMG_SIGNINFO').each( function( index, element )
                                                    {

                                                        keyMlng = $( this ).attr('alt');
                                                        imgSrc = $( this ).attr('src');

                                                        if ( keyMlng == '' )
                                                        {
                                                            keyMlng = ReplaceExtended( imgSrc,'../','');
                                                        }

                                                        bFound = false;

                                                        //Controllo se la chiave richiesta è gia stata restituita da un altra chiamata precedente

                                                        for	(tmpIndice = 0; tmpIndice @Html.Raw("<") cacheCnv.length;tmpIndice++)
                                                        {
                                                            //alert(cacheCnv[tmpIndice] + '---' + keyMlng);
                                                            try
                                                            {
                                                                if ( cacheCnv[tmpIndice] == keyMlng )
                                                                {
                                                                    bFound = true;
                                                                    break; //Se trovo la chiave esco dal ciclo
                                                                }
                                                            }
                                                            catch(e){}
                                                        }

                                                        if ( bFound == false )
                                                        {
                                                            tmpMlg = CNV( pathRoot , keyMlng );


                                                            cacheCnv.push(keyMlng);
                                                            cacheCnv[keyMlng] = tmpMlg;
                                                        }

                                                        $( this ).attr('alt', cacheCnv[keyMlng]);
                                                        $( this ).attr('title', cacheCnv[keyMlng]);
                                                        });
                                                    }
                                                    catch(e)
                                                    {
                                                    }

                                                    //try
                                                    //{
                                                    //    // Riapro l'ultimo gruppo aperto
                                                    //    var openMenu = getCookie('openGroup');

                                                    //    if ( openMenu != '')
                                                    //        $('#' + openMenu.replace('_Open','_Close')).click();
                                                    //}
                                                    //catch(e)
                                                    //{
                                                    //}
                                        </text>
                            }
                            @{

                        if ( !string.IsNullOrEmpty(_session["MSG_ERROR"])) {

                            string msg_local_err = _session["MSG_ERROR"];
                            msg_local_err = msg_local_err.Replace(@"'", @"\'");
                            msg_local_err = msg_local_err.Replace(Environment.NewLine, "\n");

                                                <text>
                                                try
                                                {
                                                    DMessageBox('../', '@Html.Raw((GetParam(msg_local_err,"MSG")))', '@Html.Raw((GetParam(msg_local_err, "CAPTION")))', '@(GetParam(msg_local_err, "ICO"))', 400, 300);

                                                }
                                                catch(e)
                                                {
                                                    alert('@Html.Raw((GetParam(msg_local_err, "MSG")))');
                                                }
                                                </text>

                            _session["MSG_ERROR"] = "";

                        }

                        if ( !string.IsNullOrEmpty(_session["toastMSG"])) {

                            string msg_local_err = _session["toastMSG"];
                            msg_local_err = msg_local_err.Replace(@"'", @"\'");
                            msg_local_err = msg_local_err.Replace(Environment.NewLine, "\n");

                                                <text>
                                                try
                                                {
                                                    ExecFunctionModaleFaseII('@Html.Raw(msg_local_err)');
                                                }
                                                catch(e)
                                                {
                                                    alert('@Html.Raw((GetParam(msg_local_err, "MSG")))');
                                                }
                                                </text>

                            _session["toastMSG"] = "";

                        }

                        //'-- Se sono presenti dei messaggi di sistema
                        int lngContatore = CInt(_application["CONTATORE_MESSAGGI"]);

                        //'-- Se c'è un messaggio di sistema e non l'ho ancora letto
                        for (int iM = 0; iM <= lngContatore; iM++){//to lngContatore
                         //'response.write "//SYSTEM_INFO_" & iM & "[" &  session("SYSTEM_INFO_" & cstr(iM)) & "] - " & vbCrLf
                         //'response.write "//" & iM & "_SYS_MSG" & application(iM & "_SYS_MSG")& vbCrLf
                         //'response.write "//" & iM & "_SYS_DF" & application(iM & "_SYS_DF")& " - " & now & vbCrLf

                            if (lngContatore > 0 && IsEmpty( _session["SYSTEM_INFO_" + CStr(iM)]) && !string.IsNullOrEmpty(CStr(_application[iM + "_SYS_MSG"]))  && DateAndTime.Now.Ticks < CDate(_application[iM + "_SYS_DF"]).Ticks ){

                                    string msgSysAttivo = CStr(_application[iM + "_SYS_MSG"]);
                                    msgSysAttivo = msgSysAttivo.Replace(Environment.NewLine,"<br/>");

                                                        <text>

                                                            try
                                                            {                                                                
                                                                showSysMessage( '@Html.Raw(msgSysAttivo.Replace(@"'",@"\'"))' , 'Messaggio di Sistema');
                                                            }
                                                            catch(e)
                                                            {
                                                                alert('@(msgSysAttivo.Replace(@"'",@"\'"))');
                                                            }
                                                        </text>


                                    //'-- Messaggio letto!
                                    _session["SYSTEM_INFO_" + CStr(iM)] = "LETTO";
                                    break;
                            }

                        }



                        if(!string.IsNullOrEmpty(CStr(mp_jsOnload)))
                        {
                                                <text>
                                                    try
                                                    {
                                                        @(mp_jsOnload)
                                                    }
                                                    catch(e)
                                                {
                                                    alert(e.message);
                                                }
                                                </text>
                        }


                        if (CStr(_session["ControlloPopUpInserito"]) != "si" && CInt(idPfu) > 0 && layout == "base") {

                                                <text>
                                                var myTestPopUp = window.open("about:blank","","directories=no,height=1,width=1,menubar=no,resizable=no,scrollbars=yes,status=no,titlebar=no,top=0,location=no");
                                                if (!myTestPopUp)
                                                {
                                                    AF_Alert('Disabilitare il blocco dei pop-up');
                                                }
                                                else
                                                {
                                                    myTestPopUp.close();
                                                }


                                                </text>

                            _session["ControlloPopUpInserito"] = "si";


                        }
                                            <text>});</text>

                        string bloccaTimerSessione = "";

                                            <text>
                                                window.setInterval (SetDateTime,1000);
                                                function logout()
                                                {
                                                    if ( typeof (FLAG_CHANGE_DOCUMENT) != "undefined")
                                                    {
                                                        if ( FLAG_CHANGE_DOCUMENT == 1)
                                                        {

                                                            var Title = 'Attenzione';
                                                            var ML_text = 'Le modifiche non sono state salvate. Si vuole proseguire senza salvare ?';

                                                            //se presente una frase specializzata la uso
                                                            if ( typeof (ML_CHANGE_DOCUMENT) != "undefined")
                                                            {
                                                                if ( ML_CHANGE_DOCUMENT != '')
                                                                    ML_text = ML_CHANGE_DOCUMENT ;
                                                            }
                                                            var ICO = 3;
                                                            var page = 'ctl_library/MessageBoxWin.asp?MODALE=YES&ML=YES&MSG=' + encodeURIComponent( ML_text ) +'&CAPTION=' + encodeURIComponent(Title) + '&ICO=' + encodeURIComponent(ICO);

                                                            ExecFunctionModaleConfirm( page, null , 200 , 400 , null , 'logout_Sub' );

                                                        }
                                                        else
                                                        {
                                                            logout_Sub();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        logout_Sub();
                                                    }

                                                }


                                                function logout_Sub()
                                                {
                                                    $.ajax({
                                                            url: pathRoot + 'logout.asp',
                                                            cache: false
                                                        })
                                                        .done(function( responseText )
                                                        {
                                                            try
                                                            {
                                                                if ( responseText != '' )
                                                                {
                                                                    //Invochiamo la pagina richiesta dalla nostra logout ( utile per effettuare logout IAM ad es. )
                                                                    urlPortale = responseText;
                                                                }
                                                            }
                                                            catch(e){}

                                                            if (LoadFromFrame == 'NO')
                                                                window.location.href = urlPortale;
                                                            else
                                                                window.close();
                                                        });
                                                }

                                                function timer()
                                                {
                                                    if ( continuaConteggio )
                                                    {
                                                        duration = 60 * @(CStr(durataSessione)); //Durata della _sessione di lavoro in secondi meno 2 minuti

                                                        try
                                                        {
                                                            var strLastOpServer = getCookie('LASTOPERATION');
                                                            //console.log(strLastOpServer);

                                                            if ( strLastOpServer )
                                                            {
                                                                strLastOpServer = decodeURIComponent(strLastOpServer);
                                                                //console.log(strLastOpServer);
                                                                var dtLastOpServer = +new Date(strLastOpServer);
                                                                //console.log(dtLastOpServer);

                                                                if ( dtLastOpServer > start )
                                                                {
                                                                    //console.log('timer di _sessione. la variabile start ( ' + start + ' ) è minore del LASTOPERATION ( ' + dtLastOpServer + ' )' );
                                                                    start = dtLastOpServer;
                                                                }

                                                            }
                                                        }
                                                        catch(e)
                                                        {
                                                            //console.error('Errore settaggio LASTOPERATION :' + e.message);
                                                        }

                                                        diff = duration - (((+new Date() - start) / 1000) | 0);

                                                        minutes = (diff / 60) | 0;
                                                        seconds = (diff % 60) | 0;

                                                        minutes = minutes @Html.Raw("<") 10 ? "0" + minutes : minutes;
                                                        seconds = seconds @Html.Raw("<") 10 ? "0" + seconds : seconds;

                                                        try
                                                        {
                                                            if (avvisaSessione && minutes @Html.Raw("<")= minAvvisoSessione )
                                                            {
                                                                avvisaSessione = false;
                                                                avvisaScadenzaSessione();
                                                            }

                                                        }
                                                        catch(e){}

                                                        document.getElementById('tempo_di_sessione').innerHTML = minutes + ":" + seconds + ' m';
                                                        document.getElementById('alert_countdown_sessione').innerHTML = minutes + ":" + seconds + ' m';

                                                        if (diff @Html.Raw("<")= 0)
                                                        {
                                                            continuaConteggio = false;
                                                            document.getElementById('tempo_di_sessione').style.color = 'red';
                                                            document.getElementById('tempo_di_sessione').style.fontWeight = 'bold';

                                                            /*

                                                                att. 365583. Non facciamo più uscire fuori _sessione alla conclusione del timer

                                                            //Faccio scadere la _sessione di lavoro senza aspettare il tempo di LAG calcolato in meno sulla durata di _sessione
                                                            $.ajax({url: pathRoot + 'CTL_LIBRARY/Abandon.asp'}).done(function() {
                                                                    resetSessionTimer();
                                                                });

                                                            */

                                                            avvisaSessioneScaduta();

                                                        }
                                                    }
                                                }

                                                function resetSessionTimer()
                                                {
                                                    start = +new Date();
                                                }

                                                function SetDateTime()
                                                {
                                            </text>

                                            @if(CStr(bloccaTimerSessione.ToUpper()) != "YES")
                        {
                                                <text>
                                                try
                                                {
                                                    timer();
                                                }
                                                catch(e){}
                                                </text>
                        }
                            }

                            @{
                                        <text>
                                            yServer='@(DateAndTime.Year(DateAndTime.Now))';
                                            mServer='@(addZero(DateAndTime.Month(DateAndTime.Now).ToString()))';
                                            dServer='@(addZero(DateAndTime.Day(DateAndTime.Now).ToString()))';
                                            hs='@(DateAndTime.Hour(DateAndTime.Now))';
                                            ms='@(DateAndTime.Minute(DateAndTime.Now))';
                                            ss='@(DateAndTime.Second(DateAndTime.Now))';
                                            sLng='@(_session["strSuffLing"])';


                                            var dServer=new Date(yServer,mServer-1,dServer,hs,ms,ss);
                                            var dClient=new Date();

                                            //effettuo la differenza tra data client e data server in millisecondi
                                            dDateDiffMillisec=dClient.getTime() - dDateStart.getTime();

                                            //sommo la differenza in millisecondi alla data attuale
                                            dDateCurrMilli= dServer.getTime() + dDateDiffMillisec;

                                            //visualizzo data corrente
                                            var dDateCurr=new Date(dDateCurrMilli);

                                            nDay=dDateCurr.getDate();
                                            nMonth=dDateCurr.getMonth()+1;
                                            nYear=dDateCurr.getFullYear();
                                            nh=dDateCurr.getHours();
                                            nm=dDateCurr.getMinutes();
                                            ns=dDateCurr.getSeconds();

                                            strDay= new String(nDay);
                                            if (strDay.length==1)
                                                strDay='0'+strDay;

                                            strMonth= new String(nMonth);
                                            if (strMonth.length==1)
                                                strMonth='0'+strMonth;

                                            strh= new String(nh);
                                            if (strh.length==1)
                                                strh='0'+strh;

                                            strm= new String(nm);
                                            if (strm.length==1)
                                                strm='0'+strm;

                                            strs= new String(ns);
                                            if (strs.length==1)
                                                strs='0'+strs;


                                            objCell=getObj('DateTime');

                                            try
                                            {
                                                if (sLng=='I')
                                                    objCell.innerHTML= strDay + '/'+ strMonth + '/' +nYear+ ' ' + strh + ':' + strm +':'+ strs ;
                                                else
                                                    objCell.innerHTML= strMonth + '/'+ strDay  + '' +nYear+ ' ' + strh + ':' + strm +':'+ strs ;
                                            }
                                            catch(e){}
                                        }
                                        //variabile globale mi indica se sono stati fatti cambiamenti sul documento
                                        var FLAG_CHANGE_DOCUMENT = 0;
                                        var TimeLastClick = 0 ;



                                    </text>
                        }
                        </script>

    </head>
    }

    async Task RenderFirstPartOfBody()
    {
    <ul class="skiplinks">
                    <!-- <li><a href="#cerca">Cerca nel sito</a></li> -->
                    <li><a href="#contenutopagina" class="u2" title="Salta ai contenuti" accesskey="k">Salta ai contenuti</a></li>
                    <li><a href="#main_middle_left_div" class="u2" title="Salta al menu principale" accesskey="n">Salta al menu principale</a></li>
                    <li><a href="@(pathRoot)home/main.asp?lo=base&GROUPS_NAME=@(CStr(_session["GROUPS_NAME"]))" class="u2" title="Salta alla home" accesskey="h">Salta alla home</a></li>
    </ul>	
        
    <div id="finestra_modale">
    </div>
        
    <div id="finestra_modale_confirm">
    </div>
        
    <div id="finestra_modale_sessione" title="Avviso di sessione" style="display:none">
                    La sessione di lavoro sta per scadere. <br/> 
                    Rinnovarla? <br/><br/>
                    <p style="text-align:center;" id="alert_countdown_sessione"></p>
    </div>
    <div class="toast toastVapor" data-autohide="false">
          <div class="toast-header">
            <svg class="rounded" width="20" height="20" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice" focusable="false" role="img">
                            <rect fill="#007aff" width="100%" height="100%" /></svg>
            <p class="me-auto toastTitle">Bootstrap</p>
            <button type="button" class="toastClose close" data-dismiss="toast" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                          </button>
          </div>
          <div class="toast-body">
          </div>
    </div>

    }

    async Task PrintJavascriptApiConstants()
    {
        Dictionary<string, string> consts = new();
        if (ConfigurationServices.HasKey("JavascriptApiConstants"))
        {
            consts = ConfigurationServices.GetObjectOfKeys("JavascriptApiConstants");
        }
    <text>
                                    //JavascriptApiConstants Fase II
                    @foreach (var line in consts)
            {
                        <text>
                                    const @line.Key  = `@Html.Raw(ReplacePlaceholders(line.Value))`;
                        </text>
            }
    </text>
    }

    async Task RenderFooter()
    {
        string type = "compact";
        switch (type)
        {
            case "compact":
                await RenderFooterCompact();
                break;
            case "extended":
                await RenderFooterExtended();
                break;
            default:
                await RenderFooterCompact();
                break;
        }
    }

    async Task RenderFooterCompact()
    {
    <div>
                <div id="footerCompact">
                    <div>
                        <div class="navbar-header fixed-brand logo-src" id="main_top_left_div">
                        <a href="@Application.ApplicationCommon.CNV("url_sito_cliente")" target="_blank">
                            <img alt="logo" src="@(pathRoot)images/logoCliente.png" />
                        </a>
                        </div>
                    </div>
                    <div class="footerText">
                        @(Html.Raw(CNV("Footer_01", _session)))
                    </div>
                    <!--
                    <ul class="containerIconsFooter">
                        <li><i class="fa fa-facebook-official iconFooter" aria-hidden="true"></i></li>
                        <li><i class="fa fa-linkedin-square iconFooter" aria-hidden="true"></i></li>
                        <li><i class="fa fa-youtube-play iconFooter" aria-hidden="true"></i></li>
                        <li><i class="fa fa-twitter-square iconFooter" aria-hidden="true"></i></li>
                    </ul>
                    -->
                    <ul>
                        <li><a href="@(Application.ApplicationCommon.CNV("LINK_HOME_CONTATTI"))">@(Application.ApplicationCommon.CNV("Contatti"))</a></li>
                        <li><a href="@(Application.ApplicationCommon.CNV("LINK_HOME_INFOSITO"))">@(Application.ApplicationCommon.CNV("Informazioni sul sito"))</a></li>
                        <li><a href="@(Application.ApplicationCommon.CNV("LINK_HOME_NOTELEGALI"))">@(Application.ApplicationCommon.CNV("Note legali"))</a></li>
                        <li><a href="@(Application.ApplicationCommon.CNV("LINK_HOME_PRIVACY"))">Privacy</a></li>
                    </ul>
                </div>
    </div>
    }

    async Task RenderFooterExtended()
    {

    }

    async Task RenderJSFaseII()
    {
    <script src="@(pathRoot)js/const.js?v=@(versioneAflink)"></script>
    <script src="@(pathRoot)js/cache.js?v=@(versioneAflink)"></script>
        // <script src="@(pathRoot)js/PDNDUtils.js?v=@(versioneAflink)"></script>
    <script src="@(pathRoot)js/modalCustom.js?v=@(versioneAflink)"></script>
    <script src="@(pathRoot)js/customAjax.js?v=@(versioneAflink)"></script>
    <script src="@(pathRoot)js/leftMenu-headerIcon.js?v=@(versioneAflink)"></script>
    }

    async Task RenderRightArea()
    {
    <div id="rightAreaWrapper">
                <div id="rightArea">
                    <div class="row gx-0">
                        <div class="col-12 pageTitle" id="drawerTitle">
                            <h1>Profilo utente</h1>
                            <p>Prova Sottotitolo</p>
                            <button type="button" aria-haspopup="true" aria-expanded="false" data-toggle="dropdown" class="me-4 btn btn-link rounded-circle closeWindows">
                                <span>
                                    <i class="fa fa-times" aria-hidden="true"></i>
                                </span>
                            </button>
                        </div>
                    </div>
                    <div id="containerToolbarButton"></div>
                    <div id="containerRightArea" class="containerFrame"></div>
                </div>
    </div>
    }
}