@page "/ANALISI_LOG/dati.asp"
@using eProcurementNext.Application
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using Microsoft.VisualBasic
@using eProcurementNext.Razor.Pages.CTL_LIBRARY.functions
@using static eProcurementNext.CommonModule.Basic;
@inject eProcurementNext.Application.IEprocNextApplication application;
@inject eProcurementNext.Session.ISession session;
@inject eProcurementNext.CommonModule.IEprocResponse response;
@model eProcurementNext.Razor.wwwroot.ANALISI_LOG.datiModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
	CommonDbFunctions cdb = new();
	var sqlParams = new Dictionary<string, object?>();
}
@{

	IFormCollection? Request_Form = null;

	string local_orainizio = "";
	string local_orafine = "";
	string local_protocollo = "";
	string local_rag_soc = "";

	string[] arr = new string[] { };
	int Num_riga;

	if (HttpContext.Request.HasFormContentType)
	{
		Request_Form = HttpContext.Request.Form;

		local_orainizio = Request_Form["orainizio"].ToString().Replace("T", " ");
		local_orafine = Request_Form["orafine"].ToString().Replace("T", " ");

		local_protocollo = CStr(Request_Form["protocollo"]);

		local_rag_soc = Request_Form["aziRagioneSociale"].ToString().Replace("'", "''");


		string ipservers = ApplicationCommon.Application["app-to-refresh"];
		ipservers = ipservers.Replace("http://", "");
		ipservers = ipservers.Replace("/application", "");
		arr = ipservers.Split("@");

		if (string.IsNullOrEmpty(ipservers))
		{
			ipservers = CStr(HttpContext.GetServerVariable("LOCAL_ADDR"));
			ipservers = ipservers.Replace("http://", "");
			ipservers = ipservers.Replace("/application", "");
			arr = ipservers.Split("@");
		}

		securityModel.validate("protocollo", local_protocollo, securityModel.TIPO_PARAMETRO_STRING, securityModel.SOTTO_TIPO_PARAMETRO_TEXTAREA, "", 1, HttpContext, session);
		securityModel.validate("aziRagioneSociale", local_rag_soc, securityModel.TIPO_PARAMETRO_STRING, securityModel.SOTTO_TIPO_PARAMETRO_TEXTAREA, "", 1, HttpContext, session);

	}
	htmlToReturn.Write($@"
        <html>

	        <head>

		         <style>
		          table,th,td
		          {{
			        border:2px solid black;
		          }}
		          table
		          {{
			        border-collapse:collapse;
			        width:20%;
			        color:black;

		          }}
		          td
		          {{
			        height:40px;
		          }}
		          .orarioRichiesto
		          {{
			        background-color: #2E8B57;
			        color:white;

		          }}
		          .selection
		          {{
			        background-color: INDIGO;
			        color:white;

		          }}
		          .base
		          {{
			        background-color: white;
			        color:black;

		          }}
          </style>
		        <meta http-equiv=""Content-Language"" content=""it""/>
		        <meta http-equiv=""Content-Type"" content=""text/html;charset=UTF-8""/>
		        <meta http-equiv=""pragma"" content=""no-cache""/>
		        <meta http-equiv=""cache-control"" content=""no-cache""/>
		        <title>ANALISI LOG</title>
	        </head>


	        <body>

	        <p><font size=""6"" face=""Arial Black"">Report Analisi LOG</font> (Server 
    ");
	htmlToReturn.Write(HttpContext.GetServerVariable("LOCAL_ADDR") != null ? HttpContext.GetServerVariable("LOCAL_ADDR"): "");
	htmlToReturn.Write($@")</p>
	<hr/>");

	if (GetParamURL(Request.QueryString.ToString(), "COSA") != "ESTRAZIONE"
	&& GetParamURL(Request.QueryString.ToString(), "COSA") != "OFFERTA"
	&& GetParamURL(Request.QueryString.ToString(), "COSA") != "COPIA"
	&& GetParamURL(Request.QueryString.ToString(), "COSA") != "SESSIONI"
	&& GetParamURL(Request.QueryString.ToString(), "COSA") != "RICHIESTE"
	&& GetParamURL(Request.QueryString.ToString(), "COSA") != "TEMPO"
	&& GetParamURL(Request.QueryString.ToString(), "COSA") != "SCADENZA"
	&& GetParamURL(Request.QueryString.ToString(), "COSA") != "EVENT_VIEWER")
	{
		htmlToReturn.Write($@"

			<strong>Con questa funzione inserendo il protocollo della gara/asta ( registro di sistema ) si ha la possibilit&agrave; di fare un'estrazione di dati.</strong>

		<br/>
		<br/>	

		<form method=""post"" >
		Inserire il Registro di Sistema della gara/asta : <input type=""text"" name=""protocollo""  ");

		if (GetParamURL(Request.QueryString.ToString(), "COSA") == "RIEPILOGO")
		{
			htmlToReturn.Write(@"value=""" + HtmlEncode(GetValueFromForm(Request, "protocollo")) + @"""");
		}

		htmlToReturn.Write($@"
			  required ><br>
					<br/>

					Inserire la Ragione Sociale : <input type=""text"" name=""aziRagioneSociale"" 
		");

		if (GetParamURL(Request.QueryString.ToString(), "COSA") == "RIEPILOGO")
		{
			htmlToReturn.Write(@"value=""" + HtmlEncode(GetValueFromForm(Request, "aziRagioneSociale")) + @"""");
		}

		htmlToReturn.Write($@"
			 required ><br>

					<br/>
					Inserire data inizio : <input type=""datetime - local"" name=""orainizio"" 
		");

		if (GetParamURL(Request.QueryString.ToString(), "COSA") == "RIEPILOGO") 
		{
			htmlToReturn.Write($@"value=""" + HtmlEncode(GetValueFromForm(Request, "orainizio")) + @"""");
		}

		htmlToReturn.Write($@"
			required > <br><br>

					Inserire data fine : <input type=""datetime-local"" name=""orafine"" 
		");

		if (GetParamURL(Request.QueryString.ToString(), "COSA") == "RIEPILOGO") 
		{
			htmlToReturn.Write($@"value=""" + HtmlEncode(GetValueFromForm(Request, "orafine")) + @"""");
		}

		htmlToReturn.Write($@"
			 required > <br><br>
			<br/>
			<input type=""checkbox"" name=""FLUSH""> Spuntare per rigenerare Log Utente
			 <br><br>
			<br/>

			<input type=""submit"" formaction=""dati.asp?COSA=RIEPILOGO"" value=""Riepilogo Analisi LOG""> &nbsp;&nbsp;&nbsp;
		");

		if (GetParamURL(Request.QueryString.ToString(), "COSA") == "RIEPILOGO")
		{
			foreach (var y in arr)
			{
				htmlToReturn.Write($@"<input type=""submit"" formtarget=""_blank"" formaction=""dati.asp?COSA=SESSIONI&IP=" + y + $@""" value=""Sessioni Attive " + y + $@""">&nbsp;&nbsp;&nbsp;");
			}
			foreach (var y in arr)
			{
				htmlToReturn.Write($@"<input type=""submit"" formtarget=""_blank"" formaction=""dati.asp?COSA=RICHIESTE&IP=" + y + $@""" value=""Richieste Attive " + y + $@""">&nbsp;&nbsp;&nbsp;");
			}
			htmlToReturn.Write($@"
				<input type=""submit"" formtarget=""_blank"" formaction=""dati.asp?COSA=TEMPO"" value=""Tempo Speso""> &nbsp;&nbsp;&nbsp;
				<input type=""submit"" formtarget=""_blank"" formaction=""dati.asp?COSA=SCADENZA"" value=""Scadenze""> &nbsp;&nbsp;&nbsp;
			");
		}

		htmlToReturn.Write($@"
			<br/><br/>
			</form>
		");


	}

	htmlToReturn.Write($@"
		<br/>
		<hr/>
	");

	if (GetParamURL(Request.QueryString.ToString(), "COSA") == "EstrazioneLogXLSX")
	{
		string idpfu = GetParamURL(Request.QueryString.ToString(), "idPfu");
		string datainizio = GetParamURL(Request.QueryString.ToString(), "datainizio");
		string datafine = GetParamURL(Request.QueryString.ToString(), "datafine");

		EstrazioneLogXLSX(idpfu, datainizio, datafine);
	}

	if (GetParamURL(Request.QueryString.ToString(), "COSA") == "RIEPILOGO") 
	{
		riepilogo(local_protocollo, local_rag_soc);
	}

	string orafine = "";
	string orainizio= "";

	if (GetParamURL(Request.QueryString.ToString(), "COSA") == "ESTRAZIONE")
	{
		orafine = GetParamURL(Request.QueryString.ToString(), "local_orafine");
		orainizio= GetParamURL(Request.QueryString.ToString(), "local_orainizio" );
		string idpfu = GetParamURL(Request.QueryString.ToString(), "idPfu" ) ;
		string datainizio = GetParamURL(Request.QueryString.ToString(), "DataCreazione" ) ;
		string datafine = GetParamURL(Request.QueryString.ToString(), "DataScadenzaOfferta" ) ;

		EstrazioneLog(idpfu, datainizio, datafine, orainizio, orafine);
	}

	if (GetParamURL(Request.QueryString.ToString(), "COSA") == "OFFERTA")
	{
		string protocollo = GetParamURL(Request.QueryString.ToString(), "ProtocolloGara");
		string idpfu = GetParamURL(Request.QueryString.ToString(), "idPfu" ) ;
		string datainizio = GetParamURL(Request.QueryString.ToString(), "DataCreazione" ) ;
		string datafine = GetParamURL(Request.QueryString.ToString(), "DataScadenzaOfferta" ) ;
		string IdOfferta = GetParamURL(Request.QueryString.ToString(), "IdOfferta" );

		compilaOfferta(IdOfferta,datainizio,datafine);
	}

	if (GetParamURL(Request.QueryString.ToString(), "COSA") == "SESSIONI") 
	{
		string nodo = GetParamURL(Request.QueryString.ToString(), "ip");
		string richiesteprotocollo = GetValueFromForm(Request, "protocollo");

		mostraSessioni(richiesteprotocollo, local_orainizio, local_orafine, nodo);
	}

	if (GetParamURL(Request.QueryString.ToString(), "COSA") == "RICHIESTE")
	{
		string nodo = GetParamURL(Request.QueryString.ToString(), "ip");
		string richiesteprotocollo = GetValueFromForm(Request, "protocollo");

		mostraRichieste(richiesteprotocollo, local_orainizio, local_orafine, nodo);
	}

	if (GetParamURL(Request.QueryString.ToString(), "COSA") == "TEMPO") 
	{
		string richiesteprotocollo = GetValueFromForm(Request, "protocollo");
		mostraTempo(richiesteprotocollo);
	}

	if (GetParamURL(Request.QueryString.ToString(), "COSA") == "COPIA")
	{
		string Ente = GetParamURL(Request.QueryString.ToString(), "Ente");
		string OggettoGara = GetParamURL(Request.QueryString.ToString(), "OggettoGara");
		string DataPubblicazione = GetParamURL(Request.QueryString.ToString(), "DataPubblicazione");
		string DataAperturaOfferte = GetParamURL(Request.QueryString.ToString(), "DataAperturaOfferte");
		string AziRagioneSociale = GetParamURL(Request.QueryString.ToString(), "AziRagioneSociale");
		string pfuNome = GetParamURL(Request.QueryString.ToString(), "pfuNome");
		string DataCreazione = GetParamURL(Request.QueryString.ToString(), "DataCreazione");
		string DataScadenzaOfferta = GetParamURL(Request.QueryString.ToString(), "DataScadenzaOfferta");
		string ProtocolloGara = GetParamURL(Request.QueryString.ToString(), "ProtocolloGara");
		copiariga(Ente, ProtocolloGara, OggettoGara, DataPubblicazione, DataAperturaOfferte, AziRagioneSociale, pfuNome, DataCreazione, DataScadenzaOfferta);
	}

	if (GetParamURL(Request.QueryString.ToString(), "COSA") == "SCADENZA")
	{
		mostraScadenza();
	}

	//'------------------------------------------------------------------------------------------------------------------------------------------------
	//'-----------------------------------------------------------SESSIONI ATTIVE----------------------------------------------------------------------
	//'------------------------------------------------------------------------------------------------------------------------------------------------
	void mostraSessioni(string richiesteprotocollo,string local_orainizio, string local_orafine,string nodo)
	{
		htmlToReturn.Write($@"
			<font size=""6"" color = ""red""><strong>SESSIONI ATTIVE DEL NODO:  ");
		htmlToReturn.Write(nodo);
		htmlToReturn.Write($@"</strong></font><BR/> <BR/> 
			<font size=""4"" color = ""black"">Questa scheda contiene i dati relativi a quanti utenti hanno effettuato l’accesso all’applicazione prima, durante e dopo la scadenza della gara/asta.</font> <BR/> <BR/> <BR/> <BR/> <BR/>
		");

		sqlParams.Clear();
		sqlParams.Add("@richiesteprotocollo", richiesteprotocollo);
		sqlParams.Add("@nodo", nodo);
		sqlParams.Add("@local_orainizio", local_orainizio);
		sqlParams.Add("@local_orafine", local_orafine);
		//string strSql5 = "exec ANALISI_LOG_TAB_ANDAMENTALI  '" + richiesteprotocollo + "' ,'" + nodo + "' , " + 1 + ", '" + local_orainizio + "', '" + local_orafine + "'";
		string strSql5 = "exec ANALISI_LOG_TAB_ANDAMENTALI  @richiesteprotocollo ,@nodo , " + 1 + ", @local_orainizio, @local_orafine";
		//'response.write local_orainizio
		//'response.write strSql5
		//'response.end
		TSRecordSet rs = cdb.GetRSReadFromQuery_(strSql5, ApplicationCommon.Application.ConnectionString, sqlParams);

		if (rs.RecordCount > 0)
		{
			htmlToReturn.Write($@"<table border=1 bordercolor=black>");

			htmlToReturn.Write($@"<tr>");

			htmlToReturn.Write($@"<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"Data");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"Sessioni Attive");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"</tr>");

			//on error resume next
			bool error = false;
			try
			{
				rs.MoveFirst();
			}
			catch
			{
				error = true;
			}

			while (!rs.EOF && !error)
			{
				htmlToReturn.Write($@"<tr>");

				htmlToReturn.Write($@"<td>");	
				htmlToReturn.Write(CStr(rs.Fields["Data"]));
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");			
				htmlToReturn.Write(CStr(rs.Fields["SessioneAttiveNodo1"]));
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"</tr>");
				rs.MoveNext();
			}
			htmlToReturn.Write($@"</table>");
			htmlToReturn.Write($@"</br></br></br>");
			htmlToReturn.Write($@"</br></br></br>");

			throw new ResponseEndException(htmlToReturn.Out(), Response, "");
			//response.end 	
		}
	}

	//'------------------------------------------------------------------------------------------------------------------------------------------------
	//'-----------------------------------------------------------RICHIESTE SERVER---------------------------------------------------------------------
	//'------------------------------------------------------------------------------------------------------------------------------------------------

	void mostraRichieste(string richiesteprotocollo,string local_orainizio,string local_orafine,string nodo) 
	{
		htmlToReturn.Write($@"
		<font size=""6"" color = ""red""><strong>RICHIESTE SERVER DEL NODO:  ");
		htmlToReturn.Write(nodo);
		htmlToReturn.Write($@"

			</strong></font> <BR/> <BR/> 
			<font size=""4"" color = ""black"">Questa scheda contiene i dati relativi a quanti utenti hanno effettuato azioni sull’applicazione prima, durante e dopo la scadenza della gara/asta.</font> <BR/> <BR/> <BR/> <BR/> <BR/>
		");
		orainizio = get_strdate(orainizio);
		orafine = get_strdate(orafine);

		sqlParams.Clear();
		sqlParams.Add("@richiesteprotocollo", richiesteprotocollo);
		sqlParams.Add("@nodo", nodo);
		sqlParams.Add("@local_orainizio", local_orainizio);
		sqlParams.Add("@local_orafine", local_orafine);
		string strSql = "exec ANALISI_LOG_TAB_ANDAMENTALI  @richiesteprotocollo  ,@nodo  , " + 2 + ", @local_orainizio, @local_orafine";

		TSRecordSet rs = cdb.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, sqlParams);

		if (rs.RecordCount > 0) 
		{
			htmlToReturn.Write($@"<table border=1 bordercolor=black>");

			htmlToReturn.Write($@"<tr>");

			htmlToReturn.Write($@"<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"Data");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"Richieste Server");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"</tr>");

			//on error resume next
			bool errore = false;
			try {
				rs.MoveFirst();

			}
			catch
			{
				errore = false;
			}

			while (!rs.EOF && !errore) 
			{
				htmlToReturn.Write($@"<tr>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write(CStr(rs.Fields["Data"]));
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write(CStr(rs.Fields["Numero Richieste"]));
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"</tr>");
				rs.MoveNext();
			}
			htmlToReturn.Write($@"</table>");
			htmlToReturn.Write($@"</br></br></br>");
			htmlToReturn.Write($@"</br></br></br>");

			throw new ResponseEndException(htmlToReturn.Out(), Response, "");
			//response.end
		}
	}

	//'------------------------------------------------------------------------------------------------------------------------------------------------
	//'---------------------------------------------------------------TEMPO SPESO----------------------------------------------------------------------
	//'------------------------------------------------------------------------------------------------------------------------------------------------

	void mostraTempo(string richiesteprotocollo)
	{
		htmlToReturn.Write($@"
		<font size=""6"" color = ""red""><strong>TEMPO SPESO</strong></font> <BR/> <BR/> 
		<font size=""4"" color = ""black"">Questa scheda contiene i dati relativi a quanto tempo l’utente è stato collegato all’applicazione nel giorno della scadenza della gara/asta prima, durante e dopo la data di scadenza.</font> <BR/> <BR/> <BR/> <BR/> <BR/>
	");

		sqlParams.Clear();
		sqlParams.Add("@richiesteprotocollo", richiesteprotocollo);
		sqlParams.Add("@local_orainizio", local_orainizio);
		sqlParams.Add("@local_orafine", local_orafine);
		string strSql = "exec ANALISI_LOG_TAB_ANDAMENTALI  @richiesteprotocollo ," + 1 + " , " + 3 + ", @local_orainizio, @local_orafine";

		TSRecordSet rs = cdb.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, sqlParams);

		if (rs.RecordCount > 0 ){

			htmlToReturn.Write($@"<table border=1 bordercolor=black>");

			htmlToReturn.Write($@"<tr>");

			htmlToReturn.Write($@"<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"Data");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"Tempo Speso");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"</tr>");

			//on error resume next
			bool errore = false;
			try{
				rs.MoveFirst();
			}catch{
				errore = true;
			}

			while (!rs.EOF && !errore)
			{
				htmlToReturn.Write($@"<tr>");

				htmlToReturn.Write($@"<td>");	
				htmlToReturn.Write(CStr(rs.Fields["Data"]));
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");			
				htmlToReturn.Write(CStr(rs.Fields["TempoSpeso"]));
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"</tr>");
				rs.MoveNext();
			}
			htmlToReturn.Write($@"</table>");
			htmlToReturn.Write($@"</br></br></br>");
			htmlToReturn.Write($@"</br></br></br>");

			throw new ResponseEndException(htmlToReturn.Out(), Response, "");
		}
	}

	//'------------------------------------------------------------------------------------------------------------------------------------------------
	//'------------------------------------------------------------------SCADENZE----------------------------------------------------------------------
	//'------------------------------------------------------------------------------------------------------------------------------------------------	

	void mostraScadenza()
	{
		htmlToReturn.Write($@"
		<font size=""6"" color = ""red""><strong>SCADENZE</strong></font> <BR/> <BR/> 
		<font size=""4"" color = ""black"">Questa scheda contiene i dati relativi alle procedure con scadenza prevista nel range di date indicato dall’utente prima di effettuare l’estrazione del LOG.<BR/> <BR/> 
		");

		sqlParams.Clear();
		sqlParams.Add("@local_orafine1", Left(local_orafine, 10) + " 00:00:00");
		sqlParams.Add("@local_orafine2", Left(local_orafine, 10) + " 23:59:59");
	    //qui i parametri sql sono corretti prima di @local_orafine1 ci va un apice perché in sql l'apice dentro una stringa va raddoppiato
		string strSql = "exec DASHBOARD_SP_GARE_CAL 1 , '' , '' , '' , 'datariferimento >= '@local_orafine1' and datariferimento <= '@local_orafine2' ' , '' , -1, 1";

		//'response.write left(local_orainizio,10)
		//'response.write local_orafine
		//'response.end
		TSRecordSet? rs = cdb.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, sqlParams);

		if (rs is not null && rs.RecordCount > 0)
		{
			htmlToReturn.Write($@"<table border=1 bordercolor=black>");

			htmlToReturn.Write($@"<tr>");

			htmlToReturn.Write($@"<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"Tipo Procedura");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"Descrizione");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"Numero");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"</tr>");

			//on error resume next
			bool errore = false;
			try
			{
				rs.MoveFirst();

			}
			catch
			{
				errore = true;
			}


			while (!rs.EOF && !errore)
			{


				htmlToReturn.Write($@"<tr>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write(CStr(rs.Fields["DescTipoProcedura"]));
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write(CStr(rs.Fields["Descrizione"]));
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write(CStr(rs.Fields["Num"]));
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"</tr>");
				rs.MoveNext();
			}
			htmlToReturn.Write($@"</table>");
			htmlToReturn.Write($@"</br></br></br>");
			htmlToReturn.Write($@"</br></br></br>");


			throw new ResponseEndException(htmlToReturn.Out(), Response, "");
		}
	}

	//'USARE LA STORED CHE VIENE UTILIZZATA SULL'APPLICAZIONE


	//'------------------------------------------------------------------------------------------------------------------------------------------------
	//'--------------------------------------------------------------ERRORE----------------------------------------------------------------------
	//'------------------------------------------------------------------------------------------------------------------------------------------------

	//'function mostraEvent()
	//'end function
	//'TROVARE IL MODO PER USARE LA TABELLA DELL'EVENT VIEWER PER RECUPERARE L'ERRORE SPECIFICO

	void EstrazioneLogXLSX(string idPfu, string datainizio, string datafine)
	{
		HttpContext.Response.Redirect($"../CTL_Library/accessBarrier.asp?goto=xlsx.aspx&TitoloFile=Esportazione_LOG&FILTER=&TIPODOC=&MODEL=&VIEW=ANALISI_LOG_TAB_LOG_UTENTE&hiddenfilter_block=YES&hiddenViewerCurFilter= {URLEncode(CStr($"{datainizio}#~#{datafine}#~#"))}&HIDECOL=&STORED_SQL=YES&Sort=&IDDOC={idPfu}");
	}

	//'------------------------------------------------------------------------------------------------------------------------------------------------
	//'-----------------------------------------------------------ESTRAZIONE LOG UTENTE----------------------------------------------------------------
	//'------------------------------------------------------------------------------------------------------------------------------------------------
	void EstrazioneLog(string idPfu,string datainizio,string datafine,string orainizio,string orafine){
		htmlToReturn.Write($@"	
			<font size=""6"" color = ""red""><strong>ESTRAZIONE LOG UTENTE</strong></font> <BR/> <BR/> 
			<font size=""4"" color = ""black"">Questa scheda contiene i dati relativi a tutte le attività che l’utente ha effettuato dalla creazione dell’offerta fino alla scadenza di essa.</font> <BR/> <BR/> <BR/> <BR/> <BR/>
		");

		datainizio	=	get_strdate(datainizio);
		datafine	=	get_strdate(datafine);

		if (!string.IsNullOrEmpty(orainizio)){
			datainizio = get_strdate(orainizio);
		}

		if (!string.IsNullOrEmpty(orafine)) {
			datafine = get_strdate(orafine);
		}

		//'response.write orainizio & "-"
		//'response.write datainizio
		//'response.end
		sqlParams.Clear();
		sqlParams.Add("@idPfu", idPfu);
		sqlParams.Add("@datainizio", datainizio);
		sqlParams.Add("@datafine", datafine);
		string strSql = "exec ANALISI_LOG_TAB_LOG_UTENTE @idPfu , @datainizio, @datafine";

		TSRecordSet rs = cdb.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, sqlParams);

		if (rs.RecordCount > 0 ){

			htmlToReturn.Write($@"<table border=1 bordercolor=black>");
			htmlToReturn.Write($@"	<tr>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Numero Riga"));
			htmlToReturn.Write($@"		</td>");


			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("idPfu"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Data LOG"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Descrizione"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Session ID"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Pagina di Arrivo"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Query String"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Browser Usato"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("IP"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Pagina di Partenza"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Note Aggiuntive"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("ID"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"	</tr>");

			bool errore = false;
			try{
				rs.MoveFirst();
			}catch{
				errore = true;
			}

			Num_riga = 1;

			while (!rs.EOF && !errore){
				string stringa = "/AF_WebFileManager/proxy/1.0/uploadattach";
				string paginaDiArrivo = CStr(rs.Fields["paginaDiArrivo"]);
				long datalog = CDate(get_strdate(CStr(rs.Fields["datalog"]))).Ticks;

				if (paginaDiArrivo == stringa ){
					htmlToReturn.Write($@"<tr class=""selection"">");

				}else if (datalog >= CDate(orainizio).Ticks && datalog <= CDate(orafine).Ticks ){
					htmlToReturn.Write($@"<tr class=""orarioRichiesto"">");

				}else {
					htmlToReturn.Write($@"<tr  class=""base"">");

				}
				//} TODO un end if di troppo??

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");
				htmlToReturn.Write(CStr(Num_riga));	
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");
				htmlToReturn.Write(CStr(rs.Fields["pfunome"]));
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");
				htmlToReturn.Write(get_strdate(CStr(rs.Fields["dataLog"])));								
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");				
				htmlToReturn.Write(CStr(rs.Fields["descrizione"]));
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");					
				htmlToReturn.Write(CStr(rs.Fields["sessionID"]));
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");					
				htmlToReturn.Write(CStr(rs.Fields["paginaDiArrivo"]));
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");					
				htmlToReturn.Write(CStr(rs.Fields["querystring"]));
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");					
				htmlToReturn.Write(CStr(rs.Fields["browserUsato"]));
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");					
				htmlToReturn.Write(CStr(rs.Fields["ip"]));
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");


				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");					
				htmlToReturn.Write(CStr(rs.Fields["paginadipartenza"]));
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");	

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");
				htmlToReturn.Write(CStr(rs.Fields["form"]));
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"<td>");
				htmlToReturn.Write($@"<label>");
				htmlToReturn.Write(CStr(rs.Fields["id"]));
				htmlToReturn.Write($@"</label>");
				htmlToReturn.Write($@"</td>");

				htmlToReturn.Write($@"</tr>");
				rs.MoveNext();
				Num_riga = Num_riga + 1;

			}

			htmlToReturn.Write($@"</table>");
			throw new ResponseEndException(htmlToReturn.Out(), Response, "");
			//response.end 	
		}
	}

	//'------------------------------------------------------------------------------------------------------------------------------------------------
	//'-----------------------------------------------------------------RIEPILOGO----------------------------------------------------------------------
	//'------------------------------------------------------------------------------------------------------------------------------------------------
	void riepilogo(string protocollo, string aziRagioneSociale){
		TSRecordSet rs = null;
		if (!string.IsNullOrEmpty(protocollo) && !string.IsNullOrEmpty(aziRagioneSociale)){

			sqlParams.Clear();
			sqlParams.Add("@protocollo", protocollo);
			sqlParams.Add("@aziRagioneSociale", aziRagioneSociale); 
			string strSql = "exec ANALISI_LOG_TAB_RIEPILOGO @protocollo , @aziRagioneSociale";
			rs = cdb.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, sqlParams);
			if (rs.RecordCount > 0 ){

				htmlToReturn.Write($@"<table border=1 bordercolor=black>");
				htmlToReturn.Write($@"	<tr>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			AVVIA LOG");
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Ente"));
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Protocollo"));
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Oggetto Gara"));
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Data Pubblicazione"));
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Data Apertura Offerte"));
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Operatore Economico"));
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Utente"));
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Data Creazione Offerta"));
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			Compilazione Offerta");
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Data Scadenza Offerta"));
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			" + ApplicationCommon.CNV("ID Utente"));
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
				htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Dettaglio"));
				htmlToReturn.Write($@"		</td>");

				htmlToReturn.Write($@"	</tr>");

				bool errore = false;
				try{
					rs.MoveFirst();
				}catch{
					errore = true;
				}


				//on error resume next

				while (!rs.EOF && !errore){

					htmlToReturn.Write($@"<tr>");

					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<A >");
					htmlToReturn.Write($@"<a href=""dati.asp?COSA=ESTRAZIONE&idPfu=" + rs.Fields["idPfu"] + "&DataCreazione=" + rs.Fields["DataCreazione"] + "&DataScadenzaOfferta=" + rs.Fields["DataScadenzaOfferta"] + "&local_orainizio=" + local_orainizio + "&local_orafine=" + local_orafine + @""" target=""_blank"">LOG</a>");
					htmlToReturn.Write($@"</A>");
					htmlToReturn.Write($@"</td>");

					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<label>");
					htmlToReturn.Write(CStr(rs.Fields["Ente"]));
					htmlToReturn.Write($@"</label>");
					htmlToReturn.Write($@"</td>");

					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<label>");
					htmlToReturn.Write(CStr(rs.Fields["ProtocolloGara"]));
					htmlToReturn.Write($@"</label>");
					htmlToReturn.Write($@"</td>");

					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<label>");
					htmlToReturn.Write(CStr(rs.Fields["OggettoGara"]));
					htmlToReturn.Write($@"</label>");
					htmlToReturn.Write($@"</td>");

					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<label>"					);
					htmlToReturn.Write(CStr(rs.Fields["DataPubblicazione"]));
					htmlToReturn.Write($@"</label>");
					htmlToReturn.Write($@"</td>");

					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<label>"					);
					htmlToReturn.Write(CStr(rs.Fields["DataAperturaOfferte"]));
					htmlToReturn.Write($@"</label>");
					htmlToReturn.Write($@"</td>");

					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<label>"					);
					htmlToReturn.Write(CStr(rs.Fields["AziRagioneSociale"]));
					htmlToReturn.Write($@"</label>");
					htmlToReturn.Write($@"</td>");

					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<label>"					);
					htmlToReturn.Write(CStr(rs.Fields["pfuNome"]));
					htmlToReturn.Write($@"</label>");
					htmlToReturn.Write($@"</td>");


					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<label>"					);
					htmlToReturn.Write(CStr(rs.Fields["DataCreazione"]));
					htmlToReturn.Write($@"</label>");
					htmlToReturn.Write($@"</td>"	);


					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<A >"				);
					htmlToReturn.Write($@"<a href=""dati.asp?COSA=OFFERTA&IdOfferta=" + rs.Fields["IdOfferta"] + "&DataCreazione=" + rs.Fields["DataCreazione"] + "&DataScadenzaOfferta=" + rs.Fields["DataScadenzaOfferta"] + @"""target=""_blank"">OFFERTA</a>");
					htmlToReturn.Write($@"</A>");
					htmlToReturn.Write($@"</td>");

					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<label>");
					htmlToReturn.Write(CStr(rs.Fields["DataScadenzaOfferta"]));
					htmlToReturn.Write($@"</label>");
					htmlToReturn.Write($@"</td>");

					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<label>");
					htmlToReturn.Write(CStr(rs.Fields["idPfu"]));
					htmlToReturn.Write($@"</label>");
					htmlToReturn.Write($@"</td>");


					htmlToReturn.Write($@"<td>");
					htmlToReturn.Write($@"<A >"				);
					htmlToReturn.Write($@"<a href=""dati.asp?COSA=COPIA&ente=" + rs.Fields["Ente"] + "&ProtocolloGara=" + rs.Fields["ProtocolloGara"] + "&oggettogara=" + rs.Fields["OggettoGara"] + "&DataPubblicazione=" + rs.Fields["DataPubblicazione"] + "&DataAperturaOfferte=" + rs.Fields["DataAperturaOfferte"] + "&AziRagioneSociale=" + rs.Fields["AziRagioneSociale"] + "&pfuNome=" + rs.Fields["pfuNome"] + "&DataCreazione=" + rs.Fields["DataCreazione"] + "&DataScadenzaOfferta=" + rs.Fields["DataScadenzaOfferta"] + @""" target=""_blank"">APRI</a>");
					htmlToReturn.Write($@"</A>");
					htmlToReturn.Write($@"</td>");

					htmlToReturn.Write($@"</tr>");
					rs.MoveNext();

				}

				htmlToReturn.Write($@"</table>");

			}else{
				htmlToReturn.Write($@"Per il Protocollo inserito non &egrave; presente nessun Bando!");
			}


		}else{
			htmlToReturn.Write($@"Digitare il Protocollo!");

		}
		string check;
		check = GetValueFromForm(Request, "FLUSH");
		if (!string.IsNullOrEmpty(check) && rs != null){
			rs.MoveFirst();
			string utente;
			utente = CStr(rs.Fields["idPfu"]);
			string strSql = "delete from ctl_log_utente_lavoro where idpfu= " + utente +" and datalog > '" + local_orainizio +"' and datalog < '" + local_orafine +"'";
			cdb.Execute(strSql, ApplicationCommon.Application.ConnectionString);
		}

	}

	//'------------------------------------------------------------------------------------------------------------------------------------------------
	//'-----------------------------------------------------------CONVERSIONE DATE---------------------------------------------------------------------
	//'------------------------------------------------------------------------------------------------------------------------------------------------

	string get_strdate(string paramdata){

		string dd, mm, yy, hh, nn, ss;

		string datevalue, timevalue, /*dtsnow,*/ dtsvalue;
		DateTime dtsnow = CDate(paramdata);

		dd = Right("00" + DateAndTime.Day(dtsnow), 2);
		mm = Right("00" + DateAndTime.Month(dtsnow), 2);
		yy = CStr(DateAndTime.Year(dtsnow));

		hh = Strings.Right("00" + DateAndTime.Hour(dtsnow), 2);
		nn = Strings.Right("00" + DateAndTime.Minute(dtsnow), 2);
		ss = Strings.Right("00" + DateAndTime.Second(dtsnow), 2);


		datevalue = yy + "-" + mm + "-" + dd;

		timevalue = hh + ":" + nn + ":" + ss;

		dtsvalue = datevalue + " " + timevalue;
		return dtsvalue;


	}

	//'------------------------------------------------------------------------------------------------------------------------------------------------
	//'-----------------------------------------------------------COMPILAZIONE OFFERTA------------------------------------------------------------------
	//'------------------------------------------------------------------------------------------------------------------------------------------------


	void compilaOfferta (string IdOfferta, string datainizio, string datafine){
		htmlToReturn.Write($@"
			<font size=""6"" color = ""red""><strong>COMPILAZIONE OFFERTA</strong></font> <BR/> 
			<font size=""4"" color = ""black"">Questa scheda contiene i dati relativi all’offerta e consente di avere una stima di massima della percentuale di compilazione raggiunta. Le informazioni riportate possono non essere corrette e vanno prese solo a titolo indicativo, poiché l’offerta di per se è cifrata nel sistema e non ci è possibili accedere ai dati puntuali, e questi vengono desunti dalle operazioni effettuate e recuperate dal LOG. Inoltre si ha la possibilità di vedere anche quanto tempo l’utente ha impiegato per compilare l’offerta. </font> <BR/> <BR/> <BR/> <BR/> <BR/>
		");


		sqlParams.Clear();
		sqlParams.Add("@IdOfferta", IdOfferta);
		sqlParams.Add("@datainizio", datainizio);
		sqlParams.Add("@datafine", datafine);
		string strSql1 = "exec ANALISI_LOG_TAB_COMPILAZIONE_OFFERTA @IdOfferta,"+ 1 +", @datainizio, @datafine";
		string strSql  = "exec ANALISI_LOG_TAB_COMPILAZIONE_OFFERTA @IdOfferta,"+ 2 +", @datainizio, @datafine";
		string strSql3 = "exec ANALISI_LOG_TAB_COMPILAZIONE_OFFERTA @IdOfferta,"+ 3 +", @datainizio, @datafine";
		string strSql4 = "exec ANALISI_LOG_TAB_COMPILAZIONE_OFFERTA @IdOfferta,"+ 4 +", @datainizio, @datafine";
		string strSql5 = "exec ANALISI_LOG_TAB_COMPILAZIONE_OFFERTA @IdOfferta,"+ 5 +", @datainizio, @datafine";
		string strSql6 = "exec ANALISI_LOG_TAB_COMPILAZIONE_OFFERTA @IdOfferta,"+ 6 +", @datainizio, @datafine";
		string strSql7 = "exec ANALISI_LOG_TAB_COMPILAZIONE_OFFERTA @IdOfferta,"+ 7 +", @datainizio, @datafine";
		string strSql8 = "exec ANALISI_LOG_TAB_COMPILAZIONE_OFFERTA @IdOfferta,"+ 8 +", @datainizio, @datafine";
		//'response.write orainizio
		//'response.end
		

		TSRecordSet rs1 = cdb.GetRSReadFromQuery_(strSql1, ApplicationCommon.Application.ConnectionString, sqlParams);
		TSRecordSet rs = cdb.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, sqlParams);
		TSRecordSet rs3 = cdb.GetRSReadFromQuery_(strSql3, ApplicationCommon.Application.ConnectionString, sqlParams);
		TSRecordSet rs4 = cdb.GetRSReadFromQuery_(strSql4, ApplicationCommon.Application.ConnectionString, sqlParams);
		TSRecordSet rs5 = cdb.GetRSReadFromQuery_(strSql5, ApplicationCommon.Application.ConnectionString, sqlParams);
		TSRecordSet rs6 = cdb.GetRSReadFromQuery_(strSql6, ApplicationCommon.Application.ConnectionString, sqlParams);
		TSRecordSet rs7 = cdb.GetRSReadFromQuery_(strSql7, ApplicationCommon.Application.ConnectionString, sqlParams);
		TSRecordSet rs8 = cdb.GetRSReadFromQuery_(strSql8, ApplicationCommon.Application.ConnectionString, sqlParams);
		if (rs.RecordCount > 0 ){ 		

			//'response.write strSql8
			//'response.end

			htmlToReturn.Write($@"<table border=1 bordercolor=black>"); 				
			htmlToReturn.Write($@"	<tr>");


			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Sezione"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Alegati Richiesti"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Alegati Inseriti"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Buste Firmate"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Note"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"	</tr>");



			htmlToReturn.Write($@"<tr>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");				
			htmlToReturn.Write($@"Documentazione");				
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");				
			htmlToReturn.Write(CStr(rs.Fields["ALLEGATI RICHIESTI BUSTA DOCUMETAZIONE"]));
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");				
			htmlToReturn.Write(CStr(rs3.Fields["ALLEGATI INSERITI E SALVATI BUSTA DOCUMETAZIONE"]));
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");					
			htmlToReturn.Write($@"");//'rs("BusteFirmate").value				
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");
			htmlToReturn.Write($@"I dati riportati sono indicativi.");//'rs("note").value					
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");	

			htmlToReturn.Write($@"</tr>");


			htmlToReturn.Write($@"<tr>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");				
			htmlToReturn.Write($@"Tecnica");				
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");
			if (rs8.RecordCount > 0){
				//'if rs8("BUSTA").value = "MOD_OffertaTec" then
				htmlToReturn.Write(CStr(rs8.Fields["ALLEGATI RICHIESTI"]));

			}else {
				htmlToReturn.Write(CStr(0));
			}

			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");				
			htmlToReturn.Write(CStr(rs5.Fields["ALLEGATI INSERITI E SALVATI BUSTA TECNICA"]));
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");
			htmlToReturn.Write("");// 'rs("BusteFirmate").value				
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");					
			htmlToReturn.Write($@"I dati riportati sono indicativi.");//'rs("note").value					
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"</tr>");



			htmlToReturn.Write($@"<tr>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");				
			htmlToReturn.Write($@"Economica");				
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");				
			if (rs4.RecordCount > 0){
				//'if rs8("BUSTA").value = "MOD_OffertaTec" then
				htmlToReturn.Write(CStr(rs4.Fields["ALLEGATI RICHIESTI"]));


			}else {
				htmlToReturn.Write(CStr(0));
			}

			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");
			htmlToReturn.Write(CStr(rs5.Fields["ALLEGATI INSERITI E SALVATI BUSTA ECONOMICA"]));
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");
			htmlToReturn.Write($@"");//'rs("BusteFirmate").value				
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>");

			htmlToReturn.Write($@"<td>");
			htmlToReturn.Write($@"<label>");
			htmlToReturn.Write($@"I dati riportati sono indicativi.");//'rs("note").value					
			htmlToReturn.Write($@"</label>");
			htmlToReturn.Write($@"</td>"	);

			htmlToReturn.Write($@"</tr>");



			htmlToReturn.Write($@"</table>");
			htmlToReturn.Write($@"<br><br><br>");
			htmlToReturn.Write($@"TEMPO CHE L'UTENTE HA LAVORATO SUL DOCUMENTO OFFERTA");
			htmlToReturn.Write($@"<br><br>");
			htmlToReturn.Write($@"<table border=1 bordercolor=black>");
			htmlToReturn.Write($@"	<tr>");


			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Data"));
			htmlToReturn.Write($@"		</td>");

			htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
			htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Minuti Per Giorno"));
			htmlToReturn.Write($@"		</td>");
			htmlToReturn.Write($@"	</tr>");

			while (!rs1.EOF ){//&& err.number = 0
				htmlToReturn.Write(@"<td>");
				htmlToReturn.Write(@"<label>");
				htmlToReturn.Write(CStr(rs1.Fields["Giorno"]));
				htmlToReturn.Write(@"</label>");
				htmlToReturn.Write(@"</td>");

				htmlToReturn.Write(@"<td>");
				htmlToReturn.Write(@"<label>");
				htmlToReturn.Write(CStr(rs1.Fields["Tempo Lavorato (Minuti Al Giorno)"]));
				htmlToReturn.Write(@"</label>");
				htmlToReturn.Write(@"</td>"	);

				htmlToReturn.Write(@"</tr>");
				rs1.MoveNext();

			}
			throw new ResponseEndException(htmlToReturn.Out(), Response, "");
			//response.end 	
		}

	}

	//'------------------------------------------------------------------------------------------------------------------------------------------------
	//'-----------------------------------------------------------COPIA------------------------------------------------------------------
	//'------------------------------------------------------------------------------------------------------------------------------------------------


	void copiariga(string Ente,string ProtocolloGara,string OggettoGara,string DataPubblicazione,string DataAperturaOfferte,string AziRagioneSociale,string pfuNome,string DataCreazione,string DataScadenzaOfferta){

		htmlToReturn.Write($@"<table border=1 bordercolor=black>");

		htmlToReturn.Write($@"<tr>");


		htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
		htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Ente"));
		htmlToReturn.Write($@"		</td>");
		htmlToReturn.Write($@"<td>");
		htmlToReturn.Write($@"<label>");
		htmlToReturn.Write(Ente);

		htmlToReturn.Write($@"</label>");
		htmlToReturn.Write($@"</tr>");


		htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
		htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Protocollo"));
		htmlToReturn.Write($@"		</td>");
		htmlToReturn.Write($@"<td>");
		htmlToReturn.Write($@"<label>");
		htmlToReturn.Write(ProtocolloGara);
		htmlToReturn.Write($@"</label>");
		htmlToReturn.Write($@"</tr>");


		htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
		htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Oggetto Gara"));
		htmlToReturn.Write($@"		</td>");
		htmlToReturn.Write($@"<td>");
		htmlToReturn.Write($@"<label>");
		htmlToReturn.Write(OggettoGara);
		htmlToReturn.Write($@"</label>");
		htmlToReturn.Write($@"</tr>");


		htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
		htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Data Pubblicazione"));
		htmlToReturn.Write($@"		</td>");
		htmlToReturn.Write($@"<td>");
		htmlToReturn.Write($@"<label>");
		htmlToReturn.Write(DataPubblicazione);
		htmlToReturn.Write($@"</label>");
		htmlToReturn.Write($@"</tr>");


		htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
		htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Data Apertura Offerte"));
		htmlToReturn.Write($@"		</td>");
		htmlToReturn.Write($@"<td>");
		htmlToReturn.Write($@"<label>");
		htmlToReturn.Write(DataAperturaOfferte);
		htmlToReturn.Write($@"</label>");
		htmlToReturn.Write($@"</tr>");

		//'response.write "<td>"
		//'response.write "</td>"
		//'response.write "<td>"					
		//'response.write "</tr>"				

		htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
		htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Operatore Economico"));
		htmlToReturn.Write($@"		</td>");
		htmlToReturn.Write($@"<td>");
		htmlToReturn.Write($@"<label>");
		htmlToReturn.Write(AziRagioneSociale);
		htmlToReturn.Write($@"</label>");
		htmlToReturn.Write($@"</tr>");


		htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
		htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Utente"));
		htmlToReturn.Write($@"		</td>");
		htmlToReturn.Write($@"<td>");
		htmlToReturn.Write($@"<label>");
		htmlToReturn.Write(pfuNome);
		htmlToReturn.Write($@"</label>");
		htmlToReturn.Write($@"</tr>");


		htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
		htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Data Creazione Offerta"));
		htmlToReturn.Write($@"		</td>");
		htmlToReturn.Write($@"<td>");
		htmlToReturn.Write($@"<label>");
		htmlToReturn.Write(DataCreazione);
		htmlToReturn.Write($@"</label>");
		htmlToReturn.Write($@"</tr>"	);


		htmlToReturn.Write($@"		<td class=""CellIntestGrid"" align=""center"">");
		htmlToReturn.Write($@"			" + ApplicationCommon.CNV("Data Scadenza Offerta"));
		htmlToReturn.Write($@"		</td>");
		htmlToReturn.Write($@"<td>");
		htmlToReturn.Write($@"<label>");
		htmlToReturn.Write(DataScadenzaOfferta);
		htmlToReturn.Write($@"</label>");
		htmlToReturn.Write($@"</tr>");

		htmlToReturn.Write($@"</td>");




		htmlToReturn.Write($@"</table>");
		htmlToReturn.Write($@"</br></br></br>");
		htmlToReturn.Write($@"</br></br></br>");

		throw new ResponseEndException(htmlToReturn.Out(), Response, "");
		//response.end 	

	}

	htmlToReturn.Write($@"
		</body>

		</html>
	");



}@Html.Raw(htmlToReturn.Out())