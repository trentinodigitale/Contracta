@page "/CTL_LIBRARY/functions/checkCF.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.controlliModel;
@model eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.checkCFModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
}
@{

    //'--Versione=1&data=2014-09-05&Attvita=62234&Nominativo=Leone

    //'-- Parametri in GET
    //'--		NOME
    //'--		COGNOME
    //'--		CF

    //'--	OUTPUT
    //'--		1#1	 				Nessun errore, Esito OK, CF coerente
    //'--		1#0	 				Nessun errore, Esito NON OK, CF non coerente o CF non valido
    //'--		0#Msg di errore		Errore server


    string output ="";

    string nome = GetParamURL(Request.QueryString.ToString(), "NOME").Trim();
    string cognome = GetParamURL(Request.QueryString.ToString(), "COGNOME").Trim();
    string 	cf = GetParamURL(Request.QueryString.ToString(), "CF").Trim();
    string	codStato = GetParamURL(Request.QueryString.ToString(), "STATO").Trim();
    string 	azi = GetParamURL(Request.QueryString.ToString(), "NOME").ToLower();
    
    if (!string.Equals(azi,"YES"))
    {
        //-- se sono presenti tutti i parametri
        if (!string.IsNullOrEmpty(nome) && !string.IsNullOrEmpty(cognome) && !string.IsNullOrEmpty(cf))
        {
            string resp = ControllaCF(cf, true);

            //'-- se il codice fiscale è valido 
            if (string.IsNullOrEmpty(resp))
            {
                // '-- se il codice fiscale è coerente con nome e cognome
                if (!isMyCF( nome, cognome, cf )) 
                {
                    output = "1#0";
                }
                else
                {
                    output = "1#1";
                }
            }
            else
            {
                output = "1#0";
            }
        }
        else
        {
            output = "0#Passare tutti i parametri";  
        }
        htmlToReturn.Write(output);
    }
    else
    {
        //'-- Controllo del codice fiscale di un azienda
        if (string.Equals(codStato, "M-1-11-ITA") && string.IsNullOrEmpty(cf))
        {
            exitWithMsg("0#Inserire il codice fiscale");
        }
        if (string.Equals(codStato,"M-1-11-ITA") && !string.IsNullOrEmpty(cf))
        {
            // '-- ****************************************
            //'-- *** CONTROLLO FORMALE CODICE FISCALE ***
            //'-- ****************************************

           string resp = ControllaCF(cf, false);

            if (!string.IsNullOrEmpty(resp))
            {
                exitWithMsg($"0#{resp}");
            }
        }
        exitWithMsg("1#OK");
    }
    void exitWithMsg(string msg)
    {
        htmlToReturn.Write(msg);
        throw new ResponseEndException(htmlToReturn.Out(), Response, "");
    }
}@Html.Raw(htmlToReturn.Out())