@page "/CTL_LIBRARY/functions/Check_CurrentUserInRTI.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.HTML.BasicFunction;
@model eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.Check_CurrentUserInRTIModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
}
@{
    
    string strFascicolo = GetParamURL(Request.QueryString.ToString(), "FASCICOLO");
    string strSubType = GetParamURL(Request.QueryString.ToString(), "SUBTYPE");

    var sqlParams = new Dictionary<string, object?>();
    sqlParams.Add("@tipodoc", "offerta_partecipanti");
    sqlParams.Add("@tiporiferimento", "AUSILIARIE");
    sqlParams.Add("@idazi", CInt(session["IDAZI"]));
    sqlParams.Add("@fascicolo", strFascicolo);
    sqlParams.Add("@type", strSubType);

    string strSQL = @"select Fascicolo, IdAzi, RagSocRiferimento, TipoRiferimento, Ruolo_Impresa
                        from 
                            CTL_DOC C with(nolock), Document_Offerta_Partecipanti OP, Tab_Messaggi_Fields TMF
                        where 
                            TipoDoc=@tipodoc and TipoRiferimento <> @tiporiferimento and C.Id=OP.IdHeader and OP.IdAzi = @idazi 
                            and Fascicolo=@fascicolo
                            and TMF.Stato=2 and C.LinkedDoc = TMF.IdMsg and TMF.iSubType=@type
                            and TMF.iType='55'";
    //'Response.Write strSQL
    //'Response.End
    CommonDbFunctions cdb = new();
    TSRecordSet rs = cdb.GetRSReadFromQuery_(strSQL, ApplicationCommon.Application.ConnectionString, sqlParams);
    if(rs.RecordCount >0)
    {
        rs.MoveFirst();
        htmlToReturn.Write($"{CStr(rs["RagSocRiferimento"])}#{CStr(rs["TipoRiferimento"])}");
    }
    else
    {
        htmlToReturn.Write("");
    }
   
    throw new ResponseEndException(htmlToReturn.Out(), Response, "");
}@Html.Raw(htmlToReturn.Out())