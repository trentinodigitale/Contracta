@page "/Functions/Calendario.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonModule
@using Microsoft.VisualBasic;
@using System.Web
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.CommonModule.Basic;
@using static eProcurementNext.Razor.Pages.Functions.costanti;
@using static eProcurementNext.Razor.Pages.Functions.CalendarioModel;
@using eProcurementNext.CommonDB;
@model eProcurementNext.Razor.Pages.Functions.CalendarioModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new CommonDbFunctions();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new EprocResponse(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
}
@{htmlToReturn.Write(@"<center><div id=""MsgFirma"" style=><font class=""loading""></font></div></center>");}
@{
	@*<!-- #INCLUDE FILE="ClientLibrary/IsNumber.inc" -->*@
	htmlToReturn.Write(@"<script type=""text/javascript"" src=""ClientLibrary/IsNumber.js""></script>");
	htmlToReturn.Write(@"<link rel=""stylesheet"" href=""../Themes/Default/loading.css"" type=""text/css"">");
	//'Questa sub permette di gestire l'errore
	void errore(string nNumErrore, string strPercorso, string strTipoErrore)
	{
		string strMsgErr = URLEncode("[Description:" + strTipoErrore + "][Code:" + nNumErrore + "][Source:" + strPercorso + "]");
		htmlToReturn.Write(@"<script>self.location='errore.asp?strErrore=" + strMsgErr + "'</script>");
		return;
	}
	string versioneAflink = URLEncode(CStr(ApplicationCommon.Application["VERSIONE_AFLINK"]));

}
@{

	string strCalendarType; //' tipo di calendario: {"" o "1"-->classico; "2"-->settimanale, "3"-->mensile}
	string strYearWarning; //'messaggio di avviso per dsata non corretta
	string strWeekWordTranslate; //'chiave della settimaa tradotta


	strWeekWordTranslate = ApplicationCommon.CNV("Settimana");
	string strData = GetParamURL(Request.QueryString.ToString(), "strData");
	string strDataVis = GetParamURL(Request.QueryString.ToString(), "strDataVis");
	strCalendarType = GetParamURL(Request.QueryString.ToString(), "strCalendarType");


	if (IsEmpty(strCalendarType)) {
		strCalendarType = "";
	} else {
		strCalendarType = strCalendarType.Trim();
	}

	//' recupero lingua
	string SuffLing = GetParamURL(Request.QueryString.ToString(), "SuffLing");

	if (GetParamURL(Request.QueryString.ToString(), "CTL") == "yes") {
		//'-- recupero il suffisso dalla sessione
		SuffLing = session["strSuffLing"];
		//'if SuffLing <> "I" then SuffLing  = "UK"
	}


	//' recupero Id market place
	string IdMp = GetParamURL(Request.QueryString.ToString(), "IdMp");
	if (string.IsNullOrEmpty(IdMp)) {
		IdMp = CStr(session["IdMP"]);
	}


	//'stringhe di multilinguismo
	string strRipulisci = ApplicationCommon.CNV("Ripulisci");
	string strAnnulla = ApplicationCommon.CNV("Annulla");
	string strConferma = ApplicationCommon.CNV("Conferma");
	strYearWarning = ApplicationCommon.CNV("Data non corretta");
	dynamic[] arrayData = new dynamic[50];
	string strTempData;
	string[] arrayDataOnly;
	if (string.IsNullOrEmpty(strCalendarType)) {
		if (Strings.InStrRev(strData, "T", -1, Microsoft.VisualBasic.CompareMethod.Text) > 0) {
			arrayDataOnly = Strings.Split(strData, "T", -1, Microsoft.VisualBasic.CompareMethod.Text);
			strTempData = arrayDataOnly[0];
		} else {
			strTempData = strData;

		}
		if (!string.IsNullOrEmpty(strTempData)) {
			arrayData = Strings.Split(strTempData, "-", -1, Microsoft.VisualBasic.CompareMethod.Text);
		} else {
			arrayData = new dynamic[3];
			arrayData[0] = DateAndTime.Year(DateAndTime.Now);
			arrayData[1] = DateAndTime.Month(DateAndTime.Now);
			arrayData[2] = 01;
		}
	}
}
@{
	htmlToReturn.Write($@"

		<html>
			<head><meta http-equiv=content-type content=text/html; charset=utf-8>

			<title>Calendar</title>
			<link rel=""stylesheet"" href=""" + ApplicationCommon.Application["strVirtualDirectory"] + $@"/Themes/Default/PositionalModel.css"" type=""text/css"">
			<link rel=""stylesheet"" href=""" + ApplicationCommon.Application["strVirtualDirectory"] + $@"/Themes/Default/common.CSS"" type=""text/css"">
			<link rel=""stylesheet"" href=""" + ApplicationCommon.Application["strVirtualDirectory"] + $@"/Themes/Default/Command.CSS"" type=""text/css"">
			");
	if (IsMasterPageNew())
	{
		htmlToReturn.Write(@"<link rel=""stylesheet"" href=""../css/vapor/vapor.css"" type=""text/css"">");
		htmlToReturn.Write(@"<link rel=""stylesheet"" href=""../css/vapor/customColor.css"" type=""text/css"">");

	}
	
	htmlToReturn.Write($@"
			</head>
			<body onKeyDown=""javascript:if (event.keyCode == 116) {{event.keyCode = 0;event.returnValue = false;}}"" >

			<form name=calendario>
			<input type=""hidden"" name=""data"" value="""">
			<input type=""hidden"" name=""data_vis"" value="""">
			<DIV ID=""DivCalendar""></DIV>

		");
}
@{

	//'il nome del campo hidden che contiene la data nel formato aaaa-mm-gg
	string strcampoHidden = GetParamURL(Request.QueryString.ToString(), "campoHidden");
	strcampoHidden = strcampoHidden.Replace(@"'", @"\'");
	string strModifyObject = GetParamURL(Request.QueryString.ToString(), "strModifyObject");
	//'il nome del campo data in visualizzazione
	string strcampoVis = GetParamURL(Request.QueryString.ToString(), "campoVis");
	//'Nome dell'eventuale form fpodotti
	//'Questa variabile risulter� sempre vuota  tranne quando viene utilizzata nelle griglie dei prodotti
	string nomeFormProdotti = GetParamURL(Request.QueryString.ToString(), "nomeFormProdotti");
	if (string.IsNullOrEmpty(nomeFormProdotti)) {
		nomeFormProdotti = strcampoHidden;
	}

	//'--recupero pagina che contiene il controllo
	string ContainerControl = GetParamURL(Request.QueryString.ToString(), "ContainerControl");
	ContainerControl = ContainerControl.Replace(@"'", @"\'");
	ContainerControl = ContainerControl.Replace(@"document.new_document", @"");
	ContainerControl = ContainerControl.Replace(@"document.FormRicProd", @"");
	ContainerControl = ContainerControl.Replace(@"parent.frames[\'nascosto\'].formSalvaDati", @"parent.frames[\'nascosto\']");
	//'--se firefox cambio il modo di accedere al frame dei dati azienda
	//if (sBrowserType != "ie" ){
	ContainerControl = ContainerControl.Replace(@"parent.frames[\'nascosto\']", @"parent.frames[2]");
	//}

}
@{


	htmlToReturn.Write($@"<script language=""javascript"" src=""ClientLibrary/functionsCalendar.js?v=" + versioneAflink + @"""></script>");
	htmlToReturn.Write($@"
		<script language=""javascript"">

			window.onload=onOnLoad;

			function onOnLoad()
			{{
				try
				{{	
					window.focus();
				}}
				catch(e)
				{{
				}}
			}}

			function ReplaceExtended(strExpression,strFind,strReplace){{

			  while (strExpression.indexOf(strFind)>=0)
  				strExpression=strExpression.replace(strFind,strReplace);

			return strExpression;

			}}

			var strWeekWordTranslate = unescape(""" + strWeekWordTranslate + @"""); //traduziuone di settimana
			var strYearWarning = unescape(""" + strYearWarning + @""");
			var s_ripulisci;
			s_ripulisci='" + strRipulisci + @"';
			var s_annulla;
			s_annulla='" + strAnnulla + @"';
			var s_conferma;
			s_conferma='" + strConferma + @"';
			var campohidden, campoVis,SuffLing, strModifyObject,strCalendarType;
	");

	if (GetParamURL(Request.QueryString.ToString(), "CTL") == "yes") {
		htmlToReturn.Write($@"
			campoHidden = 'opener.getObj(\'" + strcampoHidden + @"\')';
			campoHiddenProdotti = 'opener.getObj(\'" + nomeFormProdotti + @"\')';
			campoVis = 'opener.getObj(\'" + strcampoVis + @"\')';
		");
	} else {
		htmlToReturn.Write($@"
			//campoHidden =""parent.opener." + strcampoHidden + @""";
			strTemp = '" + strcampoHidden.Replace("document.new_document.", "") + @"';
			strTemp = ReplaceExtended(strTemp, ""'"", ""#"");
			strTemp = ReplaceExtended(strTemp, ""#"", ""\\'"");

			campoHidden = ""parent.opener.getObj(\'"" + strTemp + ""\')"";

			ContainerControl = '" + ContainerControl + @"';

			ContainerControl = ReplaceExtended(ContainerControl, ""'"", ""#"");
			ContainerControl = ReplaceExtended(ContainerControl, ""#"", ""\\'"");

			if ('" + ContainerControl + @"' != '')
				campoHidden = ""parent.opener.getObjPage(\'"" + strTemp + ""\',\'"" + ContainerControl + ""\')"";

			campoHiddenProdotti = ""parent.opener." + nomeFormProdotti + @""";

			//campoVis ='parent.opener." + strcampoVis + @"';
			campoVis = ""parent.opener.getObj('" + strcampoVis.Replace("new_document.", "") + @"')"";
		");

	}
	htmlToReturn.Write($@"
		//se il campo che rileva le modifiche viene passato, allora creo il riferimento
		strModifyObject = '" + strModifyObject + @"';
		strCalendarType = '" + strCalendarType + @"';

		SuffLing='" + SuffLing + @"'

	</script>
	");

}
@{
	//'A seconda del tipo di calendario, ci comportiamo di conseguenza..
	switch (strCalendarType)
	{
		case "":
		case CONST_PURE_DATATYPE_STR:
			htmlToReturn.Write($@"
				<script language=""Javascript"">

				//  dichiarazione e inizializzazione delle variabili
				var DateToDay = new Date();
				var tempData = new Date();

				var n_year = parseInt('" + CInt(arrayData[0]) + @"',10);
				var n_month = parseInt('" + (CInt(arrayData[1]) - 1) + @"',10);
				var n_day = parseInt('" + CInt(arrayData[2]) + @"',10);

				DateToDay.setDate(1);    // inizia il calendario dal giorno '1' (per una data facciamo vedere tutti i giorni del mese)
				DateToDay.setMonth(n_month);    // mese del calendario in visualizzazione
				DateToDay.setFullYear(n_year);    // anno del calendario in visualizzazione

				var cal,s_header,s_command;   
				var today = new Date(); //data odierna

				BuildCalendar(DateToDay);

				</script>
			");
			break;

		case CONST_WEEK_DATATYPE_STR:
		case CONST_MONTH_DATATYPE_STR:
			string strErr = "";
			try {
				strErr = buildGenericCalendar(strData, strDataVis, strCalendarType, SuffLing, IdMp, strRipulisci, strAnnulla, strConferma, strcampoHidden, strModifyObject, strcampoVis, nomeFormProdotti, htmlToReturn);
				if (strErr != "0")
				{
					errore("", "Calendario.asp", "" + ": " + strErr);
				}
			}
			catch (Exception ex)
			{
				errore("", "Calendario.asp", ex.Message + ": " + strErr);
			}
			break;

		default:
			break;
	}

}
@{
	htmlToReturn.Write($@"
	</form>
	</body>
	</html>
");
}
@{
	string buildGenericCalendar(string strData, string strDataVis, string strCalendarType, string SuffLing, string IdMp, string strRipulisci, string strAnnulla, string strConferma, string strcampoHidden, string strModifyObject, string strcampoVis, string nomeFormProdotti, EprocResponse Response){
		string strToReturn = "";

		//buildGenericCalendar = ""
		//on error resume next
		int lYearNumber; //'numero dell'anno
		string[] vArrayAppoggio; //'array di appoggio
		string strYearTranslate; //'traduzioe di anno

		strYearTranslate = ApplicationCommon.CNV("anno");
		Response.Write(@"<TABLE  border=""1"" CELLSPACING=""0"" CELLPADDING=""0"" BORDERCOLOR=""BBBBBB"" width=""100%"" ><TR><TD>");
		Response.Write(@"<TABLE CELLSPACING=""0""  border=""0"" CELLPADDING=""2"" BGCOLOR=""#EFEFEF"" width=""100%"">");


		switch (CInt(strCalendarType)){
			case CONST_WEEK_DATATYPE: //'settimanale
											//'In tal caso il valore prelevato dal server � cos� formattato: <numero della settimana:number> <numero dell'anno: number >
				int lWeekNumber; //'numero della settimana
				string strWeekWordKey; //'chiave della settimana: corrisponde alla chiave del multilinguismo


				if(string.IsNullOrEmpty(strData)){
					lWeekNumber = 1;
					lYearNumber = DateAndTime.Year(DateAndTime.Now);
				}else{
					vArrayAppoggio = Strings.Split(strData, "#", -1, Microsoft.VisualBasic.CompareMethod.Text);
					if (vArrayAppoggio.Length - 1 < 1 ){
						return "";
						//CreaCampoFromCalendar = "call buildGenericCalendar: " & cnvmp(lIdMp, "Data non corretta")
						//exit function
					}
					lWeekNumber = CInt(vArrayAppoggio[0].Trim());
					lYearNumber = CInt(vArrayAppoggio[1].Trim());
					vArrayAppoggio = null;
				}


				//'Descrizione della settimana
				Response.Write($@"<TD  BGCOLOR=""#EFEFEF"" NOWRAP=""TRUE""  ALIGN=""left"" class=""FontTitleCover"">");
				Response.Write(strWeekWordTranslate);
				Response.Write($@"</td>");


				//'Testo numro di settimana
				Response.Write($@"<TD  BGCOLOR=""#EFEFEF"" ALIGN=""left"" class=""FontLegalPub"">");
				Response.Write($@"<input type=""text"" size=""2"" maxlength=""2"" class=""FontLegalPub"" name=""textWeek"" value=""" + lWeekNumber + @""" onblur=""javascript:checkCorrectWeekNumber('document.forms[0].textWeek','document.forms[0].textYear','" + strCalendarType + @"');"" >");
				Response.Write($@"</td>");


				//'Link avanzamento e retroc. del numero di settimana
				Response.Write($@"<TD BGCOLOR=""#EFEFEF"" ALIGN=""left"" class=""FontLegalPub"">");
				Response.Write($@"<table>");
				Response.Write($@"<tr><td>");
				Response.Write($@"<label onclick=""javascript:setTextValue('week','1','document.forms[0].textWeek','document.forms[0].textYear','" + strCalendarType + @"');""><img border=""0"" src=""../images/General/Arrow_Up.gif"" ></label>");
				Response.Write($@"</td></tr>");
				Response.Write($@"<tr><td>");
				Response.Write($@"<label onclick=""javascript:setTextValue('week','0','document.forms[0].textWeek','document.forms[0].textYear','" + strCalendarType + @"');""><img border=""0"" src=""../images/General/Arrow_Down.gif"" ></label>");
				Response.Write($@"</td></tr>");


				Response.Write($@"</table>");
				Response.Write($@"</td>");




				//'Descrizione della anno
				Response.Write($@"<TD  BGCOLOR=""#EFEFEF"" NOWRAP=""TRUE""  ALIGN=""right"" class=""FontTitleCover"">");
				Response.Write(strYearTranslate);
				Response.Write($@"</td>");


				//'Testo numro di anni
				Response.Write($@"<TD  BGCOLOR=""#EFEFEF"" ALIGN=""right"" class=""FontLegalPub"">");
				Response.Write($@"<input type=""text"" size=""4"" maxlength=""4"" class=""FontLegalPub"" name=""textYear"" value=""" + lYearNumber + @""" onblur=""javascript:checkCorrectYear('document.forms[0].textYear','document.forms[0].textWeek','" + strCalendarType + @"');"" >");
				Response.Write($@"</td>");


				//'Link avanzamento e retroc. del numero di anni
				Response.Write($@"<TD BGCOLOR=""#EFEFEF"" ALIGN=""right"" class=""FontLegalPub"">");
				Response.Write($@"<table>");
				Response.Write($@"<tr><td>");
				Response.Write($@"<label onclick=""javascript:setTextValue('year','1','document.forms[0].textWeek','document.forms[0].textYear','" + strCalendarType + @"');""><img border=""0"" src=""../images/General/Arrow_Up.gif"" ></label>");
				Response.Write($@"</td></tr>");
				Response.Write($@"<tr><td>");
				Response.Write($@"<label onclick=""javascript:setTextValue('year','0','document.forms[0].textWeek','document.forms[0].textYear','" + strCalendarType + @"');""><img border=""0"" src=""../images/General/Arrow_Down.gif"" ></label>");
				Response.Write($@"</td></tr>");
				Response.Write($@"</table>");
				Response.Write($@"</td>");


				Response.Write($@"</table></td></tr>");

				break;
			case CONST_MONTH_DATATYPE: //'mensile
												//'In tal caso il valore prelevato dal server � cos� formattato: <mese:number> <anno:number>
				string strMonthKey; //'chiave relativo al valore mese nel dominio chiuso
				string strMonthTranslate; //'descrizione tradotta di mese
				dynamic[,] vArrayMonth = new dynamic [50,50]; //'array dei mesi. Struttura:
										//'											vArrayMonth(riga,0)-->descrizione
										//'											vArrayMonth(riga,1)-->tdrCodice
				int lMonthCounter; //'conattaore
				int lMonthCount; //'numero di mesi
									//'Chiamo il metodo per la determinazione dei mesi
				string strErr = "";
				try{
					//strErr = GetInfoDomAttrWeb("Month", SuffLing, vArrayMonth, "");//richiamo a codice in disuso, obsoleto
					//if(!string.IsNullOrEmpty(strErr))
					//	errore("", "Calendario.asp:Call GetInfoDomAttrWeb ", "");

				}catch (Exception ex){
					//errore("", "Calendario.asp:Call GetInfoDomAttrWeb ", ex.Message);
				}
				//'Se vArrayMonth � empty, allora gestire l'errore
				if (IsEmpty(vArrayMonth)){
					errore("", "Calendario.asp:Call GetInfoDomAttrWeb ", ApplicationCommon.CNV("non sono disponibili tutte le informazioni necessarie") + @": vArrayMonth");
					return "";
				}
				lMonthCount = vArrayMonth.Length -1;


				strMonthTranslate = ApplicationCommon.CNV("mese");
				if(string.IsNullOrEmpty(strData)){
					strMonthKey = "";
					lYearNumber = DateAndTime.Year(DateAndTime.Now);
				}else{
					vArrayAppoggio = Strings.Split(strData, "#", -1, Microsoft.VisualBasic.CompareMethod.Text);
					if (vArrayAppoggio.Length -1 < 1 ){
						//buildGenericCalendar = "call buildGenericCalendar: " + ApplicationCommon.CNV("Data non corretta");
						return "";
					}
					strMonthKey = vArrayAppoggio[0].Trim();
					lYearNumber = CInt(vArrayAppoggio[1].Trim());
					vArrayAppoggio = null;
				}


				//'Descrizione mese
				Response.Write($@"<TD  BGCOLOR=""#EFEFEF"" NOWRAP=""TRUE""  ALIGN=""left"" class=""FontTitleCover"">");
				Response.Write(strMonthTranslate);
				Response.Write($@"</td>");
				//'combo mesi
				Response.Write($@"<TD  BGCOLOR=""#EFEFEF"" ALIGN=""left"" class=""FontLegalPub"">");
				Response.Write($@"<select name=""radMonth"" id=""radMonth"" class=""FontLegalPub"" >");
				//'Costruzione dei radio: mese
				for( lMonthCounter = 0; lMonthCounter <= lMonthCount; lMonthCounter++){
					string strTdrCodice = CStr(vArrayMonth[lMonthCounter, 1]).Trim();
					Response.Write(@"<option value=""" + strTdrCodice + "#" + vArrayMonth[lMonthCounter, 0] + @"""  ");
					//'preseleziona il primo
					if (CStr(vArrayMonth[lMonthCounter, 1]).Trim() == strMonthKey){
						Response.Write($@" selected=""true"" ");
					}
					Response.Write($@" >");
					Response.Write(vArrayMonth[lMonthCounter, 0]);
					Response.Write($@"</option>");
				}
				Response.Write("</select>");
				Response.Write($@"</td>");



				//'Descrizione della anno
				Response.Write($@"<TD  BGCOLOR=""#EFEFEF"" NOWRAP=""TRUE""  ALIGN=""left"" class=""FontTitleCover"">");
				Response.Write(strYearTranslate);
				Response.Write($@"</td>");


				//'Testo numero di anni
				Response.Write($@"<TD  BGCOLOR=""#EFEFEF"" ALIGN=""left"" class=""FontLegalPub"">");
				Response.Write($@"<input type=""text"" size=""4"" maxlength=""4"" class=""FontLegalPub"" name=""textYear"""" value=""" + lYearNumber + @""" onblur=""javascript:checkCorrectYear('document.forms[0].textYear','document.forms[0].textWeek','" + strCalendarType + @"');"" >");
				Response.Write($@"</td>");


				//'Link avanzamento e retroc. del numero di anni
				Response.Write($@"<TD BGCOLOR=""#EFEFEF"" ALIGN=""left"" class=""FontLegalPub"">");
				Response.Write($@"<table>");
				Response.Write($@"<tr><td>");
				//'Incrementa anno
				Response.Write($@"<label onclick=""javascript:setTextValue('year','1','document.forms[0].textWeek','document.forms[0].textYear','" + strCalendarType + @"');""><img border=""0"" src=""../images/General/Arrow_Up.gif"" ></label>");
				Response.Write($@"</td></tr>");
				Response.Write($@"<tr><td>");
				//'Decrementa anno
				Response.Write($@"<label onclick=""javascript:setTextValue('year','0','document.forms[0].textWeek','document.forms[0].textYear','" + strCalendarType + @"');""><img border=""0"" src=""../images/General/Arrow_Down.gif"" ></label>");
				Response.Write($@"</td></tr>");
				Response.Write($@"</table>");
				Response.Write($@"</td>");
				break;
			default:
				break;
		}
		Response.Write($@"</table></td></tr>");
		Response.Write($@"</table>");


		Response.Write($@"<table width=""100%"">");


		Response.Write($@"<br><INPUT type=""button"" value=""" + strRipulisci + @"""  name=""closeBTN"" onclick=""javascript:resetData('" + strCalendarType + @"');window.close();"" title=""" + strRipulisci + @""" class=""fontCommand"">");
		Response.Write($@"&nbsp;");
		Response.Write($@"<INPUT type=""button"" value=""" + strAnnulla + @"""  name=""annullaBTN"" onclick=""javascript:window.close();"" title=""" + strAnnulla + @""" class=""fontCommand"">");
		Response.Write($@"&nbsp;");
		Response.Write($@"<INPUT type=""button"" value=""" + strConferma + @"""  name=""closeBTN"" onclick=""javascript:closeCalendar('" + strCalendarType + @"');"" title=""" + strConferma + @""" class=""fontCommand"">");
		Response.Write($@"</table>");

		return strToReturn;


	}


}
@{
	
	htmlToReturn.Write(@"
	<script language=javascript>
		MsgFirma.style.display = ""none""
	
	</script>

");
}
@Html.Raw(htmlToReturn.Out())