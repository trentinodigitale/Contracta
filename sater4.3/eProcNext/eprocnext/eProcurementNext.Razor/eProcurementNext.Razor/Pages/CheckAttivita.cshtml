@page "/CheckAttivita.asp"
@inject eProcurementNext.Session.ISession session;
@inject eProcurementNext.BizDB.ITabManage _TabManage;
@inject eProcurementNext.Authentication.IEprocNextAuthentication _JWTauth;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.CommonModule
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using eProcurementNext.CommonDB;
@using static eProcurementNext.Razor.Pages.loginModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.net_utilsModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.captcha_accessModel;
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.Extensions.Primitives
@using Microsoft.VisualBasic;
@using System.Web
@using System.IO;
@using System.Security.Claims
@using static eProcurementNext.Razor.Pages.Functions.costanti;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@model eProcurementNext.Razor.Pages.CheckAttivitaModel
@using static eProcurementNext.Session.SessionMiddleware
@{
    CommonDbFunctions cdf = new CommonDbFunctions();
    EprocResponse htmlToReturn = new EprocResponse(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
    LoadSession(HttpContext, session);
}
@{
    //'response.write "FERMO6!:" & session("Session")(2)
    //'response.end

    dynamic IDMP;
    dynamic FlagCheckWeb;
    string strMnemonicoMP;
    dynamic IdAzi;
    dynamic IdPfu;
    string strUserName;
    string OpenApplication;

    IdAzi = session["IDAZI"];
    IdPfu = session["IdPfu"];
    IDMP = session["IdMP"];
    strMnemonicoMP = session["MnemonicoMP"];
    FlagCheckWeb = session["FlagCheckWeb"];
    strUserName = URLEncode(session["UserName"]);

    validate("OpenApplication", GetParamURL(Request.QueryString.ToString(), "OpenApplication").Replace("-", ""), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);
    validate("Provenienza", GetParamURL(Request.QueryString.ToString(), "Provenienza").Replace("-", ""), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);
    validate("STRURLPARTECIPA", GetParamURL(Request.QueryString.ToString(), "STRURLPARTECIPA").Replace("-", ""), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);

    //'--recupero parametro ke indica se provare da aprire l'applicazione:0 non prova 1 prova
    OpenApplication = "0";
    if (!string.IsNullOrEmpty(GetParamURL(Request.QueryString.ToString(), "OpenApplication")))
    {
        OpenApplication = GetParamURL(Request.QueryString.ToString(), "OpenApplication");
    }

    string lScreen = GetParamURL(Request.QueryString.ToString(), "lScreen");
    string hScreen = GetParamURL(Request.QueryString.ToString(), "hScreen");
    string Provenienza = GetParamURL(Request.QueryString.ToString(), "Provenienza");

    string UrlPaginaRedirect = CStr(ApplicationCommon.CNV("redirect centro"));
    if (UrlPaginaRedirect.Trim() == "default.asp")
    {
        UrlPaginaRedirect = UrlPaginaRedirect + "?SuffissoLingua=" + session["strSuffLing"];
    }
    if (UrlPaginaRedirect.Trim() == "???redirect centro???" || string.IsNullOrEmpty(UrlPaginaRedirect.Trim()))
    {
        UrlPaginaRedirect = "default.asp?SuffissoLingua=" + session["strSuffLing"];
    }
    //'-----------------------------------------------------------------------------------

    int NIENTE_DA_VEDERE;
    NIENTE_DA_VEDERE = 0;

    //'-- se � stato richiesto dall'applicazione di fare 'Continua' cio� tutte le attvit� non bloccanti di essere tolte dalla lista attivit�
    //'-- invochiamo il processo per effettuare un presa visione in automatico
    if (OpenApplication == "1")
    {
        string strDescErrore = string.Empty;
        eProcurementNext.CommonModule.Const.ELAB_RET_CODE esito = eProcurementNext.CommonModule.Const.ELAB_RET_CODE.RET_CODE_ERROR;

        //on error resume next
        eProcurementNext.CtlProcess.ClsElab objProc = new();
        try
        {
            esito = objProc.Elaborate("PROSEGUI", "LISTA_ATTIVITA", CLng(1), CLng(IdPfu), ref strDescErrore, 1, ApplicationCommon.Application.ConnectionString);
            if (esito != eProcurementNext.CommonModule.Const.ELAB_RET_CODE.RET_CODE_OK && esito != eProcurementNext.CommonModule.Const.ELAB_RET_CODE.RET_CODE_BREAKANDCOMMIT)
            {
                string strErrore = $"Errore LISTA_ATTIVITA,PROSEGUI - {strDescErrore}:";
                MyErrore("", "", strErrore);
            }
        }
        catch (Exception ex)
        {
            string strErrore = $"Errore LISTA_ATTIVITA,PROSEGUI {ex.Message} - {strDescErrore}";
            MyErrore("", "", strErrore);
        }
    }

    void MyErrore(string strNumErrore, string strPercorso, string strTipoErrore)
    {
        //on error resume next

        if (string.IsNullOrEmpty(strNumErrore))
        {
            strNumErrore = "0";
        }

        string strMsgErr = "checkAttivita.asp [Description:" + strTipoErrore + "][Code:" + strNumErrore + "][Source:" + strPercorso + "]";

        //'-- Scriviamo l'errore nell'event viewer

        eProcurementNext.CommonDB.Basic.TraceErr(new Exception("strMsgErr"), ApplicationCommon.Application.ConnectionString, "CheckAttivita.cshtml" + strMsgErr + strNumErrore + "asp");

        //TraceErr("registrazione_er.asp", strMsgErr, strNumErrore, "asp");

        //'-- se la sys indica di non mostrare gli errori tecnici a video
        if (CStr(ApplicationCommon.Application["dettaglio-errori"]).ToLower() != "yes" && CStr(ApplicationCommon.Application["dettaglio-errori"]).ToLower() != "si")
        {
            strMsgErr = ApplicationCommon.CNV("INFO_UTENTE_ERRORE_PROCESSO") + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
        }

        session["errore_campo"] = CStr(strMsgErr);
    }


    //'--RECUPERO ATTIVITA LEGATE ALL'AZEINDA E ALL'UTENTE
    //dim objDB
    //'set rs = objDB.GetRSReadFromQuery( "select * from CTL_ATTIVITA where ATV_Execute <> 'si' and (ATV_idazi = " & IdAzi & " or ATV_idpfu = " &  IdPfu & ")" , Application("ConnectionString"))
    string strSQL;

    //'COMMENTATA CON LA SUCCESSIVA, PER RENDERLA COERENTE CON QUELLO CHE FA IL VIEWER DELLA LISTA ATTIVITA, ovvero per OWNER
    //'strSQL = "select * from LISTA_ATTIVITA where (ATV_idazi = " & IdAzi & " or ATV_idpfu = " &  IdPfu & ") and atv_documentname <> 'CHANGE_PWD_OBBLIG' union all"

    //'strSQL = "select * from LISTA_ATTIVITA where (Owner = " &  IdPfu & ") and atv_documentname <> 'CHANGE_PWD_OBBLIG' union all"
    //'strSQL = strSQL & " select * from LISTA_ATTIVITA where ATV_idpfu = " &  IdPfu & " and atv_documentname='CHANGE_PWD_OBBLIG'"
    strSQL = "exec DASHBOARD_SP_LISTA_ATTIVITA " + (IdPfu != null ? IdPfu : "") + " , '' , '' , '' , '' , ''  , 0, 0";
    //'response.write strSQL
    //'response.end
    TSRecordSet rs = cdf.GetRSReadFromQuery_(CStr(strSQL), ApplicationCommon.Application["ConnectionString"]);
    rs.Filter("atv_obbligatory='si' and id <> -1");

    if (rs.RecordCount > 0)
    {
        session["attivita_bloccanti"] = "1";
    }
    else
    {
        session["attivita_bloccanti"] = "0";
    }

    rs.Filter("");

    if (rs.RecordCount == 0)
    {
        NIENTE_DA_VEDERE = 1;
    }


    //'--SE DEVO PROVARE A CHIUDERE FILTRO LE ATTIVITA PRENDENDO SOLO QUELLE BLOCCANTI

    if (OpenApplication == "1")
    {
        rs.Filter("atv_obbligatory='si' and id <> -1");
    }

    if (rs.RecordCount == 0)
    {
        if (ApplicationCommon.Application["LoadFromFrame"].ToLower() == "no")
        {
            if (OpenApplication == "1")
            {
                if (Provenienza != "SINGOLA")
                {
                    //'--PROVENIENZA DA UNA LISTA
                    htmlToReturn.Write($@"

						<script language=""javascript"">

							self.location='" + session["UrlHomePage"] + @"?STRURLPARTECIPA=" + URLEncode(GetParamURL(Request.QueryString.ToString(), "STRURLPARTECIPA")) + @"&lScreen='+ window.screen.availWidth + '&LinguaSito=" + session["strSuffLing"] + "&FlagCheckWeb=" + FlagCheckWeb + "&strOpzioni=" + session["OpzioniMyHomePage"] + "&IDMP=" + IDMP + "&strMnemonicoMP=" + strMnemonicoMP + "&UserName=" + strUserName + @"';

						</script>

						");
                }
                else
                {
                    //'--PROVENIENZA DA SINGOLA ATTIVITA
                    throw new ResponseRedirectException(session["UrlHomePage"] + "?STRURLPARTECIPA=" + GetParamURL(Request.QueryString.ToString(), "STRURLPARTECIPA") + "&lScreen=" + GetParamURL(Request.QueryString.ToString(), "lScreen") + "&LinguaSito=" + session["strSuffLing"] + "&FlagCheckWeb=" + FlagCheckWeb + "&strOpzioni=" + session["OpzioniMyHomePage"] + "&IDMP=" + IDMP + "&strMnemonicoMP=" + strMnemonicoMP + "&UserName=" + strUserName, Response);
                    //Response.Redirect Session("UrlHomePage") & "?STRURLPARTECIPA=" & Request.querystring("STRURLPARTECIPA") & "&lScreen=" & Request.QueryString("lScreen") & "&LinguaSito="& session("strSuffLing") & "&FlagCheckWeb="&FlagCheckWeb&"&strOpzioni=" & session("OpzioniMyHomePage") & "&IDMP=" & IDMP & "&strMnemonicoMP="& strMnemonicoMP &"&UserName=" & strUserName
                }
            }
            else
            {
                htmlToReturn.Write($@"
						<script language=""javascript"">

							self.location='" + session["UrlHomePage"] + "?STRURLPARTECIPA=" + URLEncode(GetParamURL(Request.QueryString.ToString(), "STRURLPARTECIPA")) + "&lScreen='+ window.screen.availWidth + '&LinguaSito=" + session["strSuffLing"] + "&FlagCheckWeb=" + FlagCheckWeb + "&strOpzioni=" + session["OpzioniMyHomePage"] + "&IDMP=" + IDMP + "&strMnemonicoMP=" + URLEncode(strMnemonicoMP) + "&UserName=" + strUserName + @"';

						</script>
					");
            }

        }
        else
        {
            if (OpenApplication == "1")
            {
                if (Provenienza != "SINGOLA")
                {
                    //'--PROVENIENZA DA UNA LISTA
                    htmlToReturn.Write($@"
							<script language=""javascript"">
								try{{

									opener.parent.opener.location='" + UrlPaginaRedirect + $@"';
									self.location='" + session["UrlHomePage"] + "?STRURLPARTECIPA=" + URLEncode(GetParamURL(Request.QueryString.ToString(), "STRURLPARTECIPA")) + "&lScreen='+ window.screen.availWidth + '&LinguaSito=" + session["strSuffLing"] + "&FlagCheckWeb=" + FlagCheckWeb + "&strOpzioni=" + session["OpzioniMyHomePage"] + "&IDMP=" + IDMP + "&strMnemonicoMP=" + URLEncode(strMnemonicoMP) + "&UserName=" + strUserName + $@"';
									opener.parent.close();

								}}catch(e){{

									parent.opener.location='" + UrlPaginaRedirect + $@"';
									parent.location='" + session["UrlHomePage"] + "?STRURLPARTECIPA=" + URLEncode(GetParamURL(Request.QueryString.ToString(), "STRURLPARTECIPA")) + "&lScreen='+ window.screen.availWidth + '&LinguaSito=" + session["strSuffLing"] + "&FlagCheckWeb=" + FlagCheckWeb + "&strOpzioni=" + session["OpzioniMyHomePage"] + "&IDMP=" + IDMP + "&strMnemonicoMP=" + URLEncode(strMnemonicoMP) + "&UserName=" + strUserName + $@"';

								}}
							</script>
						");
                }
                else
                {
                    //'--PROVENIENZA DA SINGOLA ATTIVITA
                    throw new ResponseRedirectException(session["UrlHomePage"] + "?lScreen=" + GetParamURL(Request.QueryString.ToString(), "lScreen") + "&LinguaSito=" + session["strSuffLing"] + "&FlagCheckWeb=" + FlagCheckWeb + "&strOpzioni=" + session["OpzioniMyHomePage"] + "&IDMP=" + IDMP + "&strMnemonicoMP=" + URLEncode(strMnemonicoMP) + "&UserName=" + strUserName, Response);
                    //Response.Redirect Session("UrlHomePage") & "?lScreen=" & Request.QueryString("lScreen") & "&LinguaSito="& session("strSuffLing") & "&FlagCheckWeb="&FlagCheckWeb&"&strOpzioni=" & session("OpzioniMyHomePage") & "&IDMP=" & IDMP & "&strMnemonicoMP="&server.URLEncode (strMnemonicoMP)&"&UserName=" & strUserName
                }
            }
            else
            {
                htmlToReturn.Write($@"
						<script language=""javascript"">

							opener.location='" + UrlPaginaRedirect + $@"';
							self.location='" + session["UrlHomePage"] + "?STRURLPARTECIPA=" + URLEncode(GetParamURL(Request.QueryString.ToString(), "STRURLPARTECIPA")) + "&lScreen='+ window.screen.availWidth + '&LinguaSito=" + session["strSuffLing"] + "&FlagCheckWeb=" + FlagCheckWeb + "&strOpzioni=" + session["OpzioniMyHomePage"] + "&IDMP=" + IDMP + "&strMnemonicoMP=" + URLEncode(strMnemonicoMP) + "&UserName=" + strUserName + $@"';
						</script>
					");
            }
        }

        //Response.end

        //'else
        //''
        //'	'--NEL CASO DELLA LISTA E STO PROVANDO A CHIUDERE SE CI SONO ALTRE ATTIVITA LASCIO LA LISTA APERTA
        //'	if OpenApplication="1" and Provenienza <> "SINGOLA" then
        //'%>
        //'			<script language="javascript">
        //'					self.close();
        //'			</script>
        //'<%
        //'			Response.end
        //'	end if
        //'
        //'
    }

    string strUrl;
    //'--CASO INIZIALE
    if ((rs.RecordCount == 1) && ApplicationCommon.Application["TIPOVISUALAttivita"] != "LISTA")
    {

        //'--GESTIONE APERTURA ATTIVITA SINGOLA
        string strDoc = CStr(rs.Fields["ATV_DocumentName"]);
        string cod = CStr(rs.Fields["ATV_IdDoc"]);
        string actionOnOk;
        if (ApplicationCommon.Application["LoadFromFrame"].ToLower() == "no")
        {
            actionOnOk = "opener.location='../CTL_Library/Document/document.asp?JScript=" + strDoc + "&DOCUMENT=" + strDoc + "&MODE=OPEN&IDDOC=" + cod + "';";
        }
        else
        {
            //'--apro sotto la pagina ke doveva essere ricaricata
            htmlToReturn.Write($@"
				<script language=""javascript"">
					opener.location='" + UrlPaginaRedirect + @"';
				</script>
			");

            actionOnOk = "ExecFunction( '../CTL_Library/Document/document.asp?JScript=" + strDoc + "&DOCUMENT=" + strDoc + "&MODE=OPEN&IDDOC=" + cod + "','" + strDoc + "_DOC_" + cod + "',',left=0,top=0,width=" + lScreen + ",height=" + hScreen + "');";
            //'ExecFunction( '../CTL_Library/Document/document.asp?JScript=' + strDoc + '&DOCUMENT=' + strDoc + '&MODE=OPEN&IDDOC=' + cod  , strDoc + '_DOC_' + cod , ',left=' + Left + ',top=' + Top + ',width=' + w + ',height=' + h  );
        }

        //'--se c'� una sola attivit� apro una pagina con messaggio ke poi apre il documento associato all'attivit�
        strUrl = "ctl_library/MessageBoxWin.asp?NO_CANCEL=1&ON_OK=" + URLEncode(actionOnOk) + "&ICO=1&CAPTION=" + ApplicationCommon.CNV("CAPTION ATTIVITA PER " + strDoc) + "&MSG=" + ApplicationCommon.CNV(CStr(rs.Fields["ATV_Object"])) + "&TITLE=" + ApplicationCommon.CNV("TITLE ATTIVITA");

        htmlToReturn.Write($@"
			<script language=""javascript"">
				self.location='" + strUrl + @"';
			</script>
		");

        //'Response.Redirect   strUrl
    }
    else
    {
        //'--GESTIONE REDIRECT HOMEPAGE
        if (NIENTE_DA_VEDERE == 1)
        {
            strUrl = session["UrlHomePage"] + "?STRURLPARTECIPA=" + GetParamURL(Request.QueryString.ToString(), "STRURLPARTECIPA") + "&lScreen=" + GetParamURL(Request.QueryString.ToString(), "lScreen") + "&LinguaSito=" + session["strSuffLing"] + "&FlagCheckWeb=" + FlagCheckWeb + "&strOpzioni=" + session["OpzioniMyHomePage"] + "&IDMP=" + IDMP + "&strMnemonicoMP=" + strMnemonicoMP + "&UserName=" + strUserName;
        }
        else
        {
            //'--GESTIONE APERTURA LISTA ATTIVITA
            strUrl = ApplicationCommon.Application["UrlListaAttivita"] + "&STRURLPARTECIPA=" + URLEncode(GetParamURL(Request.QueryString.ToString(), "STRURLPARTECIPA"));
        }
        throw new ResponseRedirectException(strUrl, Response);
        //Response.Redirect strUrl
    }
    throw new ResponseEndException(htmlToReturn.Out(), Response, "CheckAttività end page");
    //Response.end
}
@Html.Raw(htmlToReturn.Out())