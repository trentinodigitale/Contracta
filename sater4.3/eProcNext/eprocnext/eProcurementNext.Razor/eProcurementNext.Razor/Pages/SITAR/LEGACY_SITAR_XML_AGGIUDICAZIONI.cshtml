@page "/SITAR/LEGACY_SITAR_XML_AGGIUDICAZIONI.asp"
@inject eProcurementNext.Session.ISession session;
@using System.IO;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonDB.Basic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.ctl_profiler
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.HTML.BasicFunction;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.CtlProcess;
@using static eProcurementNext.Session.SessionMiddleware
@model eProcurementNext.Razor.Pages.SITAR.LEGACY_SITAR_XML_AGGIUDICAZIONIModel
@{
    LoadSession(HttpContext, session);
    EprocResponse response = new();

    HttpContext.Response.ContentType = "TEXT/XML";
    if (CStr(GetParamURL(Request.QueryString.ToString(), "VIDEO")) != "1")
    {
        HttpContext.Response.Headers.Add("Content-Disposition", "attachment; filename=SITAR_XML_AGGIUDICAZIONI.XML");
    }

    string vbTab = string.Empty;
    string RUP_Login = string.Empty;
    string RUP_Pwd = string.Empty;
    string CF_Ente = string.Empty;
    string SOVRASCR = string.Empty;

    string g_ID_DOC = string.Empty; // '-- ID della GARA
    string g_id_PDA = string.Empty;
    string g_SQLfilter = string.Empty;

    string STRsql = string.Empty;

    // '-- init
    vbTab = "    ";

    SOVRASCR = "true";
    RUP_Login = "RSOLSS70C49B034J";
    RUP_Pwd = "qwerty";
    CF_Ente = "91252510374";

    g_ID_DOC = GetParamURL(Request.QueryString.ToString(), "IDDOC");
    validate("IDDOC", g_ID_DOC, TIPO_PARAMETRO_INT, 0, "", 1, HttpContext, session);

    // '-- recupero l'elenco dei lotti dalla gara

    TSRecordSet rs_Lotti = new TSRecordSet();
    TSRecordSet rs_Lotti_PDA = new TSRecordSet();
    TSRecordSet rs_Gara = new TSRecordSet();
    TSRecordSet rs_ComAggiudic = new TSRecordSet();
    TSRecordSet rs_Aziende = new TSRecordSet();
    TSRecordSet rs_RapLeg = new TSRecordSet();

    g_SQLfilter = GetParamURL(Request.QueryString.ToString(), "FILTER");

    // -- set rs_Gara = getRs( "select p.id as idPDA from ctl_doc P with(nolock) where P.tipodoc = 'PDA_MICROLOTTI' and P.deleted = 0 and P.Linkeddoc = " & g_ID_DOC )

    rs_Gara = GetRS("select idPDA , CFEIN from SITAR_DATI_GARA  with(nolock) where idGara = " + g_ID_DOC);

    //'-- gestire la mancanza della gara
    CF_Ente = CStr(rs_Gara["CFEIN"]);

    //'-- gestire la mancanza della PDA
    g_id_PDA = CStr(rs_Gara.Fields["idPDA"]);

    // 'set rs_Lotti = getRs( "select Numerolotto , CIG  from document_microlotti_dettagli with(nolock) where idheader = " & g_ID_DOC & " and tipodoc in ( 'BANDO_GARA' , 'BANDO_SEMPLIFICATO' ) and voce = 0 " )

    STRsql = "select Numerolotto , CIG  from document_microlotti_dettagli with(nolock) where idheader = " + g_id_PDA + " and tipodoc in ( 'PDA_MICROLOTTI' ) and voce = 0 and statoriga = 'AggiudicazioneDef' ";
    if (!String.IsNullOrEmpty(g_SQLfilter))
    {
        STRsql += $" and ( {g_SQLfilter} ) ";
    }

    // '--set rs_Lotti_PDA = getRs( "select Numerolotto , CIG  from document_microlotti_dettagli with(nolock) where idheader = " & g_id_PDA & " and tipodoc in ( 'PDA_MICROLOTTI' ) and voce = 0 and statoriga = 'AggiudicazioneDef' " )
    rs_Lotti = GetRS(STRsql);

    response.Write($@"<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:bean='http://beans.ws.vigilanza.sil.eldasoft.it'>
	<soapenv:Header/>
	<soapenv:Body>
		<bean:istanziaAggiudicazione>
			<bean:login>
				<bean:login>{RUP_Login}</bean:login>
				<bean:password>{RUP_Pwd}</bean:password>
			</bean:login>
			<bean:aggiudicazione>
				<bean:testata>
					<bean:CFEIN>{CF_Ente}</bean:CFEIN>
					<bean:SOVRASCR>{SOVRASCR}</bean:SOVRASCR>
				</bean:testata>
				<bean:oggettoXML>
					<![CDATA[
    <bean:richiestaSincrona_IstanzaAggiudicazione test='false' xmlns:bean='http://beans.vigilanza.sil.eldasoft.it'>");

    rs_Lotti.MoveFirst();

    //'-- Ciclo sui lotti
    while (!rs_Lotti_PDA.EOF)
    {

        //'-- recupero la comunicazione che contiene l'aggiudicazione
        //'set rs_ComAggiudic = getRs( "select * from CTL_DOC C with(nolock) inner join Document_comunicazione_StatoLotti L with(nolock) on L.idheader = C.Id and L.numerolotto = '" & rs_Lotti.fields( "numeroLotto" ).value & "'  and l.deleted = 0 where C.Linkeddoc = " &  g_id_PDA & " and C.TipoDoc = 'PDA_COMUNICAZIONE_GENERICA' and C.JumpCheck in (  '0-ESITO_DEFINITIVO' , '0-ESITO_DEFINITIVO_MICROLOTTI' ) ")
        rs_ComAggiudic = GetRS("select * from SITAR_DATI_LOTTO   where numerolotto = '" + CStr(GetValueFromRS(rs_Lotti_PDA.Fields["numeroLotto"])) + "'  and idPDA = " + g_id_PDA + " ");

        //'-- TESTATA del LOTTO

        response.Write($@"<bean:listaLottiAggiuidicati>
		<bean:W3CIG>" + xmlEncode(CStr(GetValueFromRS(rs_Lotti_PDA.Fields["CIG"]))) + "</bean:W3CIG>");
        response.Write($@"<bean:aggiudicazione>");
        response.Write($@"<bean:W3PROCEDUR>" + xmlEncode(CStr(rs_ComAggiudic["W3PROCEDUR"])) + "</bean:W3PROCEDUR> ");
        response.Write($@"<bean:W3PREINFOR>" + xmlEncode(CStr(rs_ComAggiudic["W3PREINFOR"])) + "</bean:W3PREINFOR>");
        response.Write($@"<bean:W3TERMINE>" + xmlEncode(CStr(rs_ComAggiudic["W3TERMINE"])) + "</bean:W3TERMINE>");
        response.Write($@"<bean:W3MOD_IND>" + xmlEncode(CStr(rs_ComAggiudic["W3MOD_IND"])) + "</bean:W3MOD_IND>");
        response.Write($@"<bean:W3IMPR_AMM>" + xmlEncode(CStr(rs_ComAggiudic["W3IMPR_AMM"])) + "</bean:W3IMPR_AMM>");
        response.Write($@"<bean:W3IMPR_OFF>" + xmlEncode(CStr(rs_ComAggiudic["W3IMPR_OFF"])) + "</bean:W3IMPR_OFF>");
        response.Write($@"<bean:W3DVERB>" + xmlEncode(CStr(rs_ComAggiudic["W3DVERB"])) + "</bean:W3DVERB>");
        response.Write($@"<bean:W3DSCAPO>" + xmlEncode(CStr(rs_ComAggiudic["W3DSCAPO"])) + "</bean:W3DSCAPO>");
        response.Write($@"<bean:W3IMP_AGGI>" + xmlEncode(CStr(rs_ComAggiudic["W3IMP_AGGI"])) + "</bean:W3IMP_AGGI>");
        response.Write($@"<bean:W3PERC_RIB>" + xmlEncode(CStr(rs_ComAggiudic["W3PERC_RIB"])) + "</bean:W3PERC_RIB>");
        response.Write($@"<bean:W3FLAG_RIC>" + xmlEncode(CStr(rs_ComAggiudic["W3FLAG_RIC"])) + "</bean:W3FLAG_RIC>");
        response.Write($@"<bean:W3OFFE_MAX>" + xmlEncode(CStr(rs_ComAggiudic["W3OFFE_MAX"])) + "</bean:W3OFFE_MAX>");
        response.Write($@"<bean:W3OFFE_MIN>" + xmlEncode(CStr(rs_ComAggiudic["W3OFFE_MIN"])) + "</bean:W3OFFE_MIN>");
        response.Write($@"<bean:W3I_SUBTOT>" + xmlEncode(CStr(rs_ComAggiudic["W3I_SUBTOT"])) + "</bean:W3I_SUBTOT>");
        response.Write($@"<bean:W9APDURACCQ>" + xmlEncode(CStr(rs_ComAggiudic["W9APDURACCQ"])) + "</bean:W9APDURACCQ>");
        response.Write($@"<bean:W9APOUSCOMP>" + xmlEncode(CStr(rs_ComAggiudic["W9APOUSCOMP"])) + "</bean:W9APOUSCOMP>");
        response.Write($@"<bean:W9APDATA_STI>" + xmlEncode(CStr(rs_ComAggiudic["W9APDATA_STI"])) + "</bean:W9APDATA_STI>");
        response.Write($@"<bean:W3COD_STRU>" + xmlEncode(CStr(rs_ComAggiudic["W3COD_STRU"])) + "</bean:W3COD_STRU>");
        response.Write("</bean:aggiudicazione>");

        //'-- OE AGGIUDICATARI 1 o enne in caso di RTI
        rs_Aziende = GetRS("select * from GET_AZI_AGGIUDICATARIE_DEF where idPDA = " + g_id_PDA + " and numerolotto = '" + CStr(rs_Lotti_PDA["numeroLotto"]) + "'");

        rs_Aziende.MoveFirst();
        //'-- Ciclo sulle partecipanti

        if (rs_Aziende.RecordCount > 0)
        {
            rs_Aziende.MoveFirst();

            while (!rs_Aziende.EOF)
            {
                response.Write(@"<bean:listaImpreseAggiudicatarie>");
                response.Write(@"<bean:CFIMP>" + CStr(GetValueFromRS(rs_Aziende.Fields["CFIMP"])) + "</bean:CFIMP>");
                response.Write(@"<bean:NOMIMP>" + CStr(GetValueFromRS(rs_Aziende.Fields["NOMIMP"])) + "</bean:NOMIMP>");
                response.Write(@"<bean:W3AGIDGRP>" + CStr(GetValueFromRS(rs_Aziende.Fields["W3AGIDGRP"])) + "</bean:W3AGIDGRP>");
                response.Write(@"<bean:AGGAUS>" + CStr(GetValueFromRS(rs_Aziende.Fields["AGGAUS"])) + "</bean:AGGAUS>");
                response.Write(@"<bean:W3ID_TIPOA>" + CStr(GetValueFromRS(rs_Aziende.Fields["W3ID_TIPOA"])) + "</bean:W3ID_TIPOA>");
                response.Write(@"<bean:W3RUOLO>" + CStr(GetValueFromRS(rs_Aziende.Fields["W3RUOLO"])) + "</bean:W3RUOLO>");
                response.Write(@"<bean:W3FLAG_AVV>" + CStr(GetValueFromRS(rs_Aziende.Fields["W3FLAG_AVV"])) + "</bean:W3FLAG_AVV>");
                response.Write(@"<bean:G_NAZIMP>" + CStr(GetValueFromRS(rs_Aziende.Fields["G_NAZIMP"])) + "</bean:G_NAZIMP>");
                response.Write(@"<bean:INDIMP>" + CStr(GetValueFromRS(rs_Aziende.Fields["INDIMP"])) + "</bean:INDIMP>");
                response.Write(@"<bean:NCIIMP>" + CStr(GetValueFromRS(rs_Aziende.Fields["NCIIMP"])) + "</bean:NCIIMP>");
                response.Write(@"<bean:CAPIMP>" + CStr(GetValueFromRS(rs_Aziende.Fields["CAPIMP"])) + "</bean:CAPIMP>");
                response.Write(@"<bean:LOCIMP>" + CStr(GetValueFromRS(rs_Aziende.Fields["LOCIMP"])) + "</bean:LOCIMP>");
                response.Write(@"<bean:TELIMP>" + CStr(GetValueFromRS(rs_Aziende.Fields["TELIMP"])) + "</bean:TELIMP>");
                response.Write(@"<bean:FAXIMP>" + CStr(GetValueFromRS(rs_Aziende.Fields["FAXIMP"])) + "</bean:FAXIMP>");
                response.Write(@"<bean:EMAI2IP>" + CStr(GetValueFromRS(rs_Aziende.Fields["EMAI2IP"])) + "</bean:EMAI2IP>");
                response.Write(@"<bean:NCCIAA>" + CStr(GetValueFromRS(rs_Aziende.Fields["NCCIAA"])) + "</bean:NCCIAA>");

                //'-- Legali rappresentanti
                //'response.write "select * from GET_AZI_RAP_LEG where idAzi = " & rs_Aziende.fields( "idAzi" ).value
                //'response.end

                rs_RapLeg = GetRS("select * from GET_AZI_RAP_LEG where idAzi = " + CStr(GetValueFromRS(rs_Aziende.Fields["idAzi"])));
                if (rs_RapLeg.RecordCount > 0)
                {
                    rs_RapLeg.MoveFirst();

                    while (!rs_RapLeg.EOF)
                    {
                        response.Write(@"<bean:listaLegaliRappresentanti>");
                        response.Write(@"<bean:CFTIM>" + xmlEncode(CStr(GetValueFromRS(rs_RapLeg.Fields["CFTIM"]))) + "</bean:CFTIM>");
                        response.Write(@"<bean:COGTIM>" + xmlEncode(CStr(GetValueFromRS(rs_RapLeg.Fields["COGTIM"]))) + "</bean:COGTIM>");
                        response.Write(@"<bean:NOMETIM>" + xmlEncode(CStr(GetValueFromRS(rs_RapLeg.Fields["NOMETIM"]))) + "</bean:NOMETIM>");
                        response.Write(@"</bean:listaLegaliRappresentanti>");

                        rs_RapLeg.MoveNext();
                    }
                }

                response.Write(@"		</bean:listaImpreseAggiudicatarie>" + Environment.NewLine);
                rs_Aziende.MoveNext();
            }
        }

        if (!String.IsNullOrEmpty(CStr(GetValueFromRS(rs_ComAggiudic.Fields["W3ID_FINAN"]))))
        {
            response.Write(@"<bean:listaFinanziamenti>");
            response.Write(@"<bean:W3ID_FINAN>" + xmlEncode(CStr(GetValueFromRS(rs_ComAggiudic.Fields["W3ID_FINAN"]))) + "</bean:W3ID_FINAN>");
            response.Write(@"<bean:W3I_FINANZ>" + xmlEncode(CStr(GetValueFromRS(rs_ComAggiudic.Fields["W3I_FINANZ"]))) + "</bean:W3I_FINANZ>");
            response.Write(@"</bean:listaFinanziamenti>");
        }

        response.Write(@"</bean:listaLottiAggiuidicati>");

        rs_Lotti_PDA.MoveNext();
    }

    response.Write(@"</bean:richiestaSincrona_IstanzaAggiudicazione>
						]]>
				</bean:oggettoXML>
			</bean:aggiudicazione>
		</bean:istanziaAggiudicazione>
	</soapenv:Body>
    </soapenv:Envelope>");

    
}
@Html.Raw(response.Out())