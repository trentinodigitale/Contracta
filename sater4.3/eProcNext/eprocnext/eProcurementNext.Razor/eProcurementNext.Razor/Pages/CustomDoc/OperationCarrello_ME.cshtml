@page "/CustomDoc/OperationCarrello_ME.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB;
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.verificaBrowserModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.trace_in_log_utenteModel;
@using static eProcurementNext.Razor.Pages.CustomDoc.OperationCarrello_MEModel;
@using Microsoft.VisualBasic;
@model eProcurementNext.Razor.Pages.CustomDoc.OperationCarrello_MEModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
	int lIdPfu = 0;
	string ID = string.Empty;
	string strSql = string.Empty;
	var SqlParameters = new Dictionary<string, object?>();
	//dim objDB
	lIdPfu = session["idpfu"];
	string OPERATION = CStr(GetParamURL(Request.QueryString.ToString(), "OPERATION")).ToUpper();
	string QT = GetParamURL(Request.QueryString.ToString(), "QT");
	int PrezzoUnitario= CInt(GetParamURL(Request.QueryString.ToString(), "PrezzoUnitario"));
	int  ValoreAccessorio= CInt(GetParamURL(Request.QueryString.ToString(), "ValoreAccessorio"));
	string CarrelloidRow = GetParamURL(Request.QueryString.ToString(), "CarrelloidRow");
	string fornitoreAzi = GetParamURL(Request.QueryString.ToString(), "fornitoreAzi");
	double m_QT = 0;

	if(string.IsNullOrEmpty(CStr(ValoreAccessorio)))
	{
		ValoreAccessorio = 0;
	}

	string not_editable = GetParamURL(Request.QueryString.ToString(), "not_editable");
	ID = GetParamURL(Request.QueryString.ToString(), "ID");
	TSRecordSet? rsMsg = null;

	//'*******************************************
	//'*****  VALIDAZIONE DELL'INPUT UTENTE  *****
	//'*******************************************

	if (OPERATION != "ADDROW" && OPERATION != "DELETE_ALL" && OPERATION != "COUNTER_ROWS" && OPERATION != "DELETE_ROW"  && OPERATION != "CHANGE_QT" )
	{
		traceAttack("Valore non consentito per il parametro OPERATION", session, HttpContext);
	}
	validate( "ID", ID , TIPO_PARAMETRO_INT, SOTTO_TIPO_VUOTO, "", 0,HttpContext,session);
	validate( "QT", QT , TIPO_PARAMETRO_FLOAT, SOTTO_TIPO_VUOTO, "", 0,HttpContext,session);
	validate( "not_editable", Replace(not_editable," ","") , TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_PAROLASINGOLA, "", 0,HttpContext,session);
	validate("fornitoreAzi", fornitoreAzi, TIPO_PARAMETRO_INT, SOTTO_TIPO_VUOTO, "", 0, HttpContext, session);

	if (!string.IsNullOrEmpty(QT))
	{
		m_QT = CDbl(Replace(QT, ".", ","));
	}

	//--aggiunge riga al carrello
	if(OPERATION == "ADDROW" )
	{
		//'--controllo che qt sia positiva
		if(m_QT<=0)
		{
			htmlToReturn.Write("Quantita deve essere maggiore di 0");
			throw new ResponseEndException(htmlToReturn.Out(), Response, "Quantita deve essere maggiore di 0");
		}
		//'--inserisco la riga nel carrello se non presente
		SqlParameters.Add("@Id_Product", CInt(ID));
		SqlParameters.Add("@idPfu", lIdPfu);
		strSql = "select * from Carrello_ME where Id_Product=@Id_Product and idPfu=@idPfu";
		//'Response.Write strSql
		//'Response.End
		rsMsg = cdf.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, SqlParameters);
		if(rsMsg.RecordCount >0)
		{
			htmlToReturn.Write("articolo gia presente nel carrello");
			throw new ResponseEndException(htmlToReturn.Out(), Response, "articolo gia presente nel carrello");
		}
		else
		{
			SqlParameters.Clear();
			SqlParameters.Add("@id", CInt(ID));
			SqlParameters.Add("@qt", m_QT);
			SqlParameters.Add("@idpfu", lIdPfu);
			SqlParameters.Add("@not_editable", not_editable);
			strSql = "insert into Carrello_ME ( Codice, Descrizione, QTDisp, PrezzoUnitario, idPfu, Id_Catalogo, Id_Product,Iva, Titolo, Not_Editable, fornitore) ";
			strSql = $"{strSql} select CodiceProdotto,Descrizione,@qt,PREZZO_OFFERTO_PER_UM,@idpfu,idheader,D.id, aliquotaiva,C.Titolo,@not_editable, c.azienda";
			strSql = $"{strSql} from document_microlotti_dettagli D with(nolock) inner join ctl_doc C with(nolock)  on  D.idheader=C.ID where  D.id=@id";
			//'Response.Write strSql
			//'Response.end

			try
			{
				cdf.Execute(strSql, ApplicationCommon.Application.ConnectionString, parCollection: SqlParameters);

				string strCodRet = string.Empty;// 'Check_Disponibilita_Carrello( ID, lIdPfu )
			}
			catch
			{
				htmlToReturn.Write("Articolo non inserito nel carrello.");
			}
			throw new ResponseEndException(htmlToReturn.Out(), Response,"");
		}
	}
	//'--svuota carrello
	if(OPERATION == "DELETE_ALL" )
	{
		//'--svuoto il carrello
		SqlParameters.Clear();
		SqlParameters.Add("@idPfu", lIdPfu);
		strSql = "delete Carrello_ME where idPfu=@idPfu";
		try
		{
			cdf.Execute(strSql, ApplicationCommon.Application.ConnectionString, parCollection: SqlParameters);
		}
		catch(Exception ex)
		{
			htmlToReturn.Write(ex.Message);

		}
		throw new ResponseEndException(htmlToReturn.Out(), Response,"");


	}
	//'--recupero righe del carrello
	if(OPERATION == "COUNTER_ROWS")
	{
		//'--svuoto il carrello
		//set objDB = server.CreateObject("ctldb.clsTabManage")
		SqlParameters.Clear();
		SqlParameters.Add("@idPfu", lIdPfu);
		strSql = "select count(*) as NumRow from Carrello_ME where idPfu=@idPfu";
		//'Response.Write strSql
		//'Response.End
		try
		{
			rsMsg = cdf.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, SqlParameters);
			if( rsMsg.RecordCount > 0 )
			{
				rsMsg.MoveFirst();
				htmlToReturn.Write(CStr(CInt(rsMsg["NumRow"]!)));
			}
		}
		catch(Exception ex)
		{
			htmlToReturn.Write(ex.Message);
		}
		throw new ResponseEndException(htmlToReturn.Out(), Response,"");
	}

	if (OPERATION == "DELETE_ROW" )
	{
		SqlParameters.Clear();
		SqlParameters.Add("@idPfu", lIdPfu);
		SqlParameters.Add("@CarrelloidRow", CInt(CarrelloidRow));
		strSql = "delete Carrello_ME where idPfu=@idPfu and Id=@CarrelloidRow";

		try
		{
			cdf.Execute(CStr(strSql), ApplicationCommon.Application.ConnectionString, parCollection: SqlParameters);
		}
		catch (Exception ex)
		{
			htmlToReturn.Write(ex.Message);
			throw new ResponseEndException(htmlToReturn.Out(), Response, ex.Message);
		}
		//set objDB = nothing

		//Response.Write 	err.Description 
		//Response.end
	}


	//'--svuota carrello
	if (OPERATION == "CHANGE_QT")
	{
		string EsitoRigaPrima = string.Empty;
		string EsitoRigaDopo = string.Empty;

		//'--svuoto il carrello
		SqlParameters.Clear();
		SqlParameters.Add("@qt", m_QT);
		SqlParameters.Add("@idPfu", lIdPfu);
		SqlParameters.Add("@CarrelloidRow", CInt(CarrelloidRow));
		strSql = "update Carrello_ME set QtDisp = @qt where idPfu=@idPfu and Id=@CarrelloidRow";

		//call objDB.ExecSql( cstr(strSql ) , cstr(session("Session")(8)) )	
		try
		{
			cdf.Execute(CStr(strSql), ApplicationCommon.Application.ConnectionString, parCollection: SqlParameters);
		}
		catch(Exception ex)
		{
			htmlToReturn.Write(ex.Message);
			throw new ResponseEndException(htmlToReturn.Out(), Response, ex.Message);
		}

		try
		{
			SqlParameters.Clear();
			SqlParameters.Add("@CarrelloidRow", CInt(CarrelloidRow));
			strSql = "select isnull( Esitoriga , '' ) as Esitoriga  from Carrello_ME where Id=@CarrelloidRow";
			TSRecordSet rs = cdf.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, parCollection: SqlParameters);
			if (!(rs.BOF && rs.EOF))
			{
				EsitoRigaPrima = CStr(rs["Esitoriga"]);
			}
		}
		catch (Exception ex)
		{
			htmlToReturn.Write(ex.Message);
			throw new ResponseEndException(htmlToReturn.Out(), Response, ex.Message);
		}

		try
		{
			SqlParameters.Clear();
			SqlParameters.Add("@lIdPfu", lIdPfu);
			SqlParameters.Add("@CarrelloidRow", CInt(CarrelloidRow));
			strSql = "execute dbo.CHECK_ODA_TOTALE_EROSO @lIdPfu";
			strSql = $"{strSql}{Environment.NewLine}select isnull( Esitoriga , '' ) as Esitoriga  from Carrello_ME where Id=@CarrelloidRow";
			TSRecordSet rs = cdf.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, parCollection: SqlParameters);
			if (!(rs.BOF && rs.EOF))
			{
				EsitoRigaDopo = CStr(rs["Esitoriga"]);
			}
			if (EsitoRigaDopo != EsitoRigaPrima)
			{
				htmlToReturn.Write("refresh");
			}
			else
			{
				htmlToReturn.Write("");
			}
		}
		catch (Exception ex)
		{
			htmlToReturn.Write(ex.Message);
			throw new ResponseEndException(htmlToReturn.Out(), Response, ex.Message);
		}


		//Response.Write 	err.Description
		//Response.end
	}
}
@Html.Raw(htmlToReturn.Out())