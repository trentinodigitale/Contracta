@page "/Report/prn_ISTANZA_AlboOperaEco_QF.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using Microsoft.VisualBasic
@using System.Globalization
@using static eProcurementNext.CommonDB.Basic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.print_documentModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.DocumentPermissionModel;
@using static eProcurementNext.Razor.Pages.Report.prn_ISTANZA_AlboOperaEco_QFModel;
@using static eProcurementNext.Session.SessionMiddleware
@model eProcurementNext.Razor.Pages.Report.prn_ISTANZA_AlboOperaEco_QFModel
@{

	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
	var sqlParams = new Dictionary<string, object?>();
	objDoc = PrintDocument(session, htmlToReturn, HttpContext, Response, Request);//PrintDocument ok

}
@{
	htmlToReturn.Write($@"
	<html>
	<head>");
	addMetaTag(htmlToReturn);

	validate("TYPEDOC", GetParamURL(Request.QueryString.ToString(), "TYPEDOC"), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);
	validate("IDDOC", GetParamURL(Request.QueryString.ToString(), "IDDOC").Replace("-", ""), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);

	string docToValidate = CStr(GetParamURL(Request.QueryString.ToString(), "TYPEDOC"));

	if(string.IsNullOrEmpty(docToValidate))
	{
		docToValidate = CStr(GetParamURL(Request.QueryString.ToString(), "DOCUMENT"));
	}
	//'-------------------------------------------
	//'--CONTROLLO PERMESSO APERTURA DOCUMENTO ---
	//'-------------------------------------------
	string extraParam = CStr(GetParamURL(Request.QueryString.ToString(), "PARAM"));
	string strCommand = CStr(GetParamURL(Request.QueryString.ToString(), "COMMAND"));

	if(string.IsNullOrEmpty(extraParam) && !string.IsNullOrEmpty(strCommand))
	{
		extraParam = extraParam + "@@@" + strCommand;
	}
	//'--controllo permesso apertura documento
	DocPermission(HttpContext, GetParamURL(Request.QueryString.ToString(), "IDDOC"), CStr(docToValidate), extraParam, session, htmlToReturn, Request, Response);

	CheckCanSign(htmlToReturn,session,HttpContext,Request);

	string getClasseIscrizione(string cod )
	{
		TSRecordSet rs = null;
		string _getClasseIscrizione = "";
		try
		{
			sqlParams.Clear();
			sqlParams.Add("@cod", cod);
			rs = cdf.GetRSReadFromQuery_("SELECT  v.DMV_DescML  FROM (SELECT 15  AS DMV_DM_ID, dgCodiceInterno AS DMV_Cod , '000.' + dgPath  AS DMV_Father , dgLivello AS DMV_Level , dscTesto AS DMV_DescML , CASE dgFoglia WHEN 1 THEN 'node.gif' ELSE 'folder.gif' END AS DMV_Image, 0 AS DMV_Sort  , CASE CHARINDEX('-', dscTesto) WHEN 0 THEN '0' ELSE LEFT(dscTesto, CHARINDEX('-', dscTesto) -  1) END AS DMV_CodExt FROM DominiGerarchici, DizionarioAttributi , DescsI WHERE dztNome = 'ClasseIscriz'AND dztIdTid = dgTipoGerarchia AND dztDeleted = 0 AND IdDsc = dgIdDsc AND dgDeleted = 0) v where DMV_COD=@cod", ApplicationCommon.Application.ConnectionString, sqlParams);
			rs.MoveFirst();
			_getClasseIscrizione = CStr(rs["DMV_DescML"]);
		}
		catch
		{

		}
		return _getClasseIscrizione;
	}
	string  getSettoriCCNL ( string cod )
	{
		TSRecordSet rs3 = null;
		string _getSettoriCCNL = "";
		try
		{
			sqlParams.Clear();
			sqlParams.Add("@cod", cod);
			rs3 = cdf.GetRSReadFromQuery_("SELECT v.DMV_DescML FROM (SELECT 337 AS DMV_DM_ID , dgCodiceInterno  AS DMV_Cod  , '000.' + dgPath   AS DMV_Father , dgLivello  AS DMV_Level , dscTesto         AS DMV_DescML , CASE dgFoglia WHEN 1 THEN 'node.gif' ELSE    'folder.gif' END AS DMV_Image , 0   AS DMV_Sort  , CASE CHARINDEX('-', dscTesto) WHEN 0 THEN '0'  ELSE LEFT(dscTesto, CHARINDEX('-', dscTesto) -  1) END  AS DMV_CodExt  FROM DominiGerarchici   , DizionarioAttributi      , DescsI  wHERE dztNome = 'SettoriCCNL'  AND dztIdTid = dgTipoGerarchia AND dztDeleted = 0 AND IdDsc = dgIdDsc AND dgDeleted = 0) v where DMV_COD=@cod", ApplicationCommon.Application.ConnectionString, sqlParams);
			rs3.MoveFirst();
			_getSettoriCCNL = CStr(rs3["DMV_DescML"]);
		}
		catch
		{

		}
		return _getSettoriCCNL;
	}
	string getcertifazione(string cod )
	{
		TSRecordSet rs = null;
		string _getcertifazione = "";
		try
		{
			sqlParams.Clear();
			sqlParams.Add("@id", "Certificazioni");
			sqlParams.Add("@cod", cod);
			rs = cdf.GetRSReadFromQuery_("SELECT  v.DMV_DescML  FROM LIB_DomainValues v where DMV_DM_ID=@id and DMV_COD=@cod", ApplicationCommon.Application.ConnectionString, sqlParams);
			rs.MoveFirst();
			_getcertifazione = CStr(rs["DMV_DescML"]);
		}
		catch
		{

		}
		return _getcertifazione;
	}

	dynamic getNumeroDetermina(string cod )
	{
		TSRecordSet rs1 = null; 
		dynamic _getNumeroDetermina = null;
		try
		{
			sqlParams.Clear();
			sqlParams.Add("@cod", cod);
			rs1 = cdf.GetRSReadFromQuery_("select dgrN from  Document_Bando where idheader=@cod", ApplicationCommon.Application.ConnectionString, sqlParams);
			rs1.MoveFirst();
			_getNumeroDetermina = CStr(rs1["dgrN"]);
		}
		catch
		{

		}
		return _getNumeroDetermina;
	}
	dynamic getDeterminaDel(string cod )
	{
		TSRecordSet rs2 = null;
		dynamic _getDeterminaDel = null;
		try
		{
			sqlParams.Clear();
			sqlParams.Add("@cod", cod);
			rs2 = cdf.GetRSReadFromQuery_("select dgrDel from  Document_Bando where idheader=@cod", ApplicationCommon.Application.ConnectionString, sqlParams);
			rs2.MoveFirst();
			_getDeterminaDel = CStr(rs2["dgrDel"]);
		}
		catch
		{

		}
		return _getDeterminaDel;
	}
	int NumPag;
	NumPag = 0;
	/*dynamic iif( dynamic a ,dynamic b ,dynamic c )
	{
		if(a)
		{
			return b;
		}
		else
		{
			return c;
		}
	}*/
	htmlToReturn.Write($@"
	</head>
	<body ");
	if(DOC_FieldTecnical("DOCUMENT", "RichiestaFirma") == "si")
	{
		if(( DOC_FieldTecnical( "DOCUMENT", "StatoDoc") == "Saved") || string.IsNullOrEmpty(DOC_FieldTecnical( "DOCUMENT", "StatoDoc"))  &&  (GetParamURL(Request.QueryString.ToString(), "TO_SIGN") == "no" || string.IsNullOrEmpty(GetParamURL(Request.QueryString.ToString(), "TO_SIGN"))))
		{
			htmlToReturn.Write($@" style=""background-image:url(../images/bozza.jpg)"" ");
		}
	}
	else
	{
		if(DOC_FieldTecnical("DOCUMENT", "StatoDoc") =="Saved" || string.IsNullOrEmpty(DOC_FieldTecnical("DOCUMENT", "StatoDoc")))
		{
			htmlToReturn.Write($@" style=""background-image:url(../images/bozza.jpg)"" ");
		}
	}
	htmlToReturn.Write($@"
		>

	<style type=""text/css"">



	BODY,DIV ,TABLE, TD {{
	 font-family:'Arial','Times New Roman',serif;
	 font-size:9.9pt;
	 font-style:normal;
	 font-weight:normal


	}}
	.Input
	{{
	 font-family:'Arial','Times New Roman',serif;
	 font-size:10pt;
	 font-style:normal;
	 font-weight:bold

	}}

	.TITLE{{
	 font-family:'Arial','Times New Roman',serif;
	 font-size:12pt;
	 font-style: bold;
	 font-weight:bold



	}}



	@media print
	  {{
	  #Ricevuta {{}}
	  }}

	  @media screen
	  {{
	  #Ricevuta {{}}
	  }}

	  ul li, table ul li {{ list-style-type:none; text-align:justify;}} 
	  p	{{  text-align:justify;}}
	 .disc li {{ list-style-type:disc;}}
	 .disc li table td{{ vertical-align:bottom;}}
	  h1{{font-size:1.3em; font-weight:bold; text-align:center;}}
	 .PaddingLeft{{ padding-left:3em;}}
	 .nomargin{{margin-top: -13px;}}
	  ul.ListStyleTypeNone li{{padding-top:0em; }}
	 .ListStyleTypeNone{{ list-style-type:none; }}
	 table.list{{ vertical-align:middle; margin-top:1em;}}
	 table td ul.disc{{padding-top:0em;padding-bottom:0em;margin-top: 0em;margin-bottom: 0em;}}



	</style>");
	htmlToReturn.Write($@"
	 <div style=""text-align: center; "" >
			<center>
				<table style=""width: 800px; height: 1400px;""");
	Header();
	htmlToReturn.Write($@"
	<tr>



		<td height=""100%"" valign=""top"" >
		<div style=""text-align: center; width: 800px; align: center;"">
			<div>

		<div>
            <table align=""center"">");
	if(!string.IsNullOrEmpty(DOC_Field("DOCUMENT", "Protocollo")))
	{
		htmlToReturn.Write($@"
		<tr>
             <td nowrap>
                 Protocollo Istanza:
             </td>
             <td>
                 <font class=""Input"">
                     "+DOC_Field( "DOCUMENT", "Protocollo")+$@"
                 </font>
             </td>
             <td width=""50"">
                 &nbsp;</td>
             <td>
                 del:
             </td>
             <td>
                 <font class=""Input"">
                     "+DOC_Field( "DOCUMENT", "DataInvio")+$@"
                 </font>
             </td>
             <td>
             </td>
         </tr>");
	}
	htmlToReturn.Write($@"
  </table>
     </div>
	<br>


			<table style=""text-align: center; width: 100%"">


			   <tr style=""background-color: Silver; height: 55px ; text-align: center; "">
				<td >");
	htmlToReturn.Write("<b>" + ApplicationCommon.CNV("INTESTAZIONE_ISTANZA_AlboOperaEco").Replace("(((NumDetermina)))", "<b>" + DOC_Field("TESTATA", "NumDetermina") + "</b>") + "</b>");
	htmlToReturn.Write($@"
					<br>


				</td>
				</tr>                                                                    

			</table>
		 </div>
	</div>");
	htmlToReturn.Write($@"
	<div style=""width: 800px; margin-top: 15px; text-align: left"">

	 <table>
             <tr>
                 <td nowrap=""nowrap"">
                     Il sottoscritto
                 </td>
                 <td>
                     <font class=""Input"">
                        	"+DOC_Field( "TESTATA", "NomeRapLeg")+$@"&nbsp; "+DOC_Field( "TESTATA", "CognomeRapLeg")+$@"
                     </font>
                 </td>
                 <td nowrap=""nowrap"">
                     nato a 
                 </td>
                 <td>
                     <font class=""Input"">
                        "+DOC_Field( "TESTATA", "LocalitaRapLeg")+$@"
                     </font>
                 </td>
				<td nowrap=""nowrap"">
					   Provincia
				</td>
				<td>
						<font class=""Input"">
							"+DOC_Field( "TESTATA", "ProvinciaRapLeg")+$@"
						</font>
				</td>
				<td nowrap=""nowrap"">
					   Stato
				</td>
				<td>
						<font class=""Input"">
							"+DOC_Field( "TESTATA", "StatoRapLeg")+$@"
						</font>
				</td>
				<td nowrap=""nowrap"">
					   il
					</td>
					<td>
						<font class=""Input"">
							"+DOC_Field( "TESTATA", "DataRapLeg")+$@"
						</font>
				</td>
             </tr>
         </table>

	");
	htmlToReturn.Write($@"
	<table>
				<tr>								

					<td nowrap=""nowrap"">
					Codice Fiscale 
					</td>
					<td>
						<font class=""Input"">
							"+DOC_Field( "TESTATA", "CFRapLeg")+$@"
						</font>
					</td>
				    <td nowrap=""nowrap"">
					  Telefono
					</td>
					<td>
						<font class=""Input"">
							"+DOC_Field( "TESTATA", "TelefonoRapLeg")+$@"
						</font>
					</td>
					<td nowrap=""nowrap"">
					   Telefono 2
					</td>
					<td>
						<font class=""Input"">
							"+DOC_Field( "TESTATA", "CellulareRapLeg")+$@"
						</font>
					</td>


					<td nowrap=""nowrap"">
					Residente a
					</td>
					<td>
						<font class=""Input"">
							"+DOC_Field( "TESTATA", "ResidenzaRapLeg")+$@"
						</font>
					</td>

				</tr>
		 </table>
		");
	htmlToReturn.Write($@"
	<table>
		<tr>		

				<td nowrap=""nowrap"">
				   Provincia
				</td>
				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "ProvResidenzaRapLeg")+$@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				   Stato
				</td>
				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "StatoResidenzaRapLeg")+$@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				Indirizzo
				</td>
				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "IndResidenzaRapLeg")+$@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				   Cap
				</td>
				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "CapResidenzaRapLeg")+$@"
					</font>
				</td>


				<td nowrap=""nowrap"">
			   In qualit&agrave; di
				</td>
				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "RuoloRapLeg")+$@"
					</font>
				</td>									

		  </tr>
		</table>
		");
	htmlToReturn.Write($@"
	<table>
			<tr>
				<td nowrap=""nowrap"">
			   Giusta procura per notaio
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "Procura") + $@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				   del
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "DelProcura") + $@"
					</font>
				</td>


				<td nowrap=""nowrap"">
			   Numero Rep.
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "NumProcura") + $@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				 Raccolta Numero
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "NumRaccolta") + $@"
					</font>
				</td>
			</tr>
		</table>");
	htmlToReturn.Write($@"
 <table>										
			<tr>

				<td nowrap=""nowrap"">
				Della Ditta 
				</td>
				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "RagSoc")+$@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				Forma Giuridica
				</td>
				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "NaGi")+$@"
					</font>
				</td>
			</tr>
		</table>		
		<table>										
			<tr>
				<td nowrap=""nowrap"">
			   Con sede legale in via
				</td>
				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "INDIRIZZOLEG")+$@"
					</font>
				</td>
				<td nowrap=""nowrap"">
			   Comune
				</td>

				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "LOCALITALEG")+$@"
					</font>
				</td>
				<td nowrap=""nowrap"">
			   Provincia
				</td>
				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "PROVINCIALEG")+$@"
					</font>
				</td>
				<td nowrap=""nowrap"">
			   Stato
				</td>
				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "STATOLOCALITALEG")+$@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				C.a.p.
				</td>

				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "CAPLEG")+$@"
					</font>
				</td>

			</tr>
		</table>");

	htmlToReturn.Write($@"
  <table>	
			<tr>
			<td nowrap=""nowrap"">
				Telefono <em>(1)</em>
			</td>											
			<td>
				<font class=""Input"">
					"+DOC_Field( "TESTATA", "NUMTEL")+$@"
				</font>
			</td>
			<td nowrap=""nowrap"">
		  Telefono <em>(2)</em>
			</td>
			<td>
				<font class=""Input"">
					"+DOC_Field( "TESTATA", "NUMTEL2")+$@"
				</font>
			</td>

			<td nowrap=""nowrap"">
		   Fax
			</td>

			<td>
				<font class=""Input"">
					"+DOC_Field( "TESTATA", "NUMFAX")+$@"
				</font>
			</td>

			</tr>
		</table>
	");
	//rigo 532
	htmlToReturn.Write($@"
	 <table>
			<tr>

				   <td nowrap=""nowrap"">
			   Codice Fiscale Ditta
				</td>

				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "codicefiscale")+$@"
					</font>
				</td>
				<td nowrap=""nowrap"">
			  P. Iva
				</td>
				<td>
					<font class=""Input"">
						"+DOC_Field( "TESTATA", "PIVA")+$@"
					</font>
				</td>
			</tr>
			</table>
	");
	htmlToReturn.Write(ApplicationCommon.CNV("ISTANZA_AlboOperaEco_KEY_001_bis"));
	//''response.write Replace(Replace(CNV("ISTANZA_AlboOperaEco_KEY_001"),"(((NumDetermina)))","<b>" & DOC_Field( "TESTATA", "NumDetermina") & "</b>"),"(((DataDetermina)))","<b>" & DOC_Field( "TESTATA", "DataDetermina") & "</b>")


	htmlToReturn.Write($@"<strong>1)</strong> che l'impresa rappresentata è iscritta <b> " + DOC_Field("TESTATA", "BelongCCIAA") + $@"</b>");
	if(DOC_Field("TESTATA", "BelongCCIAA") ==  "si")
	{
		htmlToReturn.Write($@"
		 <ul id=""BELONG_DIV"">
				<li>dall'anno "+DOC_Field( "TESTATA", "ANNOCOSTITUZIONE")+$@" alla Camera di Commercio, Industria, Artigianato ed Agricoltura della Provincia di "+DOC_Field( "TESTATA", "SedeCCIAA")+$@"</li>           
				<li>al numero REA "+DOC_Field( "TESTATA", "IscrCCIAA")+$@"  con un oggetto sociale compatibile con la Classe d’Iscrizione all'Albo dei fornitori di "+ApplicationCommon.Application["NOMEGESTORE"]+$@".</li>

		 </ul>");
	}
	htmlToReturn.Write($@"
	<strong>2)</strong> Identificazione dell’impresa rappresentata: 

	<ul>
               <li><strong>a)</strong> Attività Economica: "+DOC_Field( "TESTATA", "AttivitaEconomica")+$@"</li>                                         
				<li><strong>b)</strong> Data Inizio Attività: "+DOC_Field( "TESTATA", "DataInizioAttivita")+$@" </li>                                         										                                            
				<li><strong>c)</strong> Capitale Sociale: "+DOC_Field( "TESTATA", "CapitaleSociale")+$@"</li>                                         										  
     </ul>

	");
	htmlToReturn.Write($@"
 <strong>3)</strong> in particolare dichiara:					  						  



   <ul class=""liststylenone"">
        <li><strong>a)</strong> che l’impresa rappresentata non si trova in stato di fallimento, di liquidazione coatta o di concordato preventivo e che non sono in corso procedimenti per la dichiarazione di una di tali situazioni;</li>                                         
        <li><strong>b)</strong> </li>
		  <li> <font class=""Input""><img src=""../ctl_library/images/domain/"""+IIF( DOC_Field( "TESTATA", "CheckReati1") =="1" , "" , "un" ) +$@"""checked.gif"" /></font>  che nei propri confronti non è stata pronunciata sentenza di condanna passata in giudicato, o emesso decreto penale di condanna divenuto irrevocabile, oppure sentenza di applicazione della pena su richiesta, ai sensi dell’articolo 444 del codice di procedura penale, per reati gravi in danno dello Stato o della Comunità che incidono sulla moralità professionale; </li> 
		  <br>
		  <li> <font class=""Input""><img src=""../ctl_library/images/domain/"""+IIF( DOC_Field( "TESTATA", "CheckReati2") =="1" , "" , "un" ) +$@"""checked.gif"" /></font>   che nei propri confronti sono state pronunciate le seguenti sentenze:  "+DOC_Field( "TESTATA", "SentenzaReati")+$@"</li>											  										  
		  <li><strong>c)</strong> di non aver commesso grave negligenza o malafede nell'esecuzione delle prestazioni oggetto della attività del fornitore e di non aver commesso un errore grave nell'esercizio della propria attività professionale;  </li>                                         										  
		  <li><strong>d)</strong> di non aver commesso violazioni gravi, definitivamente accertate, rispetto agli obblighi relativi al pagamento delle imposte e tasse, secondo la legislazione italiana o quella dello Stato in cui è stabilita;    </li>                                         										  
		  <li><strong>e)</strong>) di non aver commesso violazioni gravi, definitivamente accertate, alle norme in materia di contributi previdenziali e assistenziali, secondo la legislazione italiana o quella dello Stato in cui è stabilita;       </li>                                         										  										  
		  <li><strong>f)</strong>) che, alla data odierna, l’impresa occupa il seguente Numero dipendenti "+DOC_Field( "TESTATA", "Numerodipendenti")+$@"</li>                                         										  										  

	 </ul>");
	htmlToReturn.Write($@"
	<strong>4)</strong> che tutti i documenti allegati alla presente richiesta di iscrizione in formato elettronico sono conformi all'originale e custoditi a cura del richiedente. 

	<br><br>

	<strong>5)</strong> di accettare che tutte le comunicazioni inerenti l’utilizzo e la gestione dell'Albo dei fornitori di "+ApplicationCommon.Application["NOMEGESTORE"]+$@"  siano effettuate tramite il Portale Gare all’indirizzo di posta elettronica di seguito indicato: "+DOC_Field( "TESTATA", "EMAIL")+$@" assumendosene la responsabilità in caso di non corretta od omessa indicazione; 

	<br><br>

	<strong>6)</strong> di essere informato, ai sensi e per gli effetti del decreto legislativo n.196/2003, che i dati raccolti saranno trattati, anche con strumenti informatici, esclusivamente nell’ambito del procedimento per il quale la presente dichiarazione viene resa;  

	<br>	<br>						



	<br>  

	");
	htmlToReturn.Write($@"
				</div>
				</div>
			</td>
		</tr>");
	footer();
	htmlToReturn.Write("</table>");
	<!-- fine pagina 1-->
	PrintPagina();
	htmlToReturn.Write($@"<table style=""width: 800px; height: 1400px;""");
	Header();
	htmlToReturn.Write($@"
		<tr>
			<td height=""100%"" valign=""top"">				 
				<div style=""text-align: left; width: 100%"">															
					<div>");

	htmlToReturn.Write($@"
	<strong>7)</strong> che la sede di iscrizione <strong>INPS</strong> (quando iscritto) e il numero di matricola sono i seguenti (in caso di iscrizione presso più sedi occorre indicarle tutte):  
	<br> <br> ");
	int row3 = 0;
	row3 = DOC_NumRow("POSIZIONI_INPS", "");
	htmlToReturn.Write($@"
	 <table style=""border: 0px solid black; border-collapse: collapse; width: 80%"" align=""center"" cellpadding=""5"">
		<tr style=""height: 18px"">

		<td style=""border: 0px solid black;"" width=""20%"">Matricola n.</td>
		<td style=""border: 0px solid black;"" width=""20%"">Sede Di Iscrizione INPS</td>							
		<td style=""border: 0px solid black;"" width=""20%"">Indirizzo INPS</td>						
		<td style=""border: 0px solid black;"" width=""20%"">Telefono</td>						
		<td style=""border: 0px solid black;"" width=""20%"">FAX</td>						

		</tr>");
	for (int i = 0;i<= row3-1;i++)
	{
		htmlToReturn.Write($@"
		<tr style=""height: 20px"">
				<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("POSIZIONI_INPS", "NumINPS", i) + $@"</font></td>
				<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("POSIZIONI_INPS", "SedeINPS", i) + $@"</font></td>															
				<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("POSIZIONI_INPS", "IndirizzoINPS", i) + $@"</font></td>								
				<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("POSIZIONI_INPS", "TelefonoINPS", i) + $@"/font></td>								
				<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("POSIZIONI_INPS", "FaxINPS", i) + $@"</font></td>								

			 </tr>");
	}
	htmlToReturn.Write($@"
	</table>
	<br/>

	<strong>8)</strong> che la sede di iscrizione  <strong>INAIL</strong> (quando iscritto) e il numero di matricola sono i seguenti (in caso di iscrizione presso più sedi occorre indicarle tutte):
		<br> <br> ");
	int row4 = 0;
	row4 = DOC_NumRow("POSIZIONI_INAIL", "");
	htmlToReturn.Write($@"
	  <table style=""border: 0px solid black; border-collapse: collapse; width: 80%"" align=""center"" cellpadding=""5"">
			<tr style=""height: 18px"">
			<td style=""border: 0px solid black;"" width=""20%"">Matricola n.</td>
			<td style=""border: 0px solid black;"" width=""20%"">PAT Sede Legale Impresa</td>
			<td style=""border: 0px solid black;"" width=""20%"">Via</td>
			<td style=""border: 0px solid black;"" width=""20%"">Telefono</td>
			<td style=""border: 0px solid black;"" width=""20%"">fax</td>

		 </tr>");

	for(int i = 0;i<= row4-1;i++)
	{
		htmlToReturn.Write($@"
		<tr style=""height: 20px"">
			<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("POSIZIONI_INAIL", "NumINAIL", i) + $@"</font></td>
			<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("POSIZIONI_INAIL", "SedeINAIL", i) + $@"</font></td>								
			<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("POSIZIONI_INAIL", "IndirizzoINAIL", i) + $@"</font></td>								
			<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("POSIZIONI_INAIL", "TelefonoINAIL", i) + $@"</font></td>								
			<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("POSIZIONI_INAIL", "FaxINAIL", i) + $@"</font></td>								
		</tr>");
	}
	htmlToReturn.Write($@"
	</table>
	<br/>
	<strong>9)</strong> che la sede di iscrizione alla <strong>CASSA EDILE</strong> (quando iscritto) e il numero di matricola sono i seguenti (in caso di iscrizione presso più sedi occorre indicarle tutte):
			<br> <br> ");




	int row5 = 0;
	row5 = DOC_NumRow("POSIZIONI_CASSAEDILE", "");

	htmlToReturn.Write($@"
	 <table style=""border: 0px solid black; border-collapse: collapse; width: 80%"" align=""center"" cellpadding=""5"">
		<tr style=""height: 18px"">
		<td style=""border: 0px solid black;"" width=""20%"">Matricola n.</td>
		<td style=""border: 0px solid black;"" width=""20"">Sede di</td>
		<td style=""border: 0px solid black;"" width=""20%"">Via</td>
		<td style=""border: 0px solid black;"" width=""20%"">Telefono</td>
		<td style=""border: 0px solid black;"" width=""20"">Fax</td>

	 </tr>");

	for(int i = 0;i<row5-1;i++)
	{
		htmlToReturn.Write($@"
			<tr style=""height: 20px"">
				<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">"+DOC_FieldRow( "POSIZIONI_CASSAEDILE", "NumEdile", i )+$@"</font></td>
				<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">"+DOC_FieldRow( "POSIZIONI_CASSAEDILE", "SedeEdile", i )+$@"</font></td>
				<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">"+DOC_FieldRow( "POSIZIONI_CASSAEDILE", "IndirizzoEdile", i )+$@"</font></td>
				<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">"+DOC_FieldRow( "POSIZIONI_CASSAEDILE", "TelefonoEdile", i )+$@"</font></td>
				<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">"+DOC_FieldRow( "POSIZIONI_CASSAEDILE", "FaxEdile", i )+$@"</font></td>

			 </tr>");
	}
	htmlToReturn.Write($@"
	</table>
	<br/>
	<strong>10)</strong> che l'Ufficio dell'Agenzia delle Entrate presso il quale si &egrave; iscritti &egrave; il seguente:
	<ul>
		<li>Sede di  <b>" + DOC_Field("DISPLAY_ABILITAZIONI", "CittaEntrate") + $@"</b> in via <b>" + DOC_Field("DISPLAY_ABILITAZIONI", "IndirizzoEntrate") + $@"</b> tel.: <b>" + DOC_Field("DISPLAY_ABILITAZIONI", "TelEntrate") + $@"</b></li>
	</ul>
	<br/>
	<strong>11)</strong> ");
	string stringaCCNL = "";
	string[] arr5 = null;
	int y = 0;

	stringaCCNL = DOC_FieldTecnical("DISPLAY_ABILITAZIONI", "SettoriCCNL");

	arr5 = stringaCCNL.Split("###");

	if ((arr5.Length - 1) >2)
	{
		htmlToReturn.Write("che i settori CCNL sono  i seguenti:");
	}
	else
	{
		htmlToReturn.Write("che il settore CCNL &egrave; il seguente:");
	}
	for(y = 1;y<=(arr5.Length-1);y++)
	{
		htmlToReturn.Write($@"<br><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + getSettoriCCNL(arr5[y]) + "</b>");
	}
	htmlToReturn.Write($@"
		<br/>



		<strong>12)</strong> di impegnarsi a comunicare tempestivamente ogni variazione rispetto a quanto dichiarato nella presente istanza, assumendosene la responsabilità;

		<br/><br/>

		<strong>13)</strong> di essere consapevole, altresì, che qualora emerga la non veridicità del contenuto della presente dichiarazione, questa impresa perderà i requisiti necessari per l’iscrizione all'Albo dei fornitori di " + ApplicationCommon.Application["NOMEGESTORE"] + $@" 

		<br/><br/>");
	footer();
	htmlToReturn.Write("</table>");
	<!-- fine pagina 3-->
	PrintPagina();
	htmlToReturn.Write($@"<table style=""width: 800px; height: 1400px;""");
	Header();
	htmlToReturn.Write($@"
	<tr>
		<td height=""100%"" valign=""top"">				 
			<div style=""text-align: left; width: 100%"">															
				<div>									 
				 <h3 style=""text-align:center""> ABILITAZIONI: </h3>	
				 <strong> Merceologia:</strong></br>");
	string stringa = "";
	string[] arr = null;


	stringa = DOC_FieldTecnical("DISPLAY_ABILITAZIONI", "Merceologia");

	arr = stringa.Split("###");

	for(int i = 1;i<=(arr.Length-1);i++)
	{
		htmlToReturn.Write($@"<br><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + getClasseIscrizione(arr[i]) + $@"</b>");
	}
	htmlToReturn.Write($@"<h3 style=""text-align:center""> DOCUMENTAZIONE: </h3>");
	int row6 = 0;
	row6 = DOC_NumRow("DOCUMENTAZIONE_RICHIESTA", "");
	htmlToReturn.Write($@"   
	<table style=""border: 0px solid black; border-collapse: collapse; width: 80%"" align=""center"" cellpadding=""5"">
			<tr style=""height: 18px"">
			<td style=""border: 0px solid black;"" width=""40%"">Descrizione</td>
			<td style=""border: 0px solid black;"" width=""40%"">Allegato</td>
			 </tr>");
	for(int i = 0;i<= row6-1;i++)
	{
		htmlToReturn.Write($@"
		 <tr style=""height: 20px"">
			<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("DOCUMENTAZIONE_RICHIESTA", "DescrizioneRichiesta", i) + $@"</font></td>
			<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("DOCUMENTAZIONE_RICHIESTA", "AllegatoRichiesto", i) + $@"</font></td>
		 </tr>");
	}
	htmlToReturn.Write($@"</table>


								</div>
							</div>
						</td>
					</tr>

				</table>");
	<!-- fine pagina 4-->
	htmlToReturn.Write($@" 
			</center>
		</div>
	</body>
	</html>");
	void PrintPagina()
	{
		htmlToReturn.Write($@"<div style=""page-break-after: always""></div>");
	}
	void footerold()
	{
		NumPag = NumPag + 1;

		htmlToReturn.Write($@"
		<br />

	<hr />
	<table width=""720px"" style=""vertical-align: bottom; bottom: 0px"">
		<tr>
			<td valign=""bottom"" align=""right"">
				 <br>
				" + NumPag + $@"
			</td>
		</tr>
	</table>");
	}
	void Header()
	{
		if(DOC_FieldTecnical( "DOCUMENT", "StatoDoc") == "Annullato")
		{
			//'response.Write  "<td width=""100%"" align=""left"" ><img  height=""70px"" src=""../images/annullato.gif"" ></td>"
			htmlToReturn.Write($@" style=""background-image:url(../images/annullato.gif) ; background-repeat:no-repeat;"" >");
		}
		else
		{
			htmlToReturn.Write(">");
		}
		//'response.Write "<tr><td><table width=""100%"" ><tr>"
		//'response.Write "<td height=""10px"" align=""right""><img width=""200"" src=""fesr_Basilicata.jpg""></td></tr></table></td></tr>"
		htmlToReturn.Write($@"<tr><td height=""70px"" align=""center"" valign=""top"" ><img height=""50"" src=""logo_new.gif""></td></tr>");
	}
	//'------------------------------------------------------------------------------
	//'-- funzione per disegnare il pie pagina
	//'------------------------------------------------------------------------------
	void footer()
	{
		NumPag = NumPag + 1;

		htmlToReturn.Write($@"<tr><td valign=""bottom"" height=""10px"" >");
		htmlToReturn.Write($@"<table width=""720px"" height=""10px"" style=""vertical-align: bottom; bottom: 0px""> ");
		htmlToReturn.Write($@"        <tr><td align=""left"" style=""border-bottom: 1px solid black;"" ><b> </b></td></tr><tr>");
		htmlToReturn.Write($@"            <td valign=""bottom"" align=""right"" >");
		htmlToReturn.Write($@"                ");
		htmlToReturn.Write($@"                  <br>");
		htmlToReturn.Write($@"                " + NumPag);
		htmlToReturn.Write($@"            </td>");
		htmlToReturn.Write($@"        </tr>");
		htmlToReturn.Write($@"    </table>");
		htmlToReturn.Write($@"    </td></tr>");
	}
}@Html.Raw(htmlToReturn.Out())