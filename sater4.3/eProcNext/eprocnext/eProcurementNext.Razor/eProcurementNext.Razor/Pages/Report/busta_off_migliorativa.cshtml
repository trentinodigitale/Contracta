@page "/Report/busta_off_migliorativa.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.print_documentModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using static eProcurementNext.Razor.Pages.Report.busta_off_migliorativaModel;
@using Microsoft.VisualBasic;
@model eProcurementNext.Razor.Pages.Report.busta_off_migliorativaModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
}
@{
	//'/application/ctl_library/pdf/pdf.asp?URL=/report/busta_offerta.asp?&IDDOC=67613&TYPEDOC=OFFERTA
	string idDoc = GetParamURL(Request.QueryString.ToString(), "IDDOC");
	objDoc = PrintDocument(session, htmlToReturn, HttpContext, Response,Request);//PrintDocument ok
	var sqlParams = new Dictionary<string, object?>();
	htmlToReturn.Write($@"
	<html>
	<head>

	");

	addMetaTag(htmlToReturn);

	htmlToReturn.Write($@"
	</head>

	<body style=""margin-left:50px; margin-right:50px; margin-top:10px; margin-bottom:10px"">


	<table height=""100%"" width=""100%"" border=""0"" style=""height: 1390px;"">

		<tr>
			<td align=""center""> 

				<table  width=""100%"" style=""margin-top:0px"" align=""center"">
					<tr>
						<td style=""border:0px;"" align=""center"">
							<table style=""font-weight:bold; align:center"">
								<tr>
									<td align=""center"" style=""border:0px; align:center; vertical-align=middle;"">
										<img width=""200px"" src=""./logo_new.gif"" border=""0"" alt=""" + ApplicationCommon.CNV("ALT LOGO") + $@""" />
									</td>
								</tr>
								<tr>
									<td style=""font-size:9px"">
									" + ApplicationCommon.CNV("HEADER_DATI_REGISTRAZIONE_FORNITORE") + $@"
									</td>
								</tr>
							</table>
						</td>
					</tr>
				</table>

			</td>
		</tr>

		<tr>

			<td height=""100%"" align=""top"" valign=""top"">

				<br/><br/><br/><br/><br/>
				");
	sqlParams.Add("@id", CStr(CLng(idDoc)));
	long id_del_mittente;
	id_del_mittente = DOC_FieldTecnical("TESTATA", "IdPfu");
	string strSQL = "select bando.Protocollo as ProtBando,bando.body, infoBando.CIG, b.Titolo,isnull(lot.NumeroLotto,-1) as numeroLotto ";
	strSQL = strSQL + " from ctl_doc a	with(nolock) ";
	strSQL = strSQL + "			inner join ctl_doc b with(nolock)    ON b.id = a.linkeddoc ";
	strSQL = strSQL + "			left join Document_MicroLotti_Dettagli lot with(nolock) ON lot.id = b.VersioneLinkedDoc ";
	strSQL = strSQL + "			inner join ctl_doc b2 with(nolock)   ON b2.id = b.LinkedDoc	";
	strSQL = strSQL + "			inner join ctl_doc pda with(nolock) ON pda.id = b2.linkeddoc ";
	strSQL = strSQL + "			inner join ctl_doc bando with(nolock) ON bando.id = pda.linkeddoc ";
	strSQL = strSQL + "			inner join document_bando infoBando with(nolock) ON infoBando.idheader = bando.id ";
	strSQL = strSQL + "	where a.id = @id";
	TSRecordSet rs = cdf.GetRSReadFromQuery_(strSQL, ApplicationCommon.Application.ConnectionString, sqlParams);
	rs.MoveFirst();

	string protocolloBando = GetValueFromRS(rs.Fields["ProtBando"]);
	string titoloRicOffertaMigliorativa = GetValueFromRS(rs.Fields["Titolo"]);
	string oggettoBando = GetValueFromRS(rs.Fields["body"]);
	string cig = GetValueFromRS(rs.Fields["CIG"]);
	string numeroLotto = GetValueFromRS(rs.Fields["numeroLotto"]);

	if(CStr(numeroLotto) == "-1")
	{
		titoloRicOffertaMigliorativa = "Offerta Migliorativa";
	}
	else
	{
		titoloRicOffertaMigliorativa = "Offerta Migliorativa Lotto N " + numeroLotto;
	}


	htmlToReturn.Write("<center><h3>" + titoloRicOffertaMigliorativa + "</h3></center>");
	htmlToReturn.Write("<br/><br/><br/>");

	htmlToReturn.Write("<strong>" + ApplicationCommon.CNV("Registro") + " Bando</strong>: " + protocolloBando + "<br/>");
	htmlToReturn.Write("<strong>Oggetto</strong>:" + oggettoBando + "<br/>");
	htmlToReturn.Write("<strong>CIG</strong>:" + cig + "<br/><br/>");

	htmlToReturn.Write("In data ");

	string tmpDateRec = "";
	string visTempDateRec = "";

	tmpDateRec = DOC_FieldTecnical("TESTATA", "DataInvio");

	visTempDateRec = DateAndTime.Day(CDate(tmpDateRec)) + "/" + DateAndTime.Month(CDate(tmpDateRec)) + "/" + DateAndTime.Year(CDate(tmpDateRec)) + " alle ore " + DateAndTime.Hour(CDate(tmpDateRec)) + ":" + DateAndTime.Minute(CDate(tmpDateRec)) + ":" + DateAndTime.Second(CDate(tmpDateRec));


	htmlToReturn.Write("'" + visTempDateRec + "'");

	htmlToReturn.Write("&egrave; stata presentata dall&apos;operatore economico ");
	sqlParams.Clear();
	sqlParams.Add("@nome", "codicefiscale");
	sqlParams.Add("@idpfu",CStr(CLng(id_del_mittente)));

	TSRecordSet tmpRS = cdf.GetRSReadFromQuery_("select aziRagioneSociale,aziIndirizzoLeg,aziLocalitaLeg, vatValore_FT from profiliutente,aziende,DM_Attributi where lnk = idazi and dztNome = @nome and idazi = pfuidazi and idpfu = @idpfu", ApplicationCommon.Application.ConnectionString, sqlParams);
	tmpRS.MoveFirst();
	htmlToReturn.Write("'" + GetValueFromRS(tmpRS.Fields["aziRagioneSociale"]) + " - " + GetValueFromRS(tmpRS.Fields["aziIndirizzoLeg"]) + " - " + GetValueFromRS(tmpRS.Fields["aziLocalitaLeg"]) + " - " + "Cod. Fis." + GetValueFromRS(tmpRS.Fields["vatValore_FT"]) + "'");



	htmlToReturn.Write("&nbsp;"); 
	htmlToReturn.Write("l&apos;offerta migliorativa con <strong>"+ApplicationCommon.CNV("Registro")+"</strong>"+ DOC_FieldTecnical( "TESTATA", "Protocollo")+"relativa all&apos;appalto specificato in oggetto.");

	htmlToReturn.Write($@"
			</td>

		</tr>
		<tr>
			<td>

				<table border=""0"" height=""50%"" width=""100%"" style=""vertical-align: text-bottom; margin-bottom: 0px"">
					<tr>
						<td align=""center"" style=""vertical-align: bottom;"">");

						ApplicationCommon.CNV("footer_stampe_custom_1");
						ApplicationCommon.CNV("footer_stampe_custom_2");
	htmlToReturn.Write($@"
						</td>
					</tr>
				</table>
				
			</td>
		</tr>
	</table>
	
	</body>
	</html>");

	try
	{
		FreeMemDocument(session);
	}
	catch
	{
		
	}
}@Html.Raw(htmlToReturn.Out())