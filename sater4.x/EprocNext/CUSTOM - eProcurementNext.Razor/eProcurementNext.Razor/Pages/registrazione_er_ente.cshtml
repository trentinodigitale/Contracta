@page "/registrazione_er_ente.asp"
@inject eProcurementNext.Session.ISession session;
@inject eProcurementNext.BizDB.ITabManage _TabManage;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.CommonModule
@using eProcurementNext.CtlProcess
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using eProcurementNext.CommonDB;
@using static eProcurementNext.Razor.Pages.registrazione_er_enteModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.cnvModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.captcha_accessModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.controlliModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.Extensions.Primitives
@using Microsoft.VisualBasic;
@using System.Web
@using System.IO;
@using System.Security.Claims
@using eProcurementNext.Razor;
@using static eProcurementNext.Razor.Pages.Functions.costanti;
@model eProcurementNext.Razor.Pages.registrazione_er_enteModel
@*

<!-- #INCLUDE FILE="./ctl_library/functions/cnv.inc"-->
<!-- #INCLUDE FILE="./ctl_library/functions/controlli.inc"-->
<!-- #Include File="./ctl_library/functions/captcha_access.inc" -->
<!-- #INCLUDE File="./ctl_library/document/common.asp" -->

*@
@using static eProcurementNext.Session.SessionMiddleware
@{
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new EprocResponse();

}
@{
	string strMnemonico = "PA";
	string strLabelErrEnteSelezionato = "";
	string strLabelErrStrutturaLivello1 = "";
	string strLabelErrStrutturaLivello2 = "";
	string strLabelWarningCfRapLegM = "";
	bool aziendaGiaCensita = false;
	dynamic enteSelezionato = "";

	string strLabelErrNomeRapLeg  = "";
	string strLabelErrCognomeRapLeg = "";
	string strLabelErrTelRapLeg = "";
	string strLabelErrCellulareRapLeg = "";
	string strLabelErrEmailRif  = "";
	string strLabelErrFunzAzi   = "";
	string strLabelErrCfRapLegM = "";
	string strLabelErrEmailRifAzi = "";

	string strLabelErrAgree = "";
	string strLabelErrCaptcha = "";

	string strLabelErrRagSoc = "";
	string strLabelErrIndiriz = "";
	string strLabelErrCitta = "";
	string strLabelErrProvincia = "";
	string strLabelErrCap = "";
	string strLabelErrTelefon = "";
	string strLabelErrFax = "";
	string strLabelErrEmail = "";

	string privacyagree_si = "";
	string privacyagree_no = "";

	TSRecordSet rs;

	htmlToReturn.Write($@"
		<div class=""loading"" id=""loading"" style=""display:none"">
		  <!--
			<img id=""loading-image"" src=""images/ajax-loading.gif"" alt=""Loading..."" />
			-->
		</div>
	");

	//'-- Test controllo di sessione + Generazione chiave di aggancio per la sessione di lavoro correte
	if (string.IsNullOrEmpty(CStr(session["SESSION_WORK_KEY"])) ) {

		//'call pulisciSessione()
		generaChiaveSessione();

		if (Request.HasFormContentType && Request.Form.Count > 2 ) {
			session["errore_campo"] = ApplicationCommon.CNV("Tempo di inattività troppo lungo. Sessione scaduta, ripetere l'operazione.");
			avanzaRegistrazione("continua", false, "0");
			throw new ResponseEndException(htmlToReturn.Out(), Response, ApplicationCommon.CNV("Tempo di inattività troppo lungo. Sessione scaduta, ripetere l'operazione."));
		}

	}


	//'------- RACCOLTA DATI DA FORM ---------
	StringValues tempValues = StringValues.Empty;

	//'-- primo tab
	dynamic strutturaLivello1 = "";
	if(Request.HasFormContentType && Request.Form.TryGetValue("strutturaLivello1", out tempValues))
	{
		strutturaLivello1 = CStr(tempValues.First()).Trim();	//'--obblig
	}

	dynamic strutturaLivello2 = "";
	if (Request.HasFormContentType && Request.Form.TryGetValue("strutturaLivello2", out tempValues)) {
		strutturaLivello2 = CStr(tempValues.First()).Trim();        //'--obblig
	}

	if(Request.HasFormContentType && Request.Form.TryGetValue("enteSelezionato", out tempValues)){ 
		enteSelezionato = CStr(tempValues.First()).Trim();			//'--obblig
	}

	//'-- terzo tab. dati utente
	dynamic NomeRapLeg = "";
	if(Request.HasFormContentType && Request.Form.TryGetValue("NomeRapLeg", out tempValues)){ 
		NomeRapLeg = CStr(tempValues.First()).Trim();			//'--obblig
	}
	dynamic CognomeRapLeg = "";
	if(Request.HasFormContentType && Request.Form.TryGetValue("CognomeRapLeg", out tempValues)){ 
		CognomeRapLeg = CStr(tempValues.First()).Trim();	//'--obblig
	}
	dynamic TelefonoRapLeg = "";
	if(Request.HasFormContentType && Request.Form.TryGetValue("TelefonoRapLeg", out tempValues)){ 
		TelefonoRapLeg = CStr(tempValues.First()).Trim();	//'--obblig
	}
	dynamic CellulareRapLeg = "";
	if(Request.HasFormContentType && Request.Form.TryGetValue("CellulareRapLeg", out tempValues)){ 
		CellulareRapLeg = CStr(tempValues.First()).Trim();
	}
	dynamic EMailRif = "";
	if(Request.HasFormContentType && Request.Form.TryGetValue("EMailRif", out tempValues)){ 
		EMailRif = CStr(tempValues.First()).Trim();			 	//'--obblig
	}
	//'EMailRiferimentoAzienda = trim(cstr(Request.Form("EMailRiferimentoAzienda")))
	dynamic funzione_aziendale = "";
	if(Request.HasFormContentType && Request.Form.TryGetValue("funzione_aziendale", out tempValues)){ 
		funzione_aziendale = CStr(tempValues.First()).Trim(); //'--obblig
	}
	dynamic cfRapLeg = "";
	if(Request.HasFormContentType && Request.Form.TryGetValue("cfRapLeg", out tempValues)){ 
		cfRapLeg = CStr(tempValues.First()).Trim(); //'--obblig
	}

	//'-- quarto tab
	dynamic privacyagree = "";
	if(Request.HasFormContentType && Request.Form.TryGetValue("privacyagree", out tempValues)){ 
		privacyagree = CStr(tempValues.First()).Trim();		//'--obblig
	}
	//'captchacode = trim(cstr(Request.Form("captchacode")))		//'--obblig
	//'------- FINE RACCOLTA DATI DA FORM ---------

	//'-- variabili globali
	string codStato = "M-1-11-ITA"; //'costante per gli enti
	aziendaGiaCensita = true;

	dynamic comando = "";
	if(Request.HasFormContentType && Request.Form.TryGetValue("comando", out tempValues)){
		comando = CStr(tempValues.First());
	}
	if (string.IsNullOrEmpty(comando)) {
		comando = CStr(GetParamURL(Request.QueryString.ToString(), "comando"));
	}

	if (string.IsNullOrEmpty(comando)) {
		if(Request.HasFormContentType && Request.Form.TryGetValue("default_command", out tempValues))
		{
			comando = CStr(tempValues.First());
		}
	}
	dynamic strStep = "";
	if(Request.HasFormContentType && Request.Form.TryGetValue("step", out tempValues))
	{
		strStep = CStr(tempValues.First());

	}

	if (string.IsNullOrEmpty(strStep) && string.IsNullOrEmpty(comando) && !string.IsNullOrEmpty(GetParamURL(Request.QueryString.ToString(),"sel")) ) {
		comando = "ricarica";
	}

	if (comando.ToLower() == "annulla" ) {

		pulisciSessione();
		avanzaRegistrazione("continua",false,"");

		//'-- memorizzo i dati del form in sessione
	}else if (comando.ToLower() == "continua" ) {

		if (strStep == "0" || strStep == "1" ) {

			//'-- se il livello 1 � cambiato annullo una precedente selezione del livello3
			if (strutturaLivello1 != CStr(session["strutturaLivello1"]) ) {
				strutturaLivello2 = "";
				enteSelezionato = "";
			}

			session["strutturaLivello1"] = strutturaLivello1;

			//'-- se il livello 2 � cambiato annullo una precedente selezione del livello3
			if (strutturaLivello2 != CStr(session["strutturaLivello2"]) ) {
				enteSelezionato = "";
			}

			//'-- metto in session l'idAzi dell'ente scelto
			session["ID_AZI"] = enteSelezionato;

			session["strutturaLivello2"] = strutturaLivello2;
			session["enteSelezionato"] = enteSelezionato;

			if (!string.IsNullOrEmpty(CStr(enteSelezionato)) && CStr(enteSelezionato) != "0" ) {
				strStep = "1";
			}

			dynamic tempVariable = "";
			if(Request.HasFormContentType && Request.Form.TryGetValue("comando", out tempValues))
			{
				tempVariable = tempValues.First();
			}
			if (!string.IsNullOrEmpty(strutturaLivello1) && !string.IsNullOrEmpty(strutturaLivello2) && !string.IsNullOrEmpty(CStr(tempVariable))) {
				strLabelErrEnteSelezionato = @"<label for=""enteSelezionato"" class=""label_error"">Campo obbligatorio</label>";
			}

			if ((string.IsNullOrEmpty(strutturaLivello1) || strutturaLivello1 == "0") && !string.IsNullOrEmpty(CStr(tempVariable))) {
				strLabelErrStrutturaLivello1 = @"<label for=""strutturaLivello1"" class=""label_error"">Campo obbligatorio</label>";
			}

		}

		if (strStep == "2" ) {

			//'-- i dati azienda sono tutti readonly

		}

		if (strStep == "3" ) {
			session["form_reg_NomeRapLeg"] = NomeRapLeg;
			session["form_reg_CognomeRapLeg"] = CognomeRapLeg;
			session["form_reg_telrapleg"] = TelefonoRapLeg;
			session["form_reg_celrapleg"] = CellulareRapLeg;
			session["form_reg_emailrif"] = EMailRif;
			//session["form_reg_emailrifazi"] = EMailRiferimentoAzienda;
			session["form_reg_funzazi"] = funzione_aziendale;
			session["form_reg_cfRapLeg"] = cfRapLeg;
		}

		if (strStep == "4" ) {
			session["form_reg_privacyagree"] = privacyagree;
		}

	}

	bool erroreValidazione = false;

	//'-- se si � completata la compilazione del form
	if (comando.ToLower() == "continua" ) {

		//'-- *****************************
		//'-- **** FASE DI VALIDAZIONE ****
		//'-- *****************************

		if (strStep == "1" ) {

			loadValidationCollection();

			recuperaInfoAzienda(session["ID_AZI"]);

		}

		if (strStep == "2" ) {

		}

		if (strStep == "3" ) {

			strLabelErrNomeRapLeg  = "";
			strLabelErrCognomeRapLeg = "";
			strLabelErrTelRapLeg = "";
			strLabelErrCellulareRapLeg = "";
			strLabelErrEmailRif  = "";
			strLabelErrFunzAzi   = "";
			strLabelErrCfRapLegM = "";
			strLabelErrEmailRifAzi = "";

			if (string.IsNullOrEmpty(NomeRapLeg)) {
				erroreValidazione = true;
				strLabelErrNomeRapLeg = @"<label for=""NomeRapLeg"" class=""label_error"">Campo obbligatorio</label>";
			}
			if (string.IsNullOrEmpty(CognomeRapLeg)) {
				erroreValidazione = true;
				strLabelErrCognomeRapLeg = @"<label for=""CognomeRapLeg"" class=""label_error"">Campo obbligatorio</label>";
			}		

			if (string.IsNullOrEmpty(TelefonoRapLeg)) {
				erroreValidazione = true;
				strLabelErrTelRapLeg = @"<label for=""TelefonoRapLeg"" class=""label_error"">Campo obbligatorio</label>";
			}else{
				if (validateFieldReg("TelefonoRapLeg",TelefonoRapLeg) == false ) {
					erroreValidazione = true;
					strLabelErrTelRapLeg = @"<label for=""TelefonoRapLeg"" class=""label_error"">Valore non valido</label>";
				}
			}	

			if (!string.IsNullOrEmpty(CellulareRapLeg) && validateFieldReg("CellulareRapLeg",CellulareRapLeg) == false ) {
				erroreValidazione = true;
				strLabelErrCellulareRapLeg = @"<label for=""CellulareRapLeg"" class=""label_error"">Valore non valido</label>";
			}				

			if (string.IsNullOrEmpty(EMailRif)) {
				erroreValidazione = true;
				strLabelErrEmailRif = @"<label for=""EMailRif"" class=""label_error"">Campo obbligatorio</label>";
			}else if ( !isEmailValid(EMailRif) ) {
				erroreValidazione = true;
				strLabelErrEmailRif = @"<label for=""EMailRif"" class=""label_error"">Email non valida</label>";
			}	
			//if (!string.IsNullOrEmpty(EMailRiferimentoAzienda) && !isEmailValid(EMailRiferimentoAzienda) ) {
			//	erroreValidazione = true;
			//	strLabelErrEmailRifAzi = @"<label for=""EMailRiferimentoAzienda"" class=""label_error"">Email non valida</label>";
			//}				
			if (string.IsNullOrEmpty(funzione_aziendale) || funzione_aziendale == "0" ) {
				erroreValidazione = true;
				strLabelErrFunzAzi = @"<label for=""funzione_aziendale"" class=""label_error"">Campo obbligatorio</label>";
			}	

			if (string.IsNullOrEmpty(cfRapLeg)) {
				erroreValidazione = true;
				strLabelErrCfRapLegM = @"<label for=""cfRapLeg"" class=""label_error"">Campo obbligatorio</label>";			
			}else{

				//'-- se ha inserito il cf del rapLeg e ha scelto Italia effettuo anche una verifica formale
				if (codStato == "M-1-11-ITA" ) {

					//'-- ****************************************
					//'-- *** CONTROLLO FORMALE CODICE FISCALE ***
					//'-- ****************************************
					string resp = ControllaCF(cfRapLeg, true);

					if (!string.IsNullOrEmpty(resp)) {

						erroreValidazione = true;
						strLabelErrCfRapLegM = @"<label for=""cfRapLeg"" class=""label_error"">Codice fiscale non valido</label>";					

					}else{

						if (string.IsNullOrEmpty(CStr(session["form_reg_warning_cfrapleg"])) || CStr(session["form_reg_warning_cfrapleg"]) != (cfRapLeg + NomeRapLeg + CognomeRapLeg) ) {

							//'-- se � un codice fiscale valido formalmente passo ad effettuare il controllo (in warning, cio� non bloccante)
							//'-- per verificare che nome e cognome del rapLeg corrispondono con il codice fiscale
							if (! isMyCF( NomeRapLeg, CognomeRapLeg, cfRapLeg ) ) {
								erroreValidazione = true;
								strLabelWarningCfRapLegM = @"<label for=""cfRapLeg"" class=""label_error"">Codice fiscale non corrispondente</label>";					
								session["form_reg_warning_cfrapleg"] = cfRapLeg + NomeRapLeg + CognomeRapLeg;
							}

						}

					}

				}

			}

			//'-- BLOCCO se esiste gia un utente associato all'azienda e con lo stesso codice fiscale
			string strSql = "select idpfu,pfuDeleted from profiliutente where pfuCodiceFiscale = '" + cfRapLeg.Replace("'", "''") + "' and pfuIdAzi = " + CStr(session["ID_AZI"]);
			//'response.write strSql
			//'response.end

			rs = GetRS(strSql);

			if (rs.RecordCount > 0 ) {

				erroreValidazione = true;
				//'PRIMA DELLE MODIFICHE FATTE CON ATTIVITA' 336256  mostrava il messaggio e bloccava
				//'session("errore_campo") = "Utente gia censito. Effettuare il recupero credenziali"
				if (CInt(rs.Fields["pfuDeleted"]) == 1 ) {
					session["errore_campo"] = ApplicationCommon.CNV("L'utente inserito risulta cessato nel sistema. Si desidera riattivarlo? In caso di riattivazione verranno inviate le credenziali all'indirizzo e-mail registrato nella piattaforma.") + @" <div id='messaggio_utente' ><input type=""submit"" class=""btn_forward"" name=""comando"" value=""Riattiva Utente"" onclick=""document.getElementById('loading').style.display = 'block'""/><br/><br/></div>";
				}else{
					session["errore_campo"] = ApplicationCommon.CNV("L'utente inserito risulta già presente nel sistema. Si desidera ricevere nuovamente le credenziali? Verranno inviate le credenziali all'indirizzo e-mail registrato nella piattaforma.") + @" <div id='messaggio_utente'><input type=""submit"" class=""btn_forward"" name=""comando"" value=""Invia Credenziali"" onclick=""document.getElementById('loading').style.display = 'block'""/><br/><br/></div>";
				}

			}

			//set rs = nothing

		}	

		if (strStep == "4" ) {

			//'-- se stiamo proseguendo dallo step 3 valido i dati del form 3
			strLabelErrAgree    = "";
			strLabelErrCaptcha  = "";

			if (string.IsNullOrEmpty(privacyagree) || privacyagree.ToLower() == "no" ) {
				erroreValidazione = true;
				strLabelErrAgree = @"<label for=""privacyagree"" class=""label_error"">Scelta obbligatoria</label>";
			}

			//'esitoCaptcha = cstr(request.form("esitoCaptcha"))
			//'if esitoCaptcha = "KO" ) {

			if ( !TestCaptcha("captcha_access_totale", GetValueFromForm(Request, session["captcha_field_name"]) ) ) {
				erroreValidazione = true;
				strLabelErrCaptcha = @"<label for=""captchacode"" class=""label_error"">Valore non corretto</label>";
			}			

			if (erroreValidazione == false ) {
				session["censimento_ok"] = "OK";
				session["censimento2_ok"] = "OK";
			}

		}		

	}else if ( comando.ToLower() == "sel-livello-1" ) {

	}else if (comando.ToLower() == "sel-livello-2" ) {

	}else if (comando.ToLower() == "indietro" ) {

		session["err_validazione_registrazione"] = "";

		switch (strStep)
		{ 
			case "":
				drawStep1();
				break;
			case "1":
				drawStep1();
				break;
			case "2":
				drawStep1();
				break;
			case "3":
				drawStep2();
				break;
			case "4":
				drawStep3();
				break;
			default:
				drawStep1();
				break;
		}

		throw new ResponseEndException(htmlToReturn.Out(), Response, "indietro");

	}else if (comando.ToLower() == "ricarica")
	{
		session["err_validazione_registrazione"] = "";

		strStep = session["last_step"];
		session["last_step"] = "";

		switch (strStep){
			case "":
				drawStep1();
				break;
			case "1":
				drawStep1();
				break;
			case "2":
				drawStep2();
				break;
			case "3":
				drawStep3();
				break;
			case "4":
				drawStep4();
				break;
			default:
				drawStep1();
				break;
		}

		throw new ResponseEndException(htmlToReturn.Out(), Response, "ricarica");
	}else if (comando.ToLower() == "riattiva utente")
	{
		string strSql = "select idpfu,pfuDeleted from profiliutente with(nolock) where pfuCodiceFiscale = '" + cfRapLeg.Replace("'", "''") + "' and pfuIdAzi = " + CStr(session["ID_AZI"]);

		rs = GetRS(strSql);				
		if (rs.RecordCount > 0){
			if (CInt(rs.Fields["pfuDeleted"]) == 1 ){
				string strDescErrore = "";

				ClsElab objProc = new ClsElab();
				try
				{
					objProc.Elaborate("RIPRISTINA_DA_REGISTRAZIONE", "USER_DOC", CInt(rs.Fields["idpfu"]), CInt(rs.Fields["idpfu"]), ref strDescErrore, 1, ApplicationCommon.Application.ConnectionString);
				}
				catch (Exception ex)
				{
					string strErrore = " Errore USER_DOC,RIPRISTINA_DA_REGISTRAZIONE " + ex.Message + "-" + strDescErrore;
					htmlToReturn.Write(strErrore);
					throw new ResponseEndException(htmlToReturn.Out(), Response, strErrore);
				}

				if (!string.IsNullOrEmpty(strDescErrore))
				{
					string strErrore = " Errore VERIFICA_REGISTRAZIONE_FORN,SEND " + "-" + strDescErrore;
					htmlToReturn.Write(strErrore);
					throw new ResponseEndException(htmlToReturn.Out(), Response, strErrore);
				}


				session["msg_info"] = ApplicationCommon.CNV("La sua utenza è stata riattivata, le sue credenziali sono state inviate all'indirizzo e-mail registrato nella piattaforma.");
				avanzaRegistrazione("continua", false, "5");
			}
		}else{
			session["msg_info"] = "Errore nessun utente corrisponde ai dati inseriti.";
			avanzaRegistrazione("continua", false, "5");
		}	

		throw new ResponseEndException(htmlToReturn.Out(), Response, "riattiva utente");
	}else if (comando.ToLower() == "invia credenziali")
	{
		string strSql = "select idpfu,pfuDeleted from profiliutente with(nolock) where pfuCodiceFiscale = '" + cfRapLeg.Replace("'", "''") + "' and pfuIdAzi = " + CStr(session["ID_AZI"]);

		rs = GetRS(strSql);				
		if (rs.RecordCount > 0){
			if (CInt(rs.Fields["pfuDeleted"]) == 0 ){
				string strDescErrore = "";
				ClsElab objProc = new ClsElab();
				try{
					objProc.Elaborate("RECUPEROPWD", "RECUPEROCODICI", CLng(rs.Fields["idpfu"]), CLng(rs.Fields["idpfu"]), ref strDescErrore, 1, ApplicationCommon.Application.ConnectionString);
				}
				catch (Exception ex)
				{
					string strErrore = " Errore RECUPEROCODICI,RECUPEROPWD " + ex.Message + "-" + strDescErrore;
					htmlToReturn.Write(strErrore);
					throw new ResponseEndException(htmlToReturn.Out(), Response, strErrore);
				}
				//Set objProc = nothing

				if (!string.IsNullOrEmpty(strDescErrore))
				{
					string strErrore = " Errore RECUPEROCODICI,RECUPEROPWD " + "-" + strDescErrore;
					htmlToReturn.Write(strErrore);
					throw new ResponseEndException(htmlToReturn.Out(), Response, strErrore);
				}

				session["msg_info"] = ApplicationCommon.CNV("Le sue credenziali sono state inviate all'indirizzo e-mail  registrato nella piattaforma.");
				avanzaRegistrazione("continua", false, "5");

			}	
		}else{
			session["msg_info"] = "Errore nessun utente corrisponde ai dati inseriti.";
			avanzaRegistrazione("continua",false,"5");
		}		

		throw new ResponseEndException(htmlToReturn.Out(), Response, "invia credenziali");
	}

	avanzaRegistrazione(comando, erroreValidazione, strStep);

	void drawStep1(){

		session["reg_form_esito_ok"] = "";
		session["reg_form_esito_sign"] = "";
		session["last_step"] = "1";

		jsFocus();


		htmlToReturn.Write($@"

		<div id=""main_registrazione"" class=""main_registrazione"">
			<div id=""shadow"">

				<div id=""middle"">
					<div id=""colcontainer"">

						<div id=""colcx"" class=""large"">

							" + ApplicationCommon.CNV("Per registrarsi - ente") + $@"
		");
		drawSteps(1);


		htmlToReturn.Write($@"

						<div class=""data_form"">
							<form name=""FormCens"" id=""FormCens"" action="""" method=""post"">
								<fieldset>

									<input type=""hidden"" name=""default_command"" value=""Continua""/>

									<div id=""accordion"">
										<h3 class=""toggler atStart""><span>1</span><span class=""data_form_title"">" + ApplicationCommon.CNV("Selezione ente") + $@"</span></h3>
										<div class=""element atStart"" id=""foglio1"">

											<div class=""form_row"">
												<div class=""form_field"">

													<label for=""stato"">*Primo Livello Struttura</label>

		");

		string selected1 = CStr(session["strutturaLivello1"]);

		//'if selected1 = "" or selected1 = "0" then

		TSRecordSet rs = GetRS("select * from lib_domainvalues with(nolock) where dmv_dm_id = 'TIPO_AMM_ER' and DMV_LEVEL = 1 and isnull( dmv_deleted , 0 ) = 0 order by dmv_sort asc");
		rs.MoveFirst(); 
		htmlToReturn.Write($@"


													<select onchange=""document.getElementById('loading').style.display = 'block'; document.getElementById('FormCens').submit();"" id=""strutturaLivello1"" name=""strutturaLivello1"" class=""focusthis txt required "+ IIF(!string.IsNullOrEmpty(strLabelErrStrutturaLivello1),"InputError","") + @""" style=""max-width:50em"">
														<option value=""0"">"+ApplicationCommon.CNV( "Seleziona" ) + @"</option>
		");

		while (!rs.EOF){

			if (CStr(selected1) == CStr(rs.Fields["dmv_father"]) ){
				htmlToReturn.Write(@"<option value=""" + rs.Fields["dmv_father"] + @""" selected=""selected"">"); 
			}else{
				htmlToReturn.Write(@"<option value=""" + rs.Fields["dmv_father"] + @""">"); 
			}

			htmlToReturn.Write( HtmlEncode(CStr(rs.Fields["dmv_descml"]).ToUpper()) + "</option>");
			rs.MoveNext();
		}

		//set rs=nothing
		htmlToReturn.Write($@"
													</select>

		");
		htmlToReturn.Write(strLabelErrStrutturaLivello1);

		//'else

		//'-- recupero la descrizione dell'elemento precedentemente selezionato
		//'set rs = GetRS("select * from lib_domainvalues where dmv_dm_id = 'TIPO_AMM_ER' and DMV_LEVEL = 1 and dmv_father = '" & replace(selected1,"'","''") & "'")
		//'desc_selected = ""
		//'if rs.recordcount > 0 then
		//'	rs.movefirst
		//'	desc_selected = rs("dmv_descml")
		//'end if
		//'set rs = nothing


		//'end if

		htmlToReturn.Write($@"


												</div>
											</div>

											<div class=""form_row"">
												<div class=""form_field"">

													<label for=""stato"">*Secondo Livello Struttura</label>
		");


		string selected2 = CStr(session["strutturaLivello2"]);

		if (!string.IsNullOrEmpty(selected1) && selected1 != "0") { //'and ( selected2 = "" or selected2 = "0" ) then

			//'set rs = GetRS("select * from lib_domainvalues with(nolock) where dmv_dm_id = 'TIPO_AMM_ER' and DMV_LEVEL = 2 and dmv_cod like '" & replace(selected1,"'","''") & "%'")
			//'set rs = GetRS("select F.* 	from lib_domainvalues R with(nolock) inner join lib_domainvalues F with(nolock) on F.DMV_LEVEL = 2 and F.dmv_dm_id = 'TIPO_AMM_ER' and F.DMV_Father like R.DMV_Father + '%' and isnull( F.DMV_Deleted , 0 ) = 0  where R.dmv_dm_id = 'TIPO_AMM_ER' 	and R.dmv_cod = '" & replace(selected1,"'","''") & "'")
			rs = GetRS("select F.* 	from lib_domainvalues F with(nolock) where  F.DMV_LEVEL = 2 and F.dmv_dm_id = 'TIPO_AMM_ER' and  isnull( F.DMV_Deleted , 0 ) = 0  and F.DMV_Father like '" + selected1.Replace("'","''") + "%' order by dmv_descml asc");
			rs.MoveFirst(); 
			htmlToReturn.Write($@"

														<select onchange=""document.getElementById('loading').style.display = 'block';document.getElementById('FormCens').submit();"" id=""strutturaLivello2"" name=""strutturaLivello2"" class=""txt required " + IIF(!string.IsNullOrEmpty(strLabelErrStrutturaLivello2),"InputError","")+ @""" style=""max-width:50em"">
															<option value=""0"">" + ApplicationCommon.CNV( "Seleziona" ) + @"</option>
		");

			while (! rs.EOF){ 

				if (CStr(selected2) == CStr(rs.Fields["dmv_cod"]) ){
					htmlToReturn.Write($@"<option value=""" + rs.Fields["dmv_cod"] + @""" selected=""selected"">"); 
				}else{
					htmlToReturn.Write($@"<option value=""" + rs.Fields["dmv_cod"] + @""">"); 
				}

				htmlToReturn.Write( CStr(rs.Fields["dmv_descml"]).ToUpper() + "</option>"); 

				rs.MoveNext();

			}

			//set rs=nothing
			htmlToReturn.Write($@"
														</select>

		");
			htmlToReturn.Write(strLabelErrStrutturaLivello2);

		}else{

			//'-- recupero la descrizione dell'elemento precedentemente selezionato
			//'set rs = GetRS("select * from lib_domainvalues where dmv_dm_id = 'TIPO_AMM_ER' and DMV_LEVEL = 2 and dmv_cod = '" & replace(selected2,"'","''") & "'")
			//'desc_selected = ""

			//'if rs.recordcount > 0 then
			//'	rs.movefirst
			//'	desc_selected = rs("dmv_descml")
			//'end if

			//'set rs = nothing
			htmlToReturn.Write($@"
														<input style=""width:40em"" type=""text"" class=""txt required"" id=""desc_strutturaLivello2"" readonly=""readonly"" name=""desc_strutturaLivello2"" value="""+HtmlEncode( CStr("") ) + @"""/>
														<input type=""hidden"" class=""txt required"" id=""strutturaLivello2"" readonly=""readonly"" name=""strutturaLivello2"" value=""0""/>
		");
		}
		htmlToReturn.Write($@"

												</div>
											</div>

											<div class=""form_row"">
												<div class=""form_field"">

													<label for=""stato"">*" + ApplicationCommon.CNV( "Caption_Ente_Registrazione_Utente_PA" ) + @"</label>

		");

		string selected3 = CStr(session["enteSelezionato"]);

		if (!string.IsNullOrEmpty(selected1) && selected1 != "0" && !string.IsNullOrEmpty(selected2) && selected2 != "0") { //'and ( selected3 = "" or selected3 = "0" )  then

			rs = GetRS("select aziRagioneSociale,idAzi from DASHBOARD_VIEW_ENTI where statoEnte = 'Attivo' and aziDeleted = 0 and tipo_amm_er = '" + selected2.Replace("'","''") + "' order by 1 asc");

			if( rs.RecordCount > 0){

				rs.MoveFirst();
				htmlToReturn.Write($@"

														<select id=""enteSelezionato"" name=""enteSelezionato"" class=""txt required " + IIF(!string.IsNullOrEmpty(strLabelErrEnteSelezionato),"InputError","") + @""" style=""max-width:50em"">
															<option value=""0"">" + ApplicationCommon.CNV( "Seleziona" ) + @"</option>
		");

				while (! rs.EOF){

					htmlToReturn.Write($@"<option value=""" + CStr(rs.Fields["idAzi"]) + @""">");
					htmlToReturn.Write(HtmlEncode(CStr(rs.Fields["aziRagioneSociale"])) + "</option>");


					rs.MoveNext();

				}

				//set rs=nothing
				htmlToReturn.Write($@"
														</select>

		");
				htmlToReturn.Write(strLabelErrEnteSelezionato);

			}else{

				if (CStr(enteSelezionato) == "0" ){
					erroreValidazione = true;
					session["errore_campo"] = "Selezionare un ente";
				}

				htmlToReturn.Write($@"
															<input style=""width:40em"" type=""text"" class=""txt required"" id=""desc_enteSelezionato"" readonly=""readonly"" name=""desc_enteSelezionato"" value=""Nessun ente trovato""/>
															<input type=""hidden"" class=""txt required"" id=""enteSelezionato"" readonly=""readonly"" name=""enteSelezionato"" value=""0""/>
		");
			}

		}else{

			htmlToReturn.Write($@"
															<input style=""width:40em"" type=""text"" class=""txt required"" id=""desc_enteSelezionato"" readonly=""readonly"" name=""desc_enteSelezionato"" value=""""/>
															<input type=""hidden"" class=""txt required"" id=""enteSelezionato"" readonly=""readonly"" name=""enteSelezionato"" value=""0""/>
		");
		}
		htmlToReturn.Write($@"

												</div>
											</div>	


		");

		drawCampiHidden();
		visualizzaErrore();
		htmlToReturn.Write($@"

											<input type=""submit"" class=""btn_back"" name=""comando"" value=""Annulla"" onclick=""document.getElementById('loading').style.display = 'block'""/>
											<input type=""submit"" class=""btn_forward"" name=""comando"" value=""Continua"" onclick=""document.getElementById('loading').style.display = 'block'""/>

										</div>
									</div>

		");
		//'-- se sono stati selezionati tutti e 3 i campi permetto il passaggio alla scheda 2 altrimenti ricarico il tab corrente
		//'-- per avanzare nella selezione dei campi
		if ((!string.IsNullOrEmpty(selected1) && selected1 != "0" ) && (!string.IsNullOrEmpty(selected2) && selected2 != "0") && (!string.IsNullOrEmpty(enteSelezionato) && enteSelezionato != "0")) {
			htmlToReturn.Write($@"
										<input type=""hidden"" name=""step"" value=""1""/>

		");
		}else{
			htmlToReturn.Write($@"
										<input type=""hidden"" name=""step"" value=""0""/>
		");
		}
		htmlToReturn.Write($@"

								</fieldset>
							</form>
						</div>

						</div>

					</div>
				</div>

			</div>
		</div>

		");

	}

	void drawStep2(){

		session["last_step"] = "2";

		jsFocus();


		htmlToReturn.Write($@"
		<div id=""main_registrazione"" class=""main_registrazione"">
			<div id=""shadow"">

				<div id=""middle"">
					<div id=""colcontainer"">

						<div id=""colcx"" class=""large"">

						" + ApplicationCommon.CNV( "Per registrarsi") + $@"

		");
		drawSteps(2);

		string readOnlyFields = @"readonly=""readonly""";
		string editLocalita = @" readonly = ""readonly"" ";
		string editProv = @" readonly = ""readonly"" ";
		htmlToReturn.Write($@"
						<div class=""data_form"">	
							<form name=""FormCens"" id=""FormCens"" action="""" method=""post"">
								<fieldset>
									<div id=""accordion"">
										<h3 class=""toggler atStart""><span>2</span><span class=""data_form_title"">" +ApplicationCommon.CNV( "Riepilogo dati ente" ) + $@"</span></h3>
										<div class=""element atStart"" id=""foglio1"">

												<div class=""form_field"">

													<label for=""RagSociale"">" +ApplicationCommon.CNV( "Denominazione Ente" ) + $@"</label> 

													<input type=""hidden"" class=""txt100 required " + IIF(!string.IsNullOrEmpty(strLabelErrRagSoc),"InputError","") + $@""" id=""RagSociale"" " + readOnlyFields + @" name=""RagSociale"" value="""+HtmlEncode( session["form_reg_ragsoc"] )+ @"""/>

													<span class=""form_readonly_field"">" + HtmlEncode( session["form_reg_ragsoc"] ) + @"</span>

													" +strLabelErrRagSoc + @"

												</div>

                                    			<div class=""form_field"">

													<label for=""NaturaGiuridica"">" + ApplicationCommon.CNV( "Natura giuridica" ) + @"</label> 

													<input type=""hidden"" class=""txt required"" id=""NaturaGiuridica"" " + readOnlyFields + @"name=""NaturaGiuridica"" value=""" + HtmlEncode( session["form_reg_natgiu"] )+ @"""/>
													<span class=""form_readonly_field"">" + HtmlEncode( session["form_reg_natgiu"] ) + @"</span>

                                    			</div>

												<br/>

                                    			<div class=""form_field"">
													<label for=""Indirizzo"">" + ApplicationCommon.CNV( "Indirizzo" ) + @"</label>

													<input type=""hidden"" class=""txt100 required " + IIF(!string.IsNullOrEmpty(strLabelErrIndiriz),"InputError","") + @""" id=""Indirizzo"" " + readOnlyFields + @" name=""Indirizzo"" value=""" + HtmlEncode(session["form_reg_indiriz"]) + @"""/>
													<span class=""form_readonly_field"">" + HtmlEncode( session["form_reg_indiriz"] )+ @"</span>
													" + strLabelErrIndiriz + @"
												</div>


                                    			<div class=""form_field"">
													<label for=""Citta"">" + ApplicationCommon.CNV( "Località" ) + @"</label>

													<input type=""hidden"" class=""txt required " + IIF(!string.IsNullOrEmpty(strLabelErrIndiriz),"InputError","")+ @""" " + editLocalita + @"  id=""Citta"" name=""Citta"" value=""" + HtmlEncode(session["form_reg_citta"])+ @"""/>

													<span class=""form_readonly_field"">" + HtmlEncode( session["form_reg_citta"] ) + @"</span>

													" + strLabelErrCitta + @"

													<input type=""hidden"" name=""aziLocalitaLeg2"" value=""" + HtmlEncode(session["form_reg_localita_leg"]) + @"""/>

		");
		if (CStr(session["form_reg_cstato"]) == "M-1-11-ITA" && aziendaGiaCensita == false ){
			htmlToReturn.Write($@"
														<button class=""button"" name=""comando"" type=""submit"" value=""sel-sede-legale"" alt=""Seleziona la localit&agrave; della sede legale"" onclick=""document.getElementById('loading').style.display = 'block'"">
															" + ApplicationCommon.CNV( "Selezionare località sede legale" ) + @"
														</button>
		");
		}
		htmlToReturn.Write($@"

												</div>

                                    			<div class=""form_field"">
													<label for=""Provincia"">" + ApplicationCommon.CNV( "Provincia" )+ @"</label>

													<input type=""hidden"" class=""txt required " + IIF(!string.IsNullOrEmpty(strLabelErrProvincia),"InputError","") + @""" " + editProv + @" id=""Provincia"" name=""Provincia"" value=""" + HtmlEncode(session["form_reg_provincia"]) + @"""/>
													" + strLabelErrProvincia+ @"

													<span class=""form_readonly_field"">" + HtmlEncode( session["form_reg_provincia"] ) + @"</span>

													<input type=""hidden"" name=""aziProvinciaLeg2"" value=""" + HtmlEncode(session["form_reg_provincia_leg"])+ @"""/>

												</div>										

                                    			<div class=""form_field"">
													<label for=""cap"">" + ApplicationCommon.CNV( "C.A.P." ) + @"</label>

													<input type=""hidden"" class=""txt required " + IIF(!string.IsNullOrEmpty(strLabelErrCap),"InputError","") + @""" id=""cap"" " + readOnlyFields + @" name=""cap"" value="""+ HtmlEncode(session["form_reg_cap"]) + @"""/>

													<span class=""form_readonly_field"">" + HtmlEncode( session["form_reg_cap"] ) + @"</span>

													" + strLabelErrCap + @"

												</div>

		");

		string strHelpTelFax = ApplicationCommon.CNV( "Campi Tel Fax" );
		if (!string.IsNullOrEmpty(strHelpTelFax)) {
			htmlToReturn.Write($@"

													<div>
		");
			if( aziendaGiaCensita == false ){
				htmlToReturn.Write(strHelpTelFax);
			}
			htmlToReturn.Write($@"
													</div>
		");										
		}

		htmlToReturn.Write($@"

												<div class=""form_field"">

													<label for=""Telefono"" class=""labelsx"">" + ApplicationCommon.CNV( "Telefono" ) + @"</label>

													<input type=""hidden"" class=""txt required " + IIF(!string.IsNullOrEmpty(strLabelErrTelefon),"InputError","") + @""" id=""Telefono"" " + readOnlyFields + @" name=""Telefono"" value=""" + HtmlEncode(session["form_reg_telefono"]) + @"""/>

													<span class=""form_readonly_field"">" + HtmlEncode( session["form_reg_telefono"] ) + @"</span>

													" + strLabelErrTelefon + @"

												</div>

												<div class=""form_field"">

													<label for=""NumeroFax"" class=""labelsx""> " + ApplicationCommon.CNV( "Fax" ) + @"</label>

													<input type=""hidden"" class=""txt required " + IIF(!string.IsNullOrEmpty(strLabelErrFax),"InputError","") + @""" id=""NumeroFax"" " + readOnlyFields + @" name=""NumeroFax"" value=""" + HtmlEncode(session["form_reg_numfax"]) + @"""/>

													<span class=""form_readonly_field"">" + HtmlEncode( session["form_reg_numfax"] ) + @"</span>

													" + strLabelErrFax + @"

												</div>


												<div class=""form_field"">

													<label for=""EMail"" class=""labelsx""> " + ApplicationCommon.CNV( "Email_registrazione" ) + @"</label>

													<input type=""hidden"" class=""txt100 email required " + IIF(!string.IsNullOrEmpty(strLabelErrEmail),"InputError","") + @""" id=""EMail"" " + readOnlyFields + @" name=""EMail"" value=""" + HtmlEncode(session["form_reg_email"]) + @"""/>

													<span class=""form_readonly_field"">" + HtmlEncode( session["form_reg_email"] ) + @"</span>

													" + strLabelErrEmail + @"

												</div>

        ");										
		visualizzaErrore();
		htmlToReturn.Write($@"						

										</div>

									</div>


									<input type=""hidden"" name=""step"" value=""2""/>


		");
		drawCampiHidden();
		htmlToReturn.Write($@"

									<input type=""submit"" class=""focusthis btn_forward"" name=""comando"" value=""Continua"" onclick=""document.getElementById('loading').style.display = 'block'""/>
									<input type=""submit"" class=""btn_back"" name=""comando"" value=""Indietro"" onclick=""document.getElementById('loading').style.display = 'block'""/>

								</fieldset>
							</form>

						</div>
						</div>

					</div>
				</div>

			</div>

		</div>




		");	

	}

	void drawStep3(){

		session["last_step"] = "3";

		jsFocus();

		htmlToReturn.Write($@"

		<script type=""text/javascript"">
		function Upper_First_Letter( strValue )
			{{

				return strValue.replace(/\w+/g, function(word) {{
					return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
				}});

			}}
		</script>

		<div id=""main_registrazione"" class=""main_registrazione"">
			<div id=""shadow"">

				<div id=""middle"">
					<div id=""colcontainer"">

						<div id=""colcx"" class=""large"">

							" + ApplicationCommon.CNV( "Per registrarsi") + @"

		");	
		drawSteps(3);
		htmlToReturn.Write($@"					

						<div class=""data_form"">
							<form  name=""FormCens"" id=""FormCens"" action="""" method=""post"">
								<fieldset>
									<div id=""accordion"">
										<h3 class=""toggler atStart"" id=""h3rapleg""><span>3</span><span class=""data_form_title"">" + ApplicationCommon.CNV("Dati utente") + @"</span></h3>

											<div class=""element atStart"" id=""foglio2"">
												<fieldset>
													<div class=""form_field"">

														<label for=""NomeRapLeg"">*" + ApplicationCommon.CNV("Nome") + @"</label> 

														<input type=""text"" class=""focusthis txt required " + IIF(!string.IsNullOrEmpty(strLabelErrNomeRapLeg), "InputError", "") + @""" id=""NomeRapLeg"" name=""NomeRapLeg"" onchange=""javascript: this.value = Upper_First_Letter ( this.value );"" value=""" + HtmlEncode(session["form_reg_NomeRapLeg"]) + @"""/>
														" + strLabelErrNomeRapLeg + @"

													</div>
													<div class=""form_field"">

														<label for=""CognomeRapLeg"">*" + ApplicationCommon.CNV("Cognome") + @"</label> 

														<input type=""text"" class="" txt required " + IIF(!string.IsNullOrEmpty(strLabelErrCognomeRapLeg), "InputError", "") + @""" id=""CognomeRapLeg"" name=""CognomeRapLeg"" onchange=""javascript: this.value = Upper_First_Letter ( this.value );"" value=""" + HtmlEncode(session["form_reg_CognomeRapLeg"]) + @"""/>
														" + strLabelErrCognomeRapLeg + @"

													</div>
													<div class=""form_field"">

														<label for=""TelefonoRapLeg"">*" + ApplicationCommon.CNV("Telefono 1") + @"</label> 

														<input type=""text"" class="" txt required " + IIF(!string.IsNullOrEmpty(strLabelErrTelRapLeg), "InputError", "") + @""" id=""TelefonoRapLeg"" name=""TelefonoRapLeg"" value=""" + HtmlEncode(session["form_reg_telrapleg"]) + @"""/>
														" + strLabelErrTelRapLeg + @"

													</div>
													<div class=""form_field"">
														<label for=""CellulareRapLeg"">" + ApplicationCommon.CNV("Telefono 2") + @"</label> 
														<input type=""text"" class="" txt " + IIF(!string.IsNullOrEmpty(strLabelErrCellulareRapLeg), "InputError", "") + @""" id=""CellulareRapLeg"" name=""CellulareRapLeg"" value=""" + HtmlEncode(session["form_reg_celrapleg"]) + @"""/>
														" + strLabelErrCellulareRapLeg + @"
													</div>
													<div class=""form_field"">

														<label for=""EMailRif"">*" + ApplicationCommon.CNV("E_mailRapLeg ") + @"</label> 

														<input type=""text"" class=""txt100 email required " + IIF(!string.IsNullOrEmpty(strLabelErrEmailRif), "InputError", "") + @""" id=""EMailRif"" name=""EMailRif"" value=""" + HtmlEncode(session["form_reg_emailrif"]) + @"""/>
														" + strLabelErrEmailRif + @"

													</div>
													<!--
													<div class=""form_field"">
														<label for=""EMailRiferimentoAzienda""> " + ApplicationCommon.CNV("Email Riferimento Azienda") + @"</label>
													-->

														<input type=""hidden"" class=""txt email " + IIF(!string.IsNullOrEmpty(strLabelErrEmailRifAzi), "InputError", "") + @""" id=""EMailRiferimentoAzienda"" name=""EMailRiferimentoAzienda"" value=""" + HtmlEncode(session["form_reg_emailrifazi"]) + @"""/>
													<!--											
													" + strLabelErrEmailRifAzi + @"
													</div>
													-->
													<div class=""form_field"">

														<label for=""funzione_aziendale"">*" + ApplicationCommon.CNV("Funzione Aziendale") + @"</label> 

		");
		//'ruoli lato procurement
		TSRecordSet rs = GetRS("select dmv_descml,dmv_cod,dmv_sort from lib_domainvalues where dmv_dm_id = 'pfuRuoloAziendale' and isnull(dmv_deleted,0) = 0 and dmv_father like '%P%' order by dmv_sort asc");
		dynamic selected = session["form_reg_funzazi"];
		rs.MoveFirst();
		htmlToReturn.Write($@"
															<select id=""funzione_aziendale"" name=""funzione_aziendale"" class=""txt required " + IIF(!string.IsNullOrEmpty(strLabelErrFunzAzi),"InputError","")+ @""">
																<option value=""0"">" + ApplicationCommon.CNV( "Scegli Qualifica" ) + @"</option>
		");
		while (! rs.EOF) {

			if( CStr(selected) == CStr(rs.Fields["dmv_cod"]) ){
				htmlToReturn.Write(@"<option value=""" + rs.Fields["dmv_cod"] + @""" selected=""selected"">"); 
			}else{
				htmlToReturn.Write(@"<option value=""" + rs.Fields["dmv_cod"] + @""">"); 
			}
			htmlToReturn.Write(rs.Fields["dmv_descml"] + "</option>"); 

			rs.MoveNext();
		}
		//set rs=nothing
		htmlToReturn.Write($@"
															</select>

															" + strLabelErrFunzAzi+ @"

													</div>
													<div class=""form_field"">

														<label for=""cfRapLeg"">*" + ApplicationCommon.CNV( "Codice fiscale" ) + @"</label>

														<input type=""text"" class="" txt required " + IIF(!string.IsNullOrEmpty(strLabelErrCfRapLegM),"InputError","") + " " + IIF(!string.IsNullOrEmpty(strLabelWarningCfRapLegM),"InputWarning","") + @""" id=""cfRapLeg"" onchange=""onchange_cfRapLeg()"" name=""cfRapLeg"" value=""" + HtmlEncode(session["form_reg_cfRapLeg"]) + @"""/>

														" + strLabelErrCfRapLegM + @"											
														" + strLabelWarningCfRapLegM + @"

													</div>											

		");
		drawCampiHidden();
		visualizzaErrore();
		htmlToReturn.Write($@"										

													<input type=""hidden"" name=""step"" value=""3""/>

													<input type=""submit"" class=""btn_forward"" name=""comando"" value=""Continua"" onclick=""document.getElementById('loading').style.display = 'block'""/>
													<input type=""submit"" class=""btn_back"" name=""comando"" value=""Indietro"" onclick=""document.getElementById('loading').style.display = 'block'""/>


												</fieldset>
											</div>

									</div>

								</fieldset>
							</form>
						</div>
						</div>

					</div>
				</div>

			</div>

		</div>									

		");
	}

	void drawStep4(){

		session["last_step"] = "4";

		jsFocus();

		htmlToReturn.Write($@"	
		<div id=""main_registrazione"" class=""main_registrazione"">
			<div id=""shadow"">

				<div id=""middle"">
					<div id=""colcontainer"">

						<div id=""colcx"" class=""large"">

							" + ApplicationCommon.CNV( "Per registrarsi") + @"

		");
		drawSteps(4);
		htmlToReturn.Write($@"					

						<div class=""data_form"">
							<form name=""FormCens"" id=""FormCens"" action="""" method=""post"" onsubmit="" if ( document.getElementById('block_submit').value == 'block') return false; else {{ document.getElementById('block_submit').value = 'block';return true;}}"">
								<div id=""accordion"">
									<h3 class=""toggler atStart""><span>4</span><span class=""data_form_title"">" + ApplicationCommon.CNV( "Trattamento dati personali" ) + @"</span></h3>
									<div class=""element atStart"" >
										<fieldset>
											<div>" + ApplicationCommon.CNV( "Il sottoscritto dichiara" ) + @"</div>
											" + ApplicationCommon.CNV("Informativa sul trattamento dei dati personali") + @"
											" + ApplicationCommon.CNV( "La non accettazione" ) + @"

											<div>



												<label class=""radio"" for=""privacyagreeAccetto"">
													" + ApplicationCommon.CNV( "Accetto" ) + @" 
												</label>


		");
		if (session["form_reg_privacyagree"] == "si"){
			privacyagree_si = @" checked=""checked""";
			privacyagree_no = @"";
		}else{
			privacyagree_no = @" checked=""checked""";
			privacyagree_si = @"";
		}
		htmlToReturn.Write($@"

												<input type=""radio"" id=""privacyagreeAccetto"" name=""privacyagree"" value=""si"" class=""focusthis rb req"" " + privacyagree_si + @"/>

												<label class=""radio"" for=""privacyagreeNonAccetto"">" + ApplicationCommon.CNV( "Non Accetto" ) + @"</label>
												<input type=""radio"" id=""privacyagreeNonAccetto"" name=""privacyagree"" value=""no"" class=""radio rb"" " + privacyagree_no + @"/>

												" + strLabelErrAgree + @"

											</div>

											<div>

												<label class=""labelancora change_captcha"" style=""cursor: pointer;cursor: hand;"" onclick=""document.getElementById('div_captcha').innerHTML = getAccessCaptcha();"">
													Cambia codice di controllo
												</label>

												<div class=""div_captcha"" id=""div_captcha"">

		");
		string output =  generaCaptchaAccessibile( "captcha_access_totale", "captcha_field_name", "captcha_access_tot_formato", session );
		htmlToReturn.Write($@"

													<span class=""labelsx"">
														<span class=""label_captcha_access"" style="""">
															<strong>Anti-spam<span id=""captcha_access"">" + output + @"</span></strong>
														</span>
													</label>

													<input class=""required " + IIF(!string.IsNullOrEmpty(strLabelErrCaptcha),"InputError","") + @""" name=""" + session["captcha_field_name"] + @""" size=""10"" value="""" maxlength=""20""/>

													<span>
														( Scrivere il risultato in 
		");
		if (session["captcha_access_tot_formato"] == 1){
			htmlToReturn.Write("cifre");
		}else{
			htmlToReturn.Write("lettere");
		}
		htmlToReturn.Write($@"
														)
													</span>


												</div>

												" + strLabelErrCaptcha + $@"

												<noscript>
													<p class=""help"">Ricaricare la pagina per cambiare il codice di controllo</p>
												</noscript>

												<script type=""text/javascript"">
													function getAccessCaptcha()
													{{
														var ajax = GetXMLHttpRequest();

														if(ajax)
														{{
															var nocache = new Date().getTime();

															try
															{{
																ajax.open(""GET"", '" + ApplicationCommon.Application["WEBSERVERAPPLICAZIONE"] + ApplicationCommon.Application["strVirtualDirectory"] + $@"/ctl_library/getAccessCaptcha.asp?nocache=' + nocache , false);
																ajax.send(null);
															}}
															catch(e)
															{{
																alert('Errore di accesso alla pagina. Il problema non si presenta in produzione');
																return;
															}}

															if(ajax.readyState == 4) 
															{{
																if(ajax.status == 200 )
																{{
																	//alert(ajax.responseText);
																	return ajax.responseText;
																}}
															}}			
														}}
													}}

													function GetXMLHttpRequest() {{
														var
															XHR = null,
															browserUtente = navigator.userAgent.toUpperCase();

														if(typeof(XMLHttpRequest) === ""function"" || typeof(XMLHttpRequest) === ""object"")
															XHR = new XMLHttpRequest();
															else if(window.ActiveXObject && browserUtente.indexOf(""MSIE 4"") < 0) {{
																if(browserUtente.indexOf(""MSIE 5"") < 0)
																	XHR = new ActiveXObject(""Msxml2.XMLHTTP"");
																else
																	XHR = new ActiveXObject(""Microsoft.XMLHTTP"");
															}}
															return XHR;
													}};
												</script>

												<!--
												<span class=""labelsx"">
													<img id=""captcha"" src=""/" + ApplicationCommon.Application["NOMEAPPPORTALE_JOOMLA"] + $@"/securimage/securimage_show.php"" alt=""CAPTCHA Image"" />
													<noscript>
														<p class=""help"">Ricaricare la pagina per cambiare il captcha</p>
													</noscript>
													<a href=""#"" onclick=""document.getElementById('captcha').src = '/" + ApplicationCommon.Application["NOMEAPPPORTALE_JOOMLA"] + $@"/securimage/securimage_show.php?' + Math.random(); return false"">
														" + ApplicationCommon.CNV( "Cambia Immagine") + $@"
													</a>
												</span>

												<label for=""captchacode"" class=""labelsx"">
													" + ApplicationCommon.CNV("Riporta codice alfanumerico") + $@"
												</label>
												<input class=""txt required " + IIF(!string.IsNullOrEmpty(strLabelErrCaptcha),"InputError","") + @""" name=""captchacode"" type=""text"" id=""captchacode"" size=""10"" maxlength=""10"" value=""""/>
												-->

		");
		visualizzaErrore();
		drawCampiHidden();
		htmlToReturn.Write($@"

												<input type=""hidden"" name=""step"" value=""4""/>

											</div> 

											<div>
												<input type=""submit"" class=""btn_forward"" id=""btn_frm_complete"" name=""comando"" value=""Continua"" onclick=""document.getElementById('loading').style.display = 'block'""/>
												<input type=""submit"" class=""btn_back"" name=""comando"" value=""Indietro"" onclick=""document.getElementById('loading').style.display = 'block'""/>
												<input type=""hidden"" id=""block_submit"" name=""block_submit"" value=""""/>
											</div>

										</fieldset>
									</div>

								</div>
							</form>
						</div>
						</div>

					</div>
				</div>

			</div>

		</div>								

		");
	}


	void visualizzaErrore() {

		string errore = HtmlEncode(GetParamURL(Request.QueryString.ToString(), "errorecampo"));

		if (string.IsNullOrEmpty(errore)){
			errore = CStr(session["errore_campo"]);
			session["errore_campo"] = "";
		}

		if (!string.IsNullOrEmpty(errore)){
			htmlToReturn.Write($@"<div class=""error"" id=""messaggio_errore"" >");
			htmlToReturn.Write($@"<strong>" + ApplicationCommon.CNV("Attenzione") + ": </strong>" + errore);
			htmlToReturn.Write($@"</div>");
		}
	}

	void visualizzaInfo(){

		string info = CStr(session["msg_info"]);
		session["msg_info"] = "";


		if (!string.IsNullOrEmpty(info)){
			htmlToReturn.Write($@"<div class=""error"">");
			htmlToReturn.Write($@"<strong>" + ApplicationCommon.CNV( "Attenzione") + ": </strong>" + info );
			htmlToReturn.Write($@"</div>");
		}
	}

	void drawCampiHidden() {
		segnalaErrore();
	}

	void segnalaErrore(){

		if (!string.IsNullOrEmpty(session["err_validazione_registrazione"]) && string.IsNullOrEmpty(CStr(session["errore_campo"])) ){
			htmlToReturn.Write($@"

				<div id=""texterror"">
					<p>
						<strong>" + ApplicationCommon.CNV("Attenzione:") + $@"</strong>
						<span>" + ApplicationCommon.CNV( "I campi evidenziati non sono stati compilati correttamente!") + $@"</span>
					</p>
				</div>

			");
		}

	}

	bool TestCaptcha(string valSession, string valCaptcha) {

		string tmpSession;

		valSession = valSession.Trim();
		valCaptcha = valCaptcha.Trim();
		if (string.IsNullOrEmpty(valSession) || string.IsNullOrEmpty(valCaptcha) ) {
			return false;
		}else{
			tmpSession = valSession;
			valSession = Trim(session[valSession]);
			session[tmpSession] = "";
			if (string.IsNullOrEmpty(valSession)) {
				return false;
			}else{
				valCaptcha = valCaptcha.Replace("i", "I");
				if (Strings.StrComp(valSession,valCaptcha,Microsoft.VisualBasic.CompareMethod.Text) == 0 ) {
					return true;
				}else{
					return false;
				}
			}		
		}

	}

	//'-- funzione di censimento per il solo utente.caso d'uso : azienda gi� censita
	void censimentoUtente(){

		string docID = CStr(session["SESSION_WORK_KEY"]);

		//'-- elimino eventuali record gia presenti per il session.id attuale
		string strSql = "delete from FormRegistrazione where sessionid = '" + docID.Replace("'", "''") + "'";
		ExecSQL(strSql);

		//'-- inserisco i dati dell'utente nella tabella 'FormRegistrazione'
		insertCampoReg("cfRapLeg", CStr(session["form_reg_cfRapLeg"]) );
		insertCampoReg("funzAzi", CStr(session["form_reg_funzazi"]) );
		insertCampoReg("emailRifAzi", CStr(session["form_reg_emailrifazi"]) );
		insertCampoReg("emailRif", CStr(session["form_reg_emailrif"]) );
		insertCampoReg("celRapLeg", CStr(session["form_reg_celrapleg"]) );
		insertCampoReg("telRapLeg", CStr(session["form_reg_telrapleg"]) );
		insertCampoReg("cognomeRapLeg", CStr(session["form_reg_CognomeRapLeg"]) );
		insertCampoReg("nomeRapLeg", CStr(session["form_reg_NomeRapLeg"]));

		censusOfCompany("");

	}

	int censusOfCompany(dynamic IdMp){

		int intToReturn;

		string docID = CStr(session["SESSION_WORK_KEY"]);
		int IDAZI = CInt(session["ID_AZI"]);

		//'-- chiamo la stored per la creazione dell'utente, in output otterremo un recordset con l'idpfu dell'utente generato
		string strSql = "declare @idpfu INT " + Environment.NewLine;
		strSql = strSql + "exec creaUtenteDaRegistrazione '" + docID.Replace("'","''") + "'," + CStr(IDAZI) + ",'PROFILI_BASE','Ente',@idPfu output, 1" + Environment.NewLine;
		strSql = strSql + "select @idpfu as idpfu ";

		TSRecordSet rs = null;
		int idPfu;
		try{
			rs = GetRS(strSql);
			rs.MoveFirst();
			idPfu = -1;
			idPfu = CInt(rs.Fields["idpfu"]);
		}
		catch
		{
			idPfu = -1;
		}
		//set rs = nothing

		int CodeRit = 1;
		intToReturn = idPfu;

		//on error resume next

		string strDescErrore = "";
		//Set objProc = CreateObject("CtlProcess.clsElab")
		ClsElab objProc;

		//'--se tutto ok inserisco attivit� per il cambio pwd al primo login
		if( CodeRit == 1 && idPfu > 0){

			//'-- se � presente il parametro per disattivare l'inserimento dell'attivit� di cambio password obbligatoria
			string disattivaCambioPassword = CStr(Get_Func_Property("CENSIMENTO", "CHANGEPWD", "DISABLE", "0", -1));

			if (disattivaCambioPassword == "0" ){

				strDescErrore = "";
				objProc = new ClsElab();
				try{
					objProc.Elaborate("CHANGEPWD", "CENSIMENTO", CLng(IDAZI), CLng(idPfu), ref strDescErrore, 1, ApplicationCommon.Application.ConnectionString);
				}
				catch(Exception ex)
				{
					string strErrore = " Errore CENSIMENTO,CHANGEPWD " + ex.Message + " - " + strDescErrore;
					MyErrore("", "", strErrore);
				}
				if (!string.IsNullOrEmpty(strDescErrore))
				{
					string strErrore = " Errore CENSIMENTO,CHANGEPWD - " + strDescErrore;
					MyErrore("", "", strErrore);
				}


			}

		}else{

			MyErrore("","","Errore nella generazione dell'utente");

		}

		//'-- Mando l'email all'utente con le credenziali per segnalare l'avvenuto censimento + un alert all'azienda associata
		//'-- per segnalare il nuovo utente. senza credenziali
		string processoMail = CStr("SEND_MAIL_NEW_USER");
		long idProcessDoc = CLng(idPfu);

		strDescErrore = "";
		objProc = new ClsElab();
		try{
			objProc.Elaborate(processoMail, "CENSIMENTO", idProcessDoc, CLng(idPfu), ref strDescErrore, 1, ApplicationCommon.Application.ConnectionString);
		}catch(Exception ex){
			string strErrore = " Errore CENSIMENTO,SEND_MAIL " + ex.Message + "-" + strDescErrore;
			MyErrore("", "", strErrore);
		}


		if (!string.IsNullOrEmpty(strDescErrore)){

			string strErrore = " Errore CENSIMENTO,SEND_MAIL -" + strDescErrore + ":";
			MyErrore("", "", strErrore);

		}

		fineRegistrazione();

		return intToReturn;

	}

	void avanzaRegistrazione(string comando, bool erroreValidazione, string strStep){


		if (string.IsNullOrEmpty(comando) || comando.ToLower() == "continua"){

			//'-- se non ci sono errori di validazione per lo step da cui si proviene passo al successivo
			if (erroreValidazione == false ){

				session["err_validazione_registrazione"] = "";

				switch (strStep){
					case "":
						drawStep1();
						break;
					case "0":
						drawStep1();
						break;
					case "1":
						drawStep2();
						break;
					case "2":
						drawStep3();
						break;
					case "3":
						drawStep4();
						break;
					case "4":			
						censimentoUtente();
						break;
					case "5":
						visualizzaInfo();
						break;
					default:
						drawStep1();
						break;
				}

			}else{

				session["err_validazione_registrazione"] = "Errore";

				switch (strStep) {
					case "":
						drawStep1();
						break;
					case "1":
						drawStep1();
						break;
					case "2":
						drawStep2();
						break;
					case "3":
						drawStep3();
						break;
					case "4":
						drawStep4();
						break;
					default:
						drawStep1();
						break;
				}

			}	
		}

	}

	void MyErrore(string strNumErrore, string strPercorso, string strTipoErrore){

		//on error resume next

		if (string.IsNullOrEmpty(strNumErrore)){
			strNumErrore = "0";
		}

		string strMsgErr = "registrazione_er.asp [Description:" + strTipoErrore + "][Code:" + strNumErrore + "][Source:" + strPercorso + "]";

		//'-- Scriviamo l'errore nell'event viewer
		TraceErr("registrazione_er.asp", strMsgErr, strNumErrore, "asp");

		//'-- se la sys indica di non mostrare gli errori tecnici a video
		if (CStr(ApplicationCommon.Application["dettaglio-errori"]).ToLower() != "yes" && CStr(ApplicationCommon.Application["dettaglio-errori"]).ToLower() != "si" ) {
			strMsgErr = ApplicationCommon.CNV("INFO_UTENTE_ERRORE_PROCESSO") + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
		}

		session["errore_campo"] = CStr(strMsgErr);
		avanzaRegistrazione("", true, session["last_step"]);

		throw new ResponseEndException(htmlToReturn.Out(), Response, "MyErrore");

	}

	void TraceErr(string source, string text, string tipo, string _object){

		//codice che fa il create object di codice obsoleto
		throw new NotImplementedException(@"TraceErr: codice che fa il create object di codice obsoleto (""AFLLogSrvc.logSrvc"")");
		//set l = CreateObject("AFLLogSrvc.logSrvc")

		//If Not (l Is Nothing) Then
		//	l.LogNTEvent CStr(text), CStr(object), CStr(source), CInt(1), CLng(0)
		//}

		//Set l = Nothing

	}	

	void insertCampoReg(string nomeCampo, string valore){

		string strSql = "INSERT INTO FormRegistrazione ";
		strSql = strSql + @" (sessionid ";
		strSql = strSql + @" , codice_fiscale ";
		strSql = strSql + @" , nome_campo ";
		strSql = strSql + @" , sessionidasp , valore ) VALUES ";
		strSql = strSql + @" ('" + CStr(session["SESSION_WORK_KEY"]).Replace("'","''") + "'";
		strSql = strSql + @" ,'" + CStr(session["form_reg_cf"]).Replace("'","''") + "'";
		strSql = strSql + @" ,'" + CStr(nomeCampo).Replace("'","''") + "'";
		strSql = strSql + @" ,'" + CStr(session.SessionID).Replace("'","''") + "'";

		//on error resume next

		if (!string.IsNullOrEmpty(valore)){
			strSql = strSql + " ,'" + CStr(valore).Replace("'","''") + "')";
		}else{
			strSql = strSql + " ,'')";
		}

		//on error goto 0


		ExecSQL(strSql);	

	}

	void fineRegistrazione(){


		htmlToReturn.Write($@"

		<script type=""text/javascript"">
			function printDiv(divName) 
			{{
				var printContents = document.getElementById(divName).innerHTML;
				var originalContents = document.body.innerHTML;

				document.body.innerHTML = printContents;
				window.print();
				document.body.innerHTML = originalContents;
			}}
			</script>

			<div id=""main_registrazione"" class=""main_registrazione"">

		");
		drawSteps(6);
		htmlToReturn.Write($@"

				<a style=""cursor:pointer"" onclick=""javascript:printDiv('testata');""> 
					<img alt=""stampa"" title=""Stampa"" src=""/" + ApplicationCommon.Application["NOMEAPPPORTALE_JOOMLA"] + @"/images/printer.gif""/>
				</a>

				<div class=""infoview"">
	   			<div id=""testata"">

						<div class=""note"">

							" + ApplicationCommon.CNV("segnala_censimento_riuscito") + $@"

						</div>

						<table id=""ContainerForm"">
							<tr>
								<td colspan=""2"" class=""infodesc"">
									<strong>" + ApplicationCommon.CNV("Riepilogo Dati Censiti") + $@"</strong>
								</td>	
							</tr>	

							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Denominazione Ente") + $@"
								</td>
								<td>
									" + HtmlEncode(session["form_reg_ragsoc"]) + $@"
								</td>
							</tr>

							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Natura giuridica") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_natgiu"]) + $@"
								</td>
							</tr>

							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Indirizzo") + $@"&nbsp;
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_indiriz"]) + $@"	
								</td>
							</tr>

							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Località") + $@"

								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_citta"]) + $@"
								</td>
							</tr>
							<tr>	
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Provincia") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_provincia"]) + $@"
								</td>
							</tr>
							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("C.A.P.") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_cap"]) + $@"
								</td>
							</tr>

							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Codice Fiscale Ditta") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_cf"]) + $@"
								</td>
							</tr>
							<tr>	
								<td class=""titlesgrid descgrid"">	
									" + ApplicationCommon.CNV("Partita IVA") + $@"
								</td>
								<td class=""fieldInput"">	
									" + HtmlEncode(session["form_reg_piva"]) + $@"
								</td>
							</tr>
							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Telefono") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_telefono"]) + $@"
								</td>
							</tr>
							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Fax") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_numfax"]) + $@"
								</td>
							</tr>	
							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Email") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_email"]) + $@"
								</td>
							</tr>

						</table>

						<table>

							<tr>
								<td colspan=""2"" class=""infodesc"">
									<strong>" + ApplicationCommon.CNV("Informazioni utente") + $@"</strong>
								</td>	
							</tr>			
							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Nome") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_NomeRapLeg"] ) + $@"
								</td>
							</tr>
							<tr>
								<td class=""titlesgrid descgrid"">		
									" + ApplicationCommon.CNV("Cognome") + $@"
								</td>
								<td class=""fieldInput"">	
									" + HtmlEncode(session["form_reg_CognomeRapLeg"] ) + $@"
								</td>
							</tr>
							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Telefono 1") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_telrapleg"] ) + $@"
								</td>
							</tr>
							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Telefono 2") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_celrapleg"] ) + $@"
								</td>
							</tr>
							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("E_mail") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_emailrif"] ) + $@"
								</td>
							</tr>
							<!--
							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Email Riferimento Azienda") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_emailrifazi"] ) + $@"
								</td>
							</tr>	
							-->
							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Funzione Aziendale") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_funzazi"] ) + $@"
								</td>
							</tr>
							<tr>
								<td class=""titlesgrid descgrid"">
									" + ApplicationCommon.CNV("Codice Fiscale") + $@"
								</td>
								<td class=""fieldInput"">
									" + HtmlEncode(session["form_reg_cfRapLeg"]) + $@"
								</td>
							</tr>

						</table>

					</div>
				</div>
			</div>	  

			");	

		pulisciSessione();

	}

	bool isNumber(dynamic x){

		return IsNumeric(x);

	}

	int generaDocumentoApprovazione(int id){

		string strSql = @"declare @id int " + Environment.NewLine;
		strSql = strSql + @" set @id = " + id + Environment.NewLine;
		strSql = strSql + @" exec CREA_DOC_VERIFICA_REGISTRAZIONE @id, @id ";

		//dim outRs
		TSRecordSet outRs = GetRS( strSql );
		outRs.MoveFirst();

		if (string.IsNullOrEmpty(CStr(outRs.Fields["Errore"]))) {
			return CInt(outRs.Fields["id"]);
		} else {
			return -1;
		}

		//set outRs = nothing

	}

	//'-- ritorna un rs passata la query
	TSRecordSet GetRS( string strSql )
	{
		CommonDbFunctions cdf = new CommonDbFunctions();
		return cdf.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString);
		//dim obj
		//dim rs

		//set obj = server.CreateObject("ctldb.clsTabManage")
		//set rs = obj.GetRSReadFromQuery( cstr(strSql ) , cstr(session("Session")(8)) )
		//set obj = nothing

		//set GetRS = rs

	}

	//'-- ritorna un rs passata la query
	void ExecSQL( string strSql ){

		//on error resume next

		//dim obj
		//dim rs

		//set obj = server.CreateObject("ctldb.clsTabManage")

		_TabManage.ExecSql(strSql, ApplicationCommon.Application.ConnectionString);
		//call obj.ExecSql ( cstr(strSql ) , cstr(session("Session")(8)) )

		//set obj = nothing

	}

	void drawSteps(int stepCorrente){

		if (IsMasterPageNew())
		{
			drawStepsFaseII(stepCorrente);
			return;
		}

		int currentStep = CInt(stepCorrente);

		htmlToReturn.Write($@"<ul class=""wizard ");

		//'-- se � stato attivato il passo extra di firma
		if (!string.IsNullOrEmpty(session["attiva_step_firma"])) {
			htmlToReturn.Write($@"steps_6");
		} else {
			htmlToReturn.Write($@"steps_5");
		}

		htmlToReturn.Write($@""">");

		htmlToReturn.Write($@"<li class=""step stepA ");

		if (currentStep > 1 ) {
			htmlToReturn.Write($@" stepFatto");
		} else if (currentStep == 1 ) {
			htmlToReturn.Write($@" stepCorrente");
		} else if (currentStep < 1 ) {
			htmlToReturn.Write($@" stepDaFare");			
		}

		htmlToReturn.Write($@""">");
		htmlToReturn.Write( ApplicationCommon.CNV( "reg_ente_step_1" ) + @"<span>Step 1</span>");
		htmlToReturn.Write($@"</li>");

		htmlToReturn.Write($@"<li class=""step stepB ");

		if (currentStep > 2 ) {
			htmlToReturn.Write($@" stepFatto");
		} else if (currentStep == 2 ) {
			htmlToReturn.Write($@" stepCorrente");
		} else if (currentStep < 2 ) {
			htmlToReturn.Write($@" stepDaFare");			
		}

		htmlToReturn.Write($@""">");
		htmlToReturn.Write(ApplicationCommon.CNV("reg_ente_step_2") + "<span>Step 2</span>");
		htmlToReturn.Write($@"</li>");

		htmlToReturn.Write($@"<li class=""step stepC ");

		if (currentStep > 3 ) {
			htmlToReturn.Write($@" stepFatto");
		} else if (currentStep == 3 ) {
			htmlToReturn.Write($@" stepCorrente");
		} else if (currentStep < 3 ) {
			htmlToReturn.Write($@" stepDaFare");			
		}

		htmlToReturn.Write($@""">");
		htmlToReturn.Write(ApplicationCommon.CNV("reg_step_3") + "<span>Step 3</span>");

		htmlToReturn.Write($@"</li>");

		htmlToReturn.Write($@"<li class=""step stepD ");

		if (currentStep > 4 ) {
			htmlToReturn.Write($@" stepFatto");
		} else if (currentStep == 4 ) {
			htmlToReturn.Write($@" stepCorrente");
		} else if (currentStep < 4 ) {
			htmlToReturn.Write($@" stepDaFare");			
		}

		htmlToReturn.Write($@""">");
		htmlToReturn.Write(ApplicationCommon.CNV("reg_step_4") + "<span>Step 4</span>");
		htmlToReturn.Write($@"</li>");

		htmlToReturn.Write($@"<li class=""step stepE ");

		if (currentStep > 5 ) {
			htmlToReturn.Write($@" stepFatto");
		} else if (currentStep == 5 ) {
			htmlToReturn.Write($@" stepCorrente");
		} else if (currentStep < 5 ) {
			htmlToReturn.Write($@" stepDaFare");
		}

		htmlToReturn.Write($@""">");

		//'-- se � stato attivato il passo extra di firma
		if (!string.IsNullOrEmpty(session["attiva_step_firma"]) ) {
			htmlToReturn.Write( ApplicationCommon.CNV( "reg_step_5" ) + @"<span>Step 5</span>");
		} else {
			htmlToReturn.Write( ApplicationCommon.CNV( "reg_step_6" ) + @"<span>Step 5</span>");
		}		

		htmlToReturn.Write($@"</li>");	

		if (!string.IsNullOrEmpty(session["attiva_step_firma"]) ) {

			htmlToReturn.Write($@"<li class=""step stepF ");

			if (currentStep > 6 ) {
				htmlToReturn.Write($@" stepFatto");
			} else if (currentStep == 6 ) {
				htmlToReturn.Write($@" stepCorrente");
			} else if (currentStep < 6 ) {
				htmlToReturn.Write($@" stepDaFare");
			}

			htmlToReturn.Write($@""">");

			//'-- se � stato attivato il passo extra di firma
			if (!string.IsNullOrEmpty(session["attiva_step_firma"]) ) {
				htmlToReturn.Write( ApplicationCommon.CNV( "reg_step_6" ) + @"<span>Step 6</span>");
			} else {
				htmlToReturn.Write( ApplicationCommon.CNV( "reg_step_5" ) + @"<span>Step 5</span>");
			}

			//'response.write CNV( "reg_step_5" ) & "<span>Step 6</span>"
			htmlToReturn.Write($@"</li>");	

		}			

		htmlToReturn.Write($@"</ul>");

	}

	void drawStepsFaseII(dynamic stepCorrente)
    {

        int currentStep = CInt(stepCorrente);

        htmlToReturn.Write($@"<ul class=""wizard ");

        //'-- se � stato attivato il passo extra di firma
        if (!string.IsNullOrEmpty(session["attiva_step_firma"]))
        {
            htmlToReturn.Write($@"steps_6");
        }
        else
        {
            htmlToReturn.Write($@"steps_5");
        }

        htmlToReturn.Write($@""">");

        htmlToReturn.Write($@"<li class=""step stepA ");

        if (currentStep > 1)
        {
            htmlToReturn.Write($@" stepFatto");
        }
        else if (currentStep == 1)
        {
            htmlToReturn.Write($@" stepCorrente");
        }
        else if (currentStep < 1)
        {
            htmlToReturn.Write($@" stepDaFare");
        }

        htmlToReturn.Write($@""">");
        htmlToReturn.Write(@"<span>1</span>" + ApplicationCommon.CNV("reg_step_1"));
        htmlToReturn.Write($@"</li>");

        htmlToReturn.Write($@"<li class=""step stepB ");

        if (currentStep > 2)
        {
            htmlToReturn.Write($@" stepFatto");
        }
        else if (currentStep == 2)
        {
            htmlToReturn.Write($@" stepCorrente");
        }
        else if (currentStep < 2)
        {
            htmlToReturn.Write($@" stepDaFare");
        }

        htmlToReturn.Write($@""">");
        htmlToReturn.Write(@"<span>2</span>" + ApplicationCommon.CNV("reg_step_2"));
        htmlToReturn.Write($@"</li>");

        htmlToReturn.Write($@"<li class=""step stepC ");

        if (currentStep > 3)
        {
            htmlToReturn.Write($@" stepFatto");
        }
        else if (currentStep == 3)
        {
            htmlToReturn.Write($@" stepCorrente");
        }
        else if (currentStep < 3)
        {
            htmlToReturn.Write($@" stepDaFare");
        }

        htmlToReturn.Write($@""">");
        htmlToReturn.Write(@"<span>3</span>" + ApplicationCommon.CNV("reg_step_3"));

        htmlToReturn.Write($@"</li>");

        htmlToReturn.Write($@"<li class=""step stepD ");

        if (currentStep > 4)
        {
            htmlToReturn.Write($@" stepFatto");
        }
        else if (currentStep == 4)
        {
            htmlToReturn.Write($@" stepCorrente");
        }
        else if (currentStep < 4)
        {
            htmlToReturn.Write($@" stepDaFare");
        }

        htmlToReturn.Write($@""">");
        htmlToReturn.Write(@"<span>4</span>" + ApplicationCommon.CNV("reg_step_4"));
        htmlToReturn.Write($@"</li>");

        htmlToReturn.Write($@"<li class=""step stepE ");

        if (currentStep > 5)
        {
            htmlToReturn.Write($@" stepFatto");
        }
        else if (currentStep == 5)
        {
            htmlToReturn.Write($@" stepCorrente");
        }
        else if (currentStep < 5)
        {
            htmlToReturn.Write($@" stepDaFare");
        }

        htmlToReturn.Write($@""">");


        //'-- se � stato attivato il passo extra di firma
        if (!string.IsNullOrEmpty(session["attiva_step_firma"]))
        {
            htmlToReturn.Write(@"<span>5</span>" + ApplicationCommon.CNV("reg_step_5"));
        }
        else
        {
            htmlToReturn.Write(@"<span>5</span>" + ApplicationCommon.CNV("reg_step_6"));
        }

        htmlToReturn.Write($@"</li>");

        if (!string.IsNullOrEmpty(session["attiva_step_firma"]))
        {

            htmlToReturn.Write($@"<li class=""step stepF ");

            if (currentStep > 6)
            {
                htmlToReturn.Write($@" stepFatto");
            }
            else if (currentStep == 6)
            {
                htmlToReturn.Write($@" stepCorrente");
            }
            else if (currentStep < 6)
            {
                htmlToReturn.Write($@" stepDaFare");
            }

            htmlToReturn.Write($@""">");

            //'-- se � stato attivato il passo extra di firma
            if (!string.IsNullOrEmpty(session["attiva_step_firma"]))
            {
                htmlToReturn.Write(@"<span>6</span>" + ApplicationCommon.CNV("reg_step_6"));
            }
            else
            {
                htmlToReturn.Write(@"<span>5</span>" + ApplicationCommon.CNV("reg_step_5"));
            }

            //'response.write CNV( "reg_step_5" ) & "<span>Step 6</span>"
            htmlToReturn.Write($@"</li>");

        }

        htmlToReturn.Write($@"</ul>");

    }

	void ripulisciInfoparix(){

		session["form_reg_ragsoc"] = "";
		session["form_reg_natgiu"] = "";
		session["form_reg_indiriz"] = "";
		session["form_reg_annocostr"] = "";
		session["form_reg_iscrccia"] = "";
		session["form_reg_sedeccia"] = "";
		session["form_reg_email"] = "";
		session["form_reg_telefono"] = "";
		session["form_reg_numfax"] = "";
		session["form_reg_cap"] = "";
		session["form_reg_citta"] = "";
		session["form_reg_provincia"] = "";
		session["form_reg_localita_leg"] = "";
		session["form_reg_provincia_leg"] = "";
		session["form_reg_cfRapLeg"] = "";
		session["form_reg_NomeRapLeg"] = "";
		session["form_reg_CognomeRapLeg"] = "";
		session["form_reg_emailrif"] = "";
		session["form_reg_funzazi"] = "";

	}

	void isFallimentare(dynamic qualificaRapLeg) {

		//checkBloccoRegistrazione = false

		//'-- Se il rapLeg ha una qualifica presente in questa lista dobbiamo bloccare
		//'-- la registrazione essendo in una situazione fallimentare
		//'-- se ci chiedono di ripristinare questo controllo aggiungere questi ruoli nel ctl_relations
		//'AMMINISTRATORE PROVVISORIO
		//'AMMINISTRATORE STRAORDINARIO
		//'AMMINISTRATORE GIUDIZIARIO
		//'COMMISSARIO MINISTERIALE
		//'COMMISSARIO STRAORDINARIO
		//'COMMISSARIO GIUDIZIARIO
		//'COMMISSARIO LIQUIDATORE
		//'COMMISSARIO PREFETTIZIO
		//'COMMISSARIO GOVERNATIVO
		//'CURATORE
		//'CURATORE FALLIMENTARE
		//'LIQUIDATORE
		//'LIQUIDATORE GIUDIZIARIO

	}

	void pulisciSessione(){
		MainGlobalAsa.SessionAbandon(session);

		//'session("SESSION_WORK_KEY") = ""
		//
		//'session("form_reg_ragsoc") = ""
		//'session("form_reg_natgiu") = ""
		//'session("form_reg_indiriz") = ""
		//'session("form_reg_annocostr") = ""
		//'session("form_reg_iscrccia") = ""
		//'session("form_reg_sedeccia") = ""
		//'session("form_reg_email") = ""
		//'session("form_reg_telefono") = ""
		//'session("form_reg_numfax") = ""
		//
		//'session("form_reg_cap") = ""
		//'session("form_reg_citta") = ""
		//'session("form_reg_provincia") = ""
		//'session("form_reg_localita_leg") = ""
		//'session("form_reg_provincia_leg") = ""
		//
		//'session("form_reg_cfRapLeg") = ""
		//'session("form_reg_NomeRapLeg") = ""
		//'session("form_reg_CognomeRapLeg") = ""
		//'session("form_reg_emailrif") = ""
		//'session("form_reg_funzazi") = ""
		//
		//'session("attiva_step_firma") = ""
		//'session("REG_DOC_ID") = ""
		//'session("verifica_parix") = ""
		//'session("form_reg_tmpname") = ""
		//'session("reg_form_esito_sign") = ""
		//'session("reg_form_esito_ok") = ""
		//'session("reg_form_errore_sign") = ""
		//'session("reg_form_esito_sign") = ""
		//'session("ID_AZI") = ""
		//'session("azienda_gia_censita") = ""
		//'session("last_step") = ""
		//'session("url_pdf") = ""
		//
		//'session("strutturaLivello1") = ""
		//'session("strutturaLivello2") = ""
		//'session("enteSelezionato") = ""

	}

	void loadValidationCollection(){


		string strSql = "select isnull(mpcrCampo,'') as campo ,isnull(mpcrLungh,'0') as maxLen ,isnull(mpcrLunghMin,'0') as minLen, isnull(regExp,'') as regExp from mpcampireg";

		TSRecordSet rs = GetRS(strSql);

		if (rs.RecordCount > 0){

			rs.MoveFirst();

			while (! rs.EOF){

				string regExp		= CStr(rs.Fields["regExp"]).Trim();
				string nomecampo	= CStr(rs.Fields["campo"]).Trim();
				string maxLen		= CStr(rs.Fields["maxLen"]).Trim();
				string minLen		= CStr(rs.Fields["minLen"]).Trim();

				session["valid_form_" + nomecampo.ToLower()] = minLen + "#@#" + maxLen + "#@#" + regExp;

				//'response.write "CHIAVE:valid_form_" & lcase(nomecampo)
				//'response.write "VALORE:" & cstr(session("valid_form_" & lcase(nomecampo))) & "<br/>"

				rs.MoveNext();

			}			


		}

		//set rs = nothing

	}

	bool validateFieldReg(string nomeCampo, string valore){
		bool boolToReturn = true;

		nomeCampo = nomeCampo.ToLower().Trim();

		if (!string.IsNullOrEmpty(CStr(session["valid_form_" + nomeCampo] ) ) ) {

			string[] vet = Strings.Split(CStr(session["valid_form_" + nomeCampo]), "#@#");

			if (vet.Length -1  > 0 ) {

				long minLen = IIF(!string.IsNullOrEmpty(CStr(vet[0])), CLng(vet[0]), 0);
				long maxLen = IIF( !string.IsNullOrEmpty(CStr(vet[1])), CLng(vet[1]), 100000);
				string regExp = CStr(vet[2]);

				int lunghezza = CStr(valore).Length;

				if (lunghezza < minLen || lunghezza > maxLen ){

					boolToReturn = false;
					return boolToReturn;

				}

				//'response.write "........." & nomeCampo & " : " & valore & " - regExp: " & regExp

				if( !string.IsNullOrEmpty(regExp)){

					boolToReturn = isValidString(valore,regExp);

				}

			}

		}

		return boolToReturn;

	}

	int checkEsistenzaAzienda(string codiceFiscale){
		int intToReturn = -1;

		string strSql = "select top 1 az.idAzi";
		strSql = strSql + @" from aziende az with (nolock) ";
		strSql = strSql + @"       LEFT OUTER JOIN dm_attributi attr with (nolock)  ON attr.lnk = az.idazi and az.azideleted = 0 ";
		strSql = strSql + @" where dztnome = 'codicefiscale' and isnull(vatvalore_ft,'') = '" + codiceFiscale.Replace("'", "''") + "'";

		TSRecordSet rs = GetRS(strSql);

		if (rs.RecordCount > 0 ){
			rs.MoveFirst();
			intToReturn = CInt(rs.Fields["idAzi"]);

		}else{
			intToReturn = -1;
		}

		//set rs = nothing		

		return intToReturn;

	}

	void recuperaInfoAzienda(string chiaveDiAggancio){

		string strSql = "select * from registrazione_dati_azienda where idAzi = " + CStr(CLng(chiaveDiAggancio));

		TSRecordSet rs = GetRS( strSql );

		if (rs.RecordCount > 0){

			rs.MoveFirst();

			session["form_reg_ragsoc"] = CStr(rs.Fields["RagioneSociale"]);
			session["form_reg_natgiu"] = CStr(rs.Fields["FormaGiuridica"]);
			session["form_reg_annocostr"] = CStr(rs.Fields["AnnoCCIAA"]);
			session["form_reg_iscrccia"] = CStr(rs.Fields["NumeroREA"]);
			session["form_reg_sedeccia"] = CStr(rs.Fields["DellaCCIAA"]);
			session["form_reg_email"] = CStr(rs.Fields["Email"]);
			session["form_reg_telefono"] = CStr(rs.Fields["Telefono"]);
			session["form_reg_numfax"] = CStr(rs.Fields["Fax"]);
			session["form_reg_indiriz"] = CStr(rs.Fields["Indirizzo"]);
			session["form_reg_cap"] = CStr(rs.Fields["Cap"]);
			session["form_reg_citta"] = CStr(rs.Fields["Comune"]);
			session["form_reg_provincia"] = CStr(rs.Fields["Provincia"]);
			session["form_reg_cf"] = CStr(rs.Fields["CodiceFiscale"]);
			session["form_reg_piva"] = CStr(rs.Fields["partitaIVA"]);

		}

		//set rs = nothing

	}

	long timestamp(DateTime data) {
		return DateAndTime.DateDiff("s", "01/01/1970 00:00:00", data);
	}

	string generaChiaveSessione(){
		string sessionid = CStr(session.SessionID);
		string addKey = CStr(timestamp(DateAndTime.Now));
		addKey = Strings.Right(addKey, addKey.Length - 2);
        string extendedSessionId = addKey + sessionid.GetHashCode();

		//'-- normalizzo togliendo gli 0 a sinistra
		while (!string.IsNullOrEmpty(extendedSessionId) && Strings.Left(extendedSessionId, 1) == 0.ToString()) { 
			 extendedSessionId = Strings.Right(extendedSessionId, extendedSessionId.Length - 1);
		}
		
		session["SESSION_WORK_KEY"] = extendedSessionId;
		return extendedSessionId;
	}

	void jsFocus(){

		htmlToReturn.Write($@"
	
			<script type=""text/javascript"">
				window.addEvent('domready', function() {{
			
					try
					{{
						var elementi = document.getElementsByClassName('focusthis');
						elementi[0].focus();
					}}
					catch(e)
					{{
					}}
				
				}});
			
				function onchange_cfRapLeg()
				{{
				
					//TOGLIE IL BOTTONE SE CAMBIO IL CF
					//try{{document.getElementById('messaggio_utente').style.display = 'none';}}catch(e){{}}
					try{{document.getElementById('messaggio_errore').style.display = 'none';}}catch(e){{}}
				
				}}
			
			</script>
	
		");
	}


}
@Html.Raw(htmlToReturn.Out())