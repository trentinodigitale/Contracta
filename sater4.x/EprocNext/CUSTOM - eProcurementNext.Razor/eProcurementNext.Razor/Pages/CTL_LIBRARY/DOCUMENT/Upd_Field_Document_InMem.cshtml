@page "/CTL_LIBRARY/DOCUMENT/Upd_Field_Document_InMem.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.HTML.BasicFunction;
@using Microsoft.VisualBasic;
@using System.Data.SqlClient
@using static  eProcurementNext.CommonDB.CommonDbFunctions;
@* <!-- #Include File="print_document.asp" --> *@
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.print_documentModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@model eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.Upd_Field_Document_InMemModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
    EprocResponse htmlToReturn = new(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
}
@{
    string IDDOC = GetParamURL(Request.QueryString.ToString(), "IDDOC");
    string TYPEDOC = CStr(GetParamURL(Request.QueryString.ToString(), "TYPEDOC"));
    string SECTION = CStr(GetParamURL(Request.QueryString.ToString(), "SECTION"));
    string FIELD = CStr(GetParamURL(Request.QueryString.ToString(), "FIELD"));
    string FIELD_VALUE = CStr(GetParamURL(Request.QueryString.ToString(), "FIELD_VALUE"));
    string NUM_RIGA = CStr(GetParamURL(Request.QueryString.ToString(), "NUM_RIGA"));
    //'SE NON MI ARRIVA DALLA QUERY STRING SIGNIFICA CHE HO FATTO UNA CHIAMATA POST, QUINDI LO PRENDE DAL FORM
    if (string.IsNullOrEmpty(FIELD_VALUE))
    {
        FIELD_VALUE = CStr(GetValueFromForm(Request, "Motivazione"));
    }

    validate("IDDOC", CStr(GetParamURL(Request.QueryString.ToString(), "IDDOC").Replace("new", "")), TIPO_PARAMETRO_NUMERO, CInt(""), "", 1, HttpContext, session);
    validate("TYPEDOC", GetParamURL(Request.QueryString.ToString(), "TYPEDOC").Replace(".", "_"), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 1, HttpContext, session);
    validate("SECTION", GetParamURL(Request.QueryString.ToString(), "SECTION").Replace(".", "_"), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 1, HttpContext, session);
    validate("FIELD", GetParamURL(Request.QueryString.ToString(), "FIELD").Replace(".", "_"), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 1, HttpContext, session);	

    //'--aggiorno il valore tecnico del field in memoria
    objDoc = PrintDocument(session, htmlToReturn, HttpContext, Response, Request);
    Save_DOC_AttribValue(SECTION, FIELD, NUM_RIGA, FIELD_VALUE);
    
    try
	{
		  objDoc.Sections[SECTION].UpdateContentInMem(session, Request.HasFormContentType ? Request.Form : null);
	}
	catch
	{
		htmlToReturn.Write("ERRORE_DOCUMENTO_DA_AGGIORNARE");
	}
	htmlToReturn.Write("OK");
}@Html.Raw(htmlToReturn.Out())