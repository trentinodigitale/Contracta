@page "/NoTIER/downloadZip.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.intestModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.NoTIER.downloadZipModel;
@using Microsoft.VisualBasic;
@model eProcurementNext.Razor.Pages.NoTIER.downloadZipModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
}
@{
	//'--Versione=1&data=2020-06-10&Attvita=299230&Nominativo=Leone

	//'on error resume next
	validate("TIPIDOC", GetParamURL(Request.QueryString.ToString(), "TIPIDOC").Replace(",", ""), TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_PAROLASINGOLA, "", 0, HttpContext, session);
	validate("ANNO", GetParamURL(Request.QueryString.ToString(), "ANNO"), TIPO_PARAMETRO_INT, SOTTO_TIPO_VUOTO, "", 0, HttpContext, session);

	string accessGuid = insertAccessBarrier(session,HttpContext);

	throw new ResponseRedirectException("downloadZip.aspx?ANNO=" + URLEncode(GetParamURL(Request.QueryString.ToString(), "ANNO")) + "&TIPIDOC=" + URLEncode(GetParamURL(Request.QueryString.ToString(), "TIPIDOC")) + "&acckey=" + accessGuid, Response);

}
@Html.Raw(htmlToReturn.Out())