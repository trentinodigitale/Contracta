@page "/BACKOFFICE/loginportale.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using Microsoft.VisualBasic;
@using static eProcurementNext.Session.SessionMiddleware
@model eProcurementNext.Razor.Pages.BACKOFFICE.loginportaleModel
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
}
@{
	string strUrl = GetParamURL(Request.QueryString.ToString(), "URL");

	//'-- SE IL PARAMETRO URL E' VUOTO O PUNTA IN QUALCHE MODO A QUESTA STESSA PAGINA, BLOCCO
	if (Strings.Trim(CStr(strUrl)) == "" || Strings.InStr( 1, Strings.LCase(strUrl), "loginportale.asp" ) > 0  ){
		throw new ResponseEndException(htmlToReturn.Out(), Response, "");
	}


	//'-- idpfu utente
	if (IsEmpty(session["IdPfu"]) || CInt(session["IdPfu"]) == -20) {

		session["IdPfu"] = -20;

		//'-- lingua utente
		session["strSuffLing"] = "I";

		//'-- recupero idazienda
		session["lIdAzi"] = -20000;

		//'--recupero separatore decimale
		session["SEP_DECIMALI"] = ",";

		session["SEP_MIGLIAIA"] = ".";

		//'--recupero id marketplace
		session["IdMP"] = 0;


	}




	//'--aggiungo backoffice se non presente
	if (Strings.InStr(1 , strUrl , "backoffice=yes" ) <= 0 ){

		if (Strings.InStr( 1 , strUrl , "?" ) <= 0 ){
			strUrl = strUrl + "?backoffice=yes";
		}else{
			strUrl = strUrl + "&backoffice=yes";
		}

	}

	strUrl = Strings.Replace(strUrl, "#", "%23");

	//'-- Per prevenire l'URL redirector abuse
	strUrl = Strings.Replace( strUrl, "http://","");
	strUrl = Strings.Replace( strUrl, "www.","");

	//'--passo il controllo all'url passato
	Response.Redirect(strUrl);
}