@page "/AVCP/test_Path.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using eProcurementNext.Core.Storage;
@using Microsoft.VisualBasic;
@inject IWebHostEnvironment _host;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.intestModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.cnvModel;
@model eProcurementNext.Razor.Pages.AVCP.test_PathModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
}
@{
	//'-- Per testare la copia di un file in un percorso
	//Server.CreateObject("Scripting.FileSystemObject") 
	string fileTmp = CommonStorage.GetTempName();
	string path = ApplicationCommon.Application["PathFolderAllegati"];

	string directoryDest = "";
	directoryDest = CStr(GetValueFromForm(Request, "PercorsoDiRete"));
	//'directoryDest = cstr(Request.QueryString("PATH"))

	if(string.IsNullOrEmpty(CStr(directoryDest)))
	{
		throw new ResponseRedirectException("../ctl_library/MessageBoxWin.asp?MSG=" +ApplicationCommon.CNV("Parametro PercorsoDiRete obbligatorio") + "&CAPTION=ESITO", Response);
		throw new ResponseEndException(htmlToReturn.Out(), Response, "");
	}

	//'-- Creo il file temporaneo
	//System.IO.File file = System.IO.File.CreateText(path + @"\" + fileTmp);
	System.IO.File.CreateText(path + @"\" + fileTmp);
	try
	{
		 System.IO.File.WriteAllText(path+ @"\" + fileTmp,"TEST");
		 //System.IO.File.Close();
	}
	catch(Exception ex)
	{
		throw new ResponseRedirectException($@"../ctl_library/MessageBoxWin.asp?MSG=" + ApplicationCommon.CNV("Errore nella creazione del file temporaneo") + "." + URLEncode(ex.Message) + "&CAPTION=ERRORE", Response);
		throw new ResponseEndException(htmlToReturn.Out(), Response, "");
	}
	//'-- provo a copiarlo nella directory di destinazione
	try
	{
		System.IO.File.Copy(CStr(path + @"\" + fileTmp),CStr(directoryDest + fileTmp));
	}
	catch(Exception ex)
	{
		throw new ResponseRedirectException("../ctl_library/MessageBoxWin.asp?MSG=" + ApplicationCommon.CNV("Errore nella copia del file") + "." + URLEncode(ex.Message) + "&CAPTION=ERRORE", Response);
		System.IO.File.Delete(CStr(path + @"\" + fileTmp));
		throw new ResponseEndException(htmlToReturn.Out(), Response, "");

	}
	//'-- cancello il file remoto e il file locale
	CommonStorage.DeleteObject(CStr(directoryDest + fileTmp));
	CommonStorage.DeleteObject(CStr(path + @"\" + fileTmp));

	throw new ResponseRedirectException("../ctl_library/MessageBoxWin.asp?MSG=" +ApplicationCommon.CNV("Percorso di rete corretto") + "&CAPTION=ESITO POSITIVO", Response);
	throw new ResponseEndException(htmlToReturn.Out(), Response, "");


}@Html.Raw(htmlToReturn.Out())