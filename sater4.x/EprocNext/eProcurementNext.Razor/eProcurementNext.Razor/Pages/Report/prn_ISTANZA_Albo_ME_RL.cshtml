@page "/Report/prn_ISTANZA_Albo_ME_RL.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using Microsoft.VisualBasic
@using System.Globalization
@using static eProcurementNext.CommonDB.Basic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.print_documentModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Session.SessionMiddleware
@using static eProcurementNext.Razor.Pages.Report.prn_ISTANZA_Albo_ME_RLModel;
@model eProcurementNext.Razor.Pages.Report.prn_ISTANZA_Albo_ME_RLModel
@{

	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
	var sqlParams = new Dictionary<string, object?>();
	objDoc = PrintDocument(session, htmlToReturn, HttpContext, Response, Request);//PrintDocument ok

	htmlToReturn.Write($@"
	<html>
	<head>");
	addMetaTag(htmlToReturn);

	string LanguageSuffix = GetParamURL(Request.QueryString.ToString(), "LanguageSuffix");
	validate("LanguageSuffix", LanguageSuffix, TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_PAROLASINGOLA, "", 0, HttpContext, session);
	TSRecordSet? rsclassiiscrizione = null;

	string getClasseIscrizione(string cod)
	{
		string _getClasseIscrizione = "";
		try
		{
			if(rsclassiiscrizione is null)
			{
				sqlParams.Clear();
				sqlParams.Add("@ml_lng", LanguageSuffix);
				rsclassiiscrizione = cdf.GetRSReadFromQuery_("SELECT  DMV_DescML , DMV_Cod  FROM  ClasseIscriz_MLNG where ML_LNG=@ml_lng", ApplicationCommon.Application.ConnectionString, sqlParams);
			}
			rsclassiiscrizione.Filter("DMV_Cod = '" + cod + "'");
			if(!(rsclassiiscrizione.EOF && rsclassiiscrizione.BOF))
			{
				_getClasseIscrizione = CStr(rsclassiiscrizione["DMV_DescML"]);
			}
			else
			{
				_getClasseIscrizione = "";
			}
		}
		catch
		{

		}
		return _getClasseIscrizione;
	}
	string  getSettoriCCNL (string cod )
	{
		string _getSettoriCCNL = "";
		TSRecordSet? rs3 = null;
		try
		{
			sqlParams.Clear();
			sqlParams.Add("@nome", "SettoriCCNL");
			sqlParams.Add("@cod", cod);
			rs3 = cdf.GetRSReadFromQuery_("SELECT v.DMV_DescML FROM (SELECT 337 AS DMV_DM_ID , dgCodiceInterno  AS DMV_Cod  , '000.' + dgPath   AS DMV_Father , dgLivello  AS DMV_Level , dscTesto         AS DMV_DescML , CASE dgFoglia WHEN 1 THEN 'node.gif' ELSE    'folder.gif' END AS DMV_Image , 0   AS DMV_Sort  , CASE CHARINDEX('-', dscTesto) WHEN 0 THEN '0'  ELSE LEFT(dscTesto, CHARINDEX('-', dscTesto) -  1) END  AS DMV_CodExt  FROM DominiGerarchici   , DizionarioAttributi      , DescsI  wHERE dztNome = @nome  AND dztIdTid = dgTipoGerarchia AND dztDeleted = 0 AND IdDsc = dgIdDsc AND dgDeleted = 0) v where DMV_COD=@cod", ApplicationCommon.Application.ConnectionString, sqlParams);
			rs3.MoveFirst();
			_getSettoriCCNL = CStr(rs3["DMV_DescML"]);
		}
		catch
		{

		}
		return _getSettoriCCNL;
	}
	string getcertifazione( string cod )
	{
		string _getcertifazione = "";
		string[] arrcert;
		int i;
		TSRecordSet rs = null;
		string stringa;
		stringa = "";
		arrcert = cod.Split("###");
		try
		{
			for(i = 1;i<arrcert.Length-1;i++)
			{
				sqlParams.Clear();
				sqlParams.Add("@id", "Certificazioni");
				sqlParams.Add("@cod", arrcert[i]);
				rs = cdf.GetRSReadFromQuery_("SELECT  v.DMV_DescML  FROM LIB_DomainValues v where DMV_DM_ID=@id and DMV_COD=@cod", ApplicationCommon.Application.ConnectionString, sqlParams);
				rs.MoveFirst();
				stringa = stringa + "<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + CStr(rs["DMV_DescML"]) + "</b><br/>";
				//'response.write  "<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" & rs.fields( "DMV_DescML" ).value & "</b><br/>"
			}
			_getcertifazione = stringa;
		}
		catch
		{

		}
		return _getcertifazione;
	}
	//' <summary>
	//' Il metodo valida se esiste un modello nella CTL_DOC_SECTION_MODEL.
	//' </summary>
	//' <param name="idDoc">Identificativo del documento.</param>
	//' <returns>Valore booleano.</returns>
	int EsisteModelloSection(string idDoc)
	{
		TSRecordSet? rs = null;

		sqlParams.Clear();
		sqlParams.Add("@id", CInt(idDoc));
		sqlParams.Add("@dse_id", "DISPLAY_ABILITAZIONI");
		sqlParams.Add("@mod_name", "ISTANZA_ALBO_ME_2_DISPLAY_ABILITAZIONE_2018_07");
		rs = cdf.GetRSReadFromQuery_("select * from CTL_DOC_SECTION_MODEL where IdHeader = @id and dse_id=@dse_id and mod_name=@mod_name", ApplicationCommon.Application.ConnectionString, sqlParams);
		int ritorno = 0;
		if (rs.RecordCount >0)
		{
			ritorno = 1;
		}

		return ritorno;
	}
	dynamic getNumeroDetermina(string cod)
	{
		TSRecordSet? rs1 = null;
		dynamic _getNumeroDetermina = null;
		try
		{
			sqlParams.Clear();
			sqlParams.Add("@id", CInt(cod));
			rs1 = cdf.GetRSReadFromQuery_("select dgrN from Document_Bando where idheader=@id", ApplicationCommon.Application.ConnectionString, sqlParams);
			rs1.MoveFirst();
			_getNumeroDetermina = CStr(rs1["dgrN"]);
		}
		catch
		{

		}
		return _getNumeroDetermina;
	}
	dynamic getDeterminaDel(string cod)
	{
		TSRecordSet? rs2 = null;
		dynamic _getDeterminaDel = null;
		try
		{
			sqlParams.Clear();
			sqlParams.Add("@id", CInt(cod));
			rs2 = cdf.GetRSReadFromQuery_("select dgrDel from  Document_Bando where idheader=@id", ApplicationCommon.Application.ConnectionString, sqlParams);
			rs2.MoveFirst();
			_getDeterminaDel = GetValueFromRS(rs2.Fields["dgrDel"]);
		}
		catch
		{

		}
		return _getDeterminaDel;
	}
	int NumPag;
	NumPag = 0;
	/*dynamic iif(dynamic a,dynamic b,dynamic c)
	{
		if(a)
		{
			return b;
		}
		else
		{
			return c;
		}
	}*/
	htmlToReturn.Write($@"
	</head>
	<body ");
	if(DOC_FieldTecnical("DOCUMENT", "RichiestaFirma") == "si")
	{
		if((DOC_FieldTecnical("DOCUMENT", "StatoDoc") == "Saved" || string.IsNullOrEmpty(DOC_FieldTecnical("DOCUMENT", "StatoDoc"))) && (GetParamURL(Request.QueryString.ToString(), "TO_SIGN") == "no" || string.IsNullOrEmpty(GetParamURL(Request.QueryString.ToString(), "TO_SIGN"))))
		{
			htmlToReturn.Write($@" style=""background-image:url(../images/bozza.jpg)"" ");
		}
	}
	else
	{
		if(DOC_FieldTecnical( "DOCUMENT", "StatoDoc") ==  "Saved" || string.IsNullOrEmpty(DOC_FieldTecnical( "DOCUMENT", "StatoDoc") ))
		{
			htmlToReturn.Write($@" style=""background-image:url(../images/bozza.jpg)"" ");
		}
	}
	htmlToReturn.Write($@">
	<style type=""text/css"">



	BODY,DIV ,TABLE, TD {{
	 font-family:'Arial','Times New Roman',serif;
	 font-size:9.9pt;
	 font-style:normal;
	 font-weight:normal


	}}
	.Input
	{{
	 font-family:'Arial','Times New Roman',serif;
	 font-size:10pt;
	 font-style:normal;
	 font-weight:bold

	}}

	.TITLE{{
	 font-family:'Arial','Times New Roman',serif;
	 font-size:12pt;
	 font-style: bold;
	 font-weight:bold



	}}



	@media print
	  {{
	  #Ricevuta {{}}
	  }}

	  @media screen
	  {{
	  #Ricevuta {{}}
	  }}

	  ul li, table ul li {{ list-style-type:none; text-align:justify;}}
	  p	{{  text-align:justify;}} 
	 .disc li {{ list-style-type:disc;}}
	 .disc li table td{{ vertical-align:bottom;}}
	  h1{{font-size:1.3em; font-weight:bold; text-align:center;}}
	 .PaddingLeft{{ padding-left:3em;}}
	 .nomargin{{margin-top: -13px;}}
	  ul.ListStyleTypeNone li{{padding-top:0em; }}
	 .ListStyleTypeNone{{ list-style-type:none; }}
	 table.list{{ vertical-align:middle; margin-top:1em;}}
	 table td ul.disc{{padding-top:0em;padding-bottom:0em;margin-top: 0em;margin-bottom: 0em;}}



	</style>
		 <div style=""text-align: center; "" >
			<center>
				<table style=""width: 800px; height: 1400px;""");
	Header();
	htmlToReturn.Write($@"
	<tr>



	<td height=""100%"" valign=""top"" >
	<div style=""text-align: center; width: 800px; align: center;"">
		<div>

	<div>
         <table align=""center"">");
	if(!string.IsNullOrEmpty(DOC_Field( "DOCUMENT", "Protocollo")))
	{
		htmlToReturn.Write($@"
			<tr>
                <td nowrap>
                    Protocollo Istanza:
                </td>
                <td>
                    <font class=""Input"">
                        "+DOC_Field( "DOCUMENT", "Protocollo")+$@"
                    </font>
                </td>
                <td width=""50"">
                    &nbsp;</td>
                <td>
                    del:
                </td>
                <td>
                    <font class=""Input"">
                        "+DOC_Field( "DOCUMENT", "DataInvio")+$@"
                    </font>
                </td>
                <td>
                </td>
            </tr>");	

	}
	htmlToReturn.Write($@"
	</table>
     </div>
	<br>


	<table style=""text-align: center; width: 100%"">


	   <tr style=""background-color: Silver; height: 55px ; text-align: center; "">
			<td >");
	htmlToReturn.Write("<b>" + ApplicationCommon.CNV("INTESTAZIONE_ISTANZA_AlboOperaEco").Replace("(((NumDetermina)))", "<b>" + DOC_Field("TESTATA", "NumDetermina") + "</b>") + "</b>");
	htmlToReturn.Write($@"
	<br>


				</td>
				</tr>                                                                    

			</table>
		 </div>
	</div>
	<div style=""width: 800px; margin-top: 15px; text-align: left"">

	<table>
           <tr>
               <td nowrap=""nowrap"">
                   Il sottoscritto
               </td>
               <td>
                   <font class=""Input"">
                      	" + DOC_Field("TESTATA", "NomeRapLeg") + $@" &nbsp; " + DOC_Field("TESTATA", "CognomeRapLeg") + $@"
                   </font>
               </td>
               <td nowrap=""nowrap"">
                   nato a 
               </td>
               <td>
                   <font class=""Input"">
                      " + DOC_Field("TESTATA", "LocalitaRapLeg") + $@"
                   </font>
               </td>
				<td nowrap=""nowrap"">
					   Provincia
				</td>
				<td>
						<font class=""Input"">
							" + DOC_Field("TESTATA", "ProvinciaRapLeg") + $@"
						</font>
				</td>
				<td nowrap=""nowrap"">
					   Stato
				</td>
				<td>
						<font class=""Input"">
							" + DOC_Field("TESTATA", "StatoRapLeg") + $@"
						</font>
				</td>
				<td nowrap=""nowrap"">
					   il
					</td>
					<td>
						<font class=""Input"">
							" + DOC_Field("TESTATA", "DataRapLeg") + $@"
						</font>
				</td>
           </tr>
       </table>");

	htmlToReturn.Write($@"
	<table>
		<tr>								

			<td nowrap=""nowrap"">
			Codice Fiscale 
			</td>
			<td>
				<font class=""Input"">
					" + DOC_Field("TESTATA", "CFRapLeg") + $@"
				</font>
			</td>
		    <td nowrap=""nowrap"">
			  Telefono
			</td>
			<td>
				<font class=""Input"">
					" + DOC_Field("TESTATA", "TelefonoRapLeg") + $@"
				</font>
			</td>
			<td nowrap=""nowrap"">
			   Telefono 2
			</td>
			<td>
				<font class=""Input"">
					" + DOC_Field("TESTATA", "CellulareRapLeg") + $@"
				</font>
			</td>


			<td nowrap=""nowrap"">
			Residente a
			</td>
			<td>
				<font class=""Input"">
					" + DOC_Field("TESTATA", "ResidenzaRapLeg") + $@"
				</font>
			</td>

		</tr>
 </table>");

	htmlToReturn.Write($@"
 <table>
		<tr>		

				<td nowrap=""nowrap"">
				   Provincia
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "ProvResidenzaRapLeg") + $@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				   Stato
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "StatoResidenzaRapLeg") + $@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				Indirizzo
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "IndResidenzaRapLeg") + $@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				   Cap
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "CapResidenzaRapLeg") + $@"
					</font>
				</td>


				<td nowrap=""nowrap"">
			   In qualit&agrave; di
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "RuoloRapLeg") + $@"
					</font>
				</td>									

		  </tr>
		</table>");
	htmlToReturn.Write($@"
   <table>
		<tr>
			<td nowrap=""nowrap"">
		   Giusta procura per notaio
			</td>
			<td>
				<font class=""Input"">
					" + DOC_Field("TESTATA", "Procura") + $@"
				</font>
			</td>
			<td nowrap=""nowrap"">
			   del
			</td>
			<td>
				<font class=""Input"">
					" + DOC_Field("TESTATA", "DelProcura") + $@"
				</font>
			</td>


			<td nowrap=""nowrap"">
		   Numero Rep.
			</td>
			<td>
				<font class=""Input"">
					" + DOC_Field("TESTATA", "NumProcura") + $@"
				</font>
			</td>
			<td nowrap=""nowrap"">
			 Raccolta Numero
			</td>
			<td>
				<font class=""Input"">
					" + DOC_Field("TESTATA", "NumRaccolta") + $@"
				</font>
			</td>
		</tr>
	 </table>");
	htmlToReturn.Write($@"
 <table>										
			<tr>

				<td nowrap=""nowrap"">
				Della Ditta 
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "RagSoc") + $@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				Forma Giuridica
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "NaGi") + $@"
					</font>
				</td>
			</tr>
		</table>		
		<table>										
			<tr>
				<td nowrap=""nowrap"">
			   Con sede legale in via
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "INDIRIZZOLEG") + $@"
					</font>
				</td>
				<td nowrap=""nowrap"">
			   Comune
				</td>

				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "LOCALITALEG") + $@"
					</font>
				</td>
				<td nowrap=""nowrap"">
			   Provincia
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "PROVINCIALEG") + $@"
					</font>
				</td>
				<td nowrap=""nowrap"">
			   Stato
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "STATOLOCALITALEG") + $@"
					</font>
				</td>
				<td nowrap=""nowrap"">
				C.a.p.
				</td>

				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "CAPLEG") + $@"
					</font>
				</td>

			</tr>
		</table>");
	htmlToReturn.Write($@"
		  <table>	
				<tr>
				<td nowrap=""nowrap"">
					Telefono <em>(1)</em>
				</td>											
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "NUMTEL") + $@"
					</font>
				</td>
				<td nowrap=""nowrap"">
			  Telefono <em>(2)</em>
				</td>
				<td>
					<font class=""Input"">
						" + DOC_Field("TESTATA", "NUMTEL2") + $@"
					</font>
				</td>

				<td nowrap=""nowrap"">
			   Fax
			</td>

			<td>
				<font class=""Input"">
					" + DOC_Field("TESTATA", "NUMFAX") + $@"
				</font>
			</td>

			</tr>
	 </table>");
	htmlToReturn.Write($@"
    <table>
		<tr>

			   <td nowrap=""nowrap"">
		   Codice Fiscale Ditta
			</td>

			<td>
				<font class=""Input"">
					" + DOC_Field("TESTATA", "codicefiscale") + $@"
				</font>
			</td>
			<td nowrap=""nowrap"">
		  P. Iva
			</td>
			<td>
				<font class=""Input"">
					" + DOC_Field("TESTATA", "PIVA") + $@"
				</font>
			</td>
		</tr>
		</table>");
	string ISTANZA_Albo_ME_RL_KEY_001 =  Strings.Replace(Strings.Replace(Strings.Replace(ApplicationCommon.CNV("ISTANZA_Albo_ME_RL_KEY_001"), "(((NumDetermina)))", "<b>" + DOC_Field("TESTATA", "NumDetermina") + "</b>"), "(((DataDetermina)))", "<b>" + DOC_Field("TESTATA", "DataDetermina") + "</b>"), "(((Certificazioni)))", "@@@@@" + DOC_FieldTecnical("TESTATA", "Certificazioni") + "~~~~~");
	string cartificazioni = MidVb6(ISTANZA_Albo_ME_RL_KEY_001,InStrVb6(1,ISTANZA_Albo_ME_RL_KEY_001,"@@@@@")+5,( InStrVb6(1,ISTANZA_Albo_ME_RL_KEY_001,"~~~~~"))- (InStrVb6(1,ISTANZA_Albo_ME_RL_KEY_001,"@@@@@")+5 ));
	ISTANZA_Albo_ME_RL_KEY_001 = ISTANZA_Albo_ME_RL_KEY_001.Replace( "@@@@@" + cartificazioni + "~~~~~", getcertifazione(cartificazioni)) + " <b>" + DOC_Field("TESTATA", "Email") + " </b>" + ApplicationCommon.CNV("ISTANZA_Albo_ME_RL_KEY_002");
	//'Mid(ISTANZA_Albo_ME_RL_KEY_001,Instr(ISTANZA_Albo_ME_RL_KEY_001,"@@@@@")+5,( Instr(ISTANZA_Albo_ME_RL_KEY_001,"~~~~~"))- (Instr(ISTANZA_Albo_ME_RL_KEY_001,"@@@@@")+5 ))
	//'response.write "<br/>" & Instr(ISTANZA_Albo_ME_RL_KEY_001,"@@@@@")+5 
	//'response.write "<br/>" & Instr(ISTANZA_Albo_ME_RL_KEY_001,"~~~~~") 
	htmlToReturn.Write(ISTANZA_Albo_ME_RL_KEY_001);

	htmlToReturn.Write(ApplicationCommon.CNV("ISTANZA_Albo_ME_RL_KEY_003") + $@"
	<br/>																		
	" + ApplicationCommon.CNV("ISTANZA_Albo_ME_RL_KEY_004"));


	htmlToReturn.Write($@"
						</div>
					 <br/>

				</div>

			</td>
		</tr>");
	footer();
	htmlToReturn.Write("</table>");
	<!-- fine pagina 1-->
	PrintPagina();
	htmlToReturn.Write($@"
	<table style=""width: 800px; height: 1400px;""");
	Header();
	htmlToReturn.Write($@"
		<tr>
						<td height=""100%"" valign=""top"">				 
							<div style=""text-align: left; width: 100%"">															
									<div>
										<br/>
										<strong>"+ApplicationCommon.CNV("ISTANZA_AlboOperaEco_KEY_020")+$@"</strong></br>");
	string stringa = "";
	string[] arr = null;

	stringa = DOC_FieldTecnical("DISPLAY_ABILITAZIONI", "ClasseIscriz");

	arr = stringa.Split("###");
	for(int i = 1;i<= arr.Length-1;i++)
	{
		htmlToReturn.Write($@"<br><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + getClasseIscrizione(arr[i]) + "</b>");
	}
	htmlToReturn.Write($@"
	</div>

	<div>	

	<h3 style=""text-align:center""> ULTERIORE DOCUMENTAZIONE </h3>	
	" + ApplicationCommon.CNV("ISTANZA_Albo_ME_RL_KEY_005"));
	int row6 = 0;
	row6 = DOC_NumRow("DOCUMENTAZIONE", "");
	htmlToReturn.Write($@"
	<table style=""border: 0px solid black; border-collapse: collapse; width: 80%"" align=""center"" cellpadding=""5"">
	<tr style=""height: 18px"">
	<td style=""border: 0px solid black;"" width=""40%"">Descrizione</td>
	<td style=""border: 0px solid black;"" width=""40%"">Allegato</td>
	</tr>");
	if (DOC_Field("DISPLAY_DGUE","PresenzaDGUE") == "si" )
	{
		htmlToReturn.Write($@"
		<tr style=""height: 20px"">
		 	<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">Documento di Gara Unico Europeo (DGUE)</font></td>
			<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_Field("DISPLAY_DGUE", "Allegato") + $@"</font></td>
		 </tr> ");

	}
	//rigo 638
	for( int i = 0;i<= row6-1;i++)
	{
		htmlToReturn.Write($@"
	  <tr style=""height: 20px"">
		<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("DOCUMENTAZIONE", "Descrizione", i) + $@"</font></td>
		<td style=""border: 0px solid black;"" width=""20%""><font class=""Input"">" + DOC_FieldRow("DOCUMENTAZIONE", "Allegato", i) + $@"</font></td>
	 </tr>");

	}
	htmlToReturn.Write($@"
								</table>

								</div>
							</div>
						</td>
					</tr>");
	footer();
	htmlToReturn.Write("</table>");
	<!-- fine pagina 2-->
	htmlToReturn.Write($@"
	</center>
		</div>
	</body>
	</html>");
	void PrintPagina()
	{
		htmlToReturn.Write($@"<div style=""page-break-after: always""></div>");
	}


	void footerold()
	{
		NumPag = NumPag + 1;
		htmlToReturn.Write($@"
		<br />
		Istanza di iscrizione al Mercato Elettronico di beni e servizi
		<hr />
		<table width=""720px"" style=""vertical-align: bottom; bottom: 0px"">
			<tr>
				<td valign=""bottom"" align=""right"">
					 <br>
					"+NumPag +$@"
				</td>
			</tr>
		</table>");
	}
	void Header()
	{
		if(DOC_FieldTecnical( "DOCUMENT", "StatoDoc") == "Annullato")
		{
			//'response.Write  "<td width=""100%"" align=""left"" ><img  height=""70px"" src=""../images/annullato.gif"" ></td>"
			htmlToReturn.Write($@" style=""background-image:url(../images/annullato.gif) ; background-repeat:no-repeat;"" >");
		}
		else
		{
			htmlToReturn.Write(">");
		}
		htmlToReturn.Write($@"<tr><td height=""50px"" align=""center"" valign=""top"" >");

		string imgHeader = ApplicationCommon.CNV("HEADER_STAMPE");

		if(imgHeader.Contains("???", StringComparison.Ordinal))
		{
			htmlToReturn.Write($@"<img height=""50px"" src=""logo_new.gif"" border=""0"" alt=""" + ApplicationCommon.CNV("ALT LOGO") + $@"""/>");

		}
		else
		{
			htmlToReturn.Write(imgHeader);
		}
		htmlToReturn.Write("</td></tr>");
	}
	//'------------------------------------------------------------------------------
	//'-- funzione per disegnare il pie pagina
	//'------------------------------------------------------------------------------
	void footer()
	{
		NumPag = NumPag + 1;

		htmlToReturn.Write($@"<tr><td valign=""bottom"" height=""10px"" >");
		htmlToReturn.Write($@"<table width=""720px"" height=""10px"" style=""vertical-align: bottom; bottom: 0px""> ");
		htmlToReturn.Write($@"        <tr><td align=""left"" style=""border-bottom: 1px solid black;"" ><b>Richiesta di abilitazione al Bando di Mercato Elettronico di Beni e Servizi</b></td></tr><tr>");
		htmlToReturn.Write($@"            <td valign=""bottom"" align=""right"" >");
		htmlToReturn.Write("                ");
		htmlToReturn.Write("                  <br>");
		htmlToReturn.Write("                " + NumPag);
		htmlToReturn.Write("            </td>");
		htmlToReturn.Write("        </tr>");
		htmlToReturn.Write("    </table>");
		htmlToReturn.Write("    </td></tr>");
	}
	//set rsclassiiscrizione = nothing
	try
	{
		FreeMemDocument(session);
	}
	catch
	{
		
	}
}@Html.Raw(htmlToReturn.Out())