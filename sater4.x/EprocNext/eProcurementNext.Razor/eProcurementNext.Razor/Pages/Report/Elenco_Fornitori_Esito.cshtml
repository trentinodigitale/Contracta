@page "/Report/Elenco_Fornitori_Esito.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using Microsoft.VisualBasic
@using static eProcurementNext.CommonDB.Basic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.print_documentModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using static eProcurementNext.Razor.Pages.Report.Elenco_Fornitori_EsitoModel;
@model eProcurementNext.Razor.Pages.Report.Elenco_Fornitori_EsitoModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
	htmlToReturn.Write("<html>");
	objDoc = PrintDocument(session, htmlToReturn, HttpContext,Response,Request);//PrintDocument ok
}
@{
	string idDoc = objDoc.mp_IDDoc;
	htmlToReturn.Write($@"
	<STYLE>
	BODY
	{{
		FONT - SIZE: 10pt;
		FONT-FAMILY: Arial
	}}
	TABLE
	{{
		FONT - SIZE: 10pt;
		FONT-FAMILY: Arial
	}}

	.size1
	{{
		FONT - SIZE: 10pt;
		FONT-FAMILY: Arial
	}}

	.size2
	{{
		FONT - SIZE: 14pt;
		FONT-FAMILY: Arial
	}}

	.size5
	{{
		FONT - SIZE: 20pt;
		FONT-FAMILY: Arial
	}}



	</STYLE>");
	var sqlParams = new Dictionary<string, object?>();
	sqlParams.Add("@idDoc", CInt(idDoc));
	//'--azienda mittente del bando
	TSRecordSet Rs = cdf.GetRSReadFromQuery_("select top 1 ID_MSG_BANDO from Document_EsitoGara,Document_EsitoGara_Fornitori where id=idheader and id= @idDoc", ApplicationCommon.Application.ConnectionString, sqlParams);
	Rs.MoveFirst();
	sqlParams.Clear();
	sqlParams.Add("@idmsg", CInt(Rs["ID_MSG_BANDO"]!));
	string strSQL = "select IdMittente, pfuIdAzi from TAB_MESSAGGI_FIELDS, ProfiliUtente where IdMsg=@idmsg and IdPfu=IdMittente";
	TSRecordSet RsAziendaMitt = cdf.GetRSReadFromQuery_(strSQL, ApplicationCommon.Application.ConnectionString, sqlParams);
	TSRecordSet? RsInfoMitt = null;
	if (RsAziendaMitt.RecordCount > 0)
	{
		RsAziendaMitt.MoveFirst();
		sqlParams.Clear();
		sqlParams.Add("@idazi", CInt(RsAziendaMitt["pfuIdAzi"]!));
		RsInfoMitt = cdf.GetRSReadFromQuery_("select * from DASHBOARD_VIEW_AZIENDE where IdAzi=@idazi", ApplicationCommon.Application.ConnectionString, sqlParams);
		if (RsInfoMitt.RecordCount > 0)
		{
			RsInfoMitt.MoveFirst();
		}
	}
	htmlToReturn.Write($@"
	<head>
	<meta http-equiv=""Content-Type"" content=""!text/html; charset=utf-8"">
	<title>" + CStr(RsInfoMitt["aziragionesociale"])+$@"</title>
	</head>");
	htmlToReturn.Write($@"
	<body>
	<table border=""0""   width=""100%"" >
		 <tr> <td width=""10%"">");
	htmlToReturn.Write($@"<!-- LOGO -->");
	htmlToReturn.Write($@"
			<div align=""center""  >
			<table border=""0"" valign=""top"">
			  <tr>
			    <td align=""center"" valign=""top""><img src=""logo.jpg""  border=""0""></td>  
			    <td align=""center"" valign=""middle"">

				<b><font class=""size2""><font class=""size5"">" + CStr(RsInfoMitt["aziragionesociale"]) + $@"</font></font></b><br>");
	htmlToReturn.Write($@"<!--
				<b><font class=""size1""></font></b><br>

				<i>" + CStr(RsInfoMitt["aziIndirizzoLeg"]) + $@"&nbsp;" + CStr(RsInfoMitt["aziCAPLeg"]) + $@"&nbsp;" + CStr(RsInfoMitt["aziLocalitaLeg"]) + $@"&nbsp;(" + CStr(RsInfoMitt["aziProvinciaLeg"]) + $@") " + CStr(RsInfoMitt["aziStatoLeg"]) + $@"<br>

				Sito Web:<u>http://</i>" + CStr(RsInfoMitt["aziSitoWeb"]) + $@"</u> <br>
				<i>e-mail address:</i> <u>" + CStr(RsInfoMitt["azie_mail"]) + $@"</u> <br>
				<b>fax " + CStr(RsInfoMitt["aziFax"]) + $@" - tel " + CStr(RsInfoMitt["aziTelefono1"]) + $@"</b> <br>
	-->");
	htmlToReturn.Write($@"
			    </td>
			  </tr>
			  <tr><td>&nbsp;</td></tr>
			</table>
			</div>
		 </td></tr>
	</TABLE>
	<table border=""0""  height=""100%"" width=""90%"" >

	<BR>
	<BR>");
	int np = 0;
	int cp = 0;
	int iCnt = 0;

	iCnt = 0;

	np = DOC_NumRow("DETTAGLI", "");
	//'-- per ogni pagina
	for (cp = 0; cp < np -1;cp++)
	{
		iCnt = iCnt + 1;

		htmlToReturn.Write($@"
		<tr >
		<td  align=""left"" valign=""top"">");
		htmlToReturn.Write($@"<!-- Fornitore -->");
		sqlParams.Clear();
		sqlParams.Add("@id", DOC_FieldRowTecnical("DETTAGLI", "Fornitore", cp));
		TSRecordSet rsAzi = cdf.GetRSReadFromQuery_("select * from aziende where idazi = @id", ApplicationCommon.Application.ConnectionString, sqlParams);
		htmlToReturn.Write($@"
		<table border=""0""  width=""100%""  >
				<tr>

					<td align=""left"" ><b><font class=""size1"">
					        "+CStr(iCnt) +$@") "+ 
						CStr(rsAzi["aziragionesociale"]) + $@" - " +
						CStr(rsAzi["aziIndirizzoLeg"]) + $@" - " +
						CStr(rsAzi["aziCAPLeg"]) + $@" - " + CStr(rsAzi["aziLocalitaLeg"]) + $@"  " + $@"(" + CStr(rsAzi["aziProvinciaLeg"]) + $@")
						- FAX" + CStr(rsAzi["azifax"]) + $@"<br>


						</b></font>
					</td>
				</tr>
			</table>");

		htmlToReturn.Write($@"<!-- Statico -->");
		htmlToReturn.Write($@"
			<table border=""0""  width=""100%""  >

				<tr>

					<td style=""text-align : justify"" ><font class=""size1"">
					");
		sqlParams.Clear();
		sqlParams.Add("@id", DOC_FieldTecnical("TESTATA", "idAggiudicatrice"));
		TSRecordSet rsA = cdf.GetRSReadFromQuery_("select * from aziende where idazi = @id", ApplicationCommon.Application.ConnectionString, sqlParams);
		if (CInt(rsA["aziIdDscFormaSoc"]!) == 845326)
		{
			sqlParams.Clear();
			sqlParams.Add("@id", DOC_FieldTecnical("TESTATA", "idAggiudicatrice"));
			strSQL = "select aziende.* from aziende , Document_Aziende_RTI  where isOld = 0 and idAziPartecipante = idazi and idAziRTI in (@id) order by idAziRTI";
			rsA = cdf.GetRSReadFromQuery_(strSQL, ApplicationCommon.Application.ConnectionString, sqlParams);
		}
		htmlToReturn.Write($@"
					</td>
				</tr>

			</table>");
		htmlToReturn.Write($@"<!-- Chiusura -->");
		htmlToReturn.Write($@"
			</td>
	</tr>");

	}
	htmlToReturn.Write($@"
	</table>
	</body>");
	//'-- Testo aggiunto in automatico per liberare la memoria dei nuovi report
	try
	{
		FreeMemDocument(session);
	}
	catch
	{
		
	}
}@Html.Raw(htmlToReturn.Out())