@page "/Report/prn_tabella_punteggi.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using Microsoft.VisualBasic
@using System.Globalization
@using static eProcurementNext.CommonDB.Basic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.print_documentModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.Report.prn_tabella_punteggiModel;
@using static eProcurementNext.Session.SessionMiddleware;
@model eProcurementNext.Razor.Pages.Report.prn_tabella_punteggiModel
@{

	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();

	//objDoc = PrintDocument(session, htmlToReturn, HttpContext, Response, Request);//PrintDocument non ok

}
@{

	string versioneAflink = URLEncode(CStr(ApplicationCommon.Application["VERSIONE_AFLINK"]));

	string pathRoot = "../";

	htmlToReturn.Write($@"
	<html>
	<meta http-equiv=""Content-Type"" content=""text/html;charset=UTF-8"">
	<link rel=""stylesheet"" href=" + pathRoot + $@"CTL_Library/Themes/main_base.css?v=" + versioneAflink + $@" type = ""text/css"" media = ""screen,projection"" />
	<link rel=""stylesheet"" href=" + pathRoot + $@"CTL_Library/Themes/main.css?v=" + versioneAflink + $@" type = ""text/css"" media = ""screen,projection"" />
	<link rel=""stylesheet"" href=" + pathRoot + $@"CTL_Library/Themes/main_stampa.css?v=" + versioneAflink + $@" type = ""text/css"" media = ""print"" / -->

	<style>
		.totale {{font-size:13px;font-weight:bold;}}
		.ragionesociale{{text-align:center}}
		.intestazione{{font-size:13px;text-align:center; font-weight:bold;}}
		.descrizione{{text-align:left;font-size:13px}}
		.numeri{{text-align:right;font-size:13px }}
		td {{ padding: 5px;}}
	</style>
	<body >");

	//'--RECUPERO PARAMETRO DI FILTRO
	string SQL_Where = GetParamURL(Request.QueryString.ToString(), "WHERE_SQL");

	validate("WHERE_SQL", SQL_Where, TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_FILTROSQL, "", 1, HttpContext, session);

	//'response.write SQL_Where
	//'response.end


	string strSQL = "select distinct descrizionecriterio,cast(T1.ML_Description as nvarchar(max)) as Tipologia ,F.Descrizione as Formula,punteggiomax " +
			" from DASHBOARD_VIEW_LOTTO_PUNTEGGI_ESPRESSI " +
			" inner join " +
			" 	LIB_DomainValues T with (nolock) on DMV_DM_ID ='CriterioOfferte2'  and DMV_Cod = CriterioFormulazioneOfferta2 " +
			" 	inner join LIB_Multilinguismo T1 with (nolock) on T1.ML_key=T.DMV_DescML  and ML_LNG ='I' " +
			" 	inner join CTL_Formule F with (nolock) on FormulaEcoSDA = Formula " +
			"where" + SQL_Where + " order by descrizionecriterio ";

	TSRecordSet rsLegenda = cdf.GetRSReadFromQuery_(strSQL, ApplicationCommon.Application.ConnectionString);

	if (rsLegenda.RecordCount > 0) {

		htmlToReturn.Write($@"<table  width=""92%"" style=""margin:5px auto;"" ><thead>
	<tr>

	<td class=intestazione>" + ApplicationCommon.CNV("Descrizione Criterio") + $@"</td>
	<td class=intestazione>" + ApplicationCommon.CNV("Tipologia") + $@"</td>
	<td class=intestazione>" + ApplicationCommon.CNV("Formula") + $@"</td>
	<td class=intestazione>" + ApplicationCommon.CNV("Max Punteggio Attribuito") + $@"</td>
	</tr>");

		rsLegenda.MoveFirst();
		while (!rsLegenda.EOF) {

			htmlToReturn.Write($@"<tr>
		<td class=descrizione>" + CStr(rsLegenda["descrizionecriterio"])+ $@"</td>
		<td class=descrizione>" + CStr(rsLegenda["Tipologia"]) + $@"</td>
		<td class=descrizione>" + CStr(rsLegenda["Formula"]) + $@"</td>
		<td class=numeri>" + F(CDbl(rsLegenda["punteggiomax"])) + $@"</td>
		</tr>");

			rsLegenda.MoveNext();
		}

		htmlToReturn.Write($@"</thead></table><br><br>");

	}

	strSQL = "select aziRagioneSociale_SORT, aziRagioneSociale , descrizionecriterio, valore as ValoreOfferto, value as PunteggioEconomico from DASHBOARD_VIEW_LOTTO_PUNTEGGI_ESPRESSI where ";
	strSQL = strSQL + SQL_Where + " order by aziRagioneSociale_SORT";
	//'response.write strSQL
	//'response.end
	double totalepunteggio;

	totalepunteggio = 0;

	TSRecordSet rs = GetRS(strSQL);

	//'-- recupero punteggi 
	if (rs.RecordCount > 0) {

		string RagSoc = "";

		rs.MoveFirst();
		// '--costruisco la tabella per ogni fornitore
		while (!rs.EOF)
		{

			//'--se cambia la ragione sociale stampo la caption
			if (CStr(rs["aziRagioneSociale_SORT"]) != RagSoc) {

				if (!string.IsNullOrEmpty(RagSoc)) {
					htmlToReturn.Write($@"<tr><td colspan=2 class=totale>" + ApplicationCommon.CNV("TOTALE") + $@"</td><td class=numeri>" + F(totalepunteggio) + $@"</td></tr>
				</table><br>");

					totalepunteggio = 0;
				}

				htmlToReturn.Write($@"<table  width=""92%"" style=""margin:5px auto;"" ><thead><tr>
			<td colspan=3 align=center class=ragionesociale>" + CStr(rs["aziRagioneSociale"]) + $@"</td></tr>
			<td class=intestazione>" + ApplicationCommon.CNV("Descrizione Criterio") + $@"</td>
			<td class=intestazione>" + ApplicationCommon.CNV("Valore Offerto") + $@"</td>
			<td class=intestazione>" + ApplicationCommon.CNV("Punteggio Economico") + $@"</td>
			</tr></thead>");

				RagSoc = CStr(rs["aziRagioneSociale_SORT"]);
			}

			htmlToReturn.Write($@"<tr>
		<td class=descrizione>" + CStr(rs["descrizionecriterio"])+ $@"</td>
		<td class=numeri>" + Fformat(CStr(rs["ValoreOfferto"])) + $@"</td>
		<td class=numeri>" + F(CDbl(rs["PunteggioEconomico"])) + $@"</td>
		</tr>");

			totalepunteggio = totalepunteggio + CDbl(rs["PunteggioEconomico"]);

			rs.MoveNext();
		}

		htmlToReturn.Write($@"<tr><td colspan=2 class=totale>TOTALE</td><td class=numeri>" + F(totalepunteggio) + $@"</td></tr>
	</table>");

	}

	string Fformat(string v)
	{
		//on error resume next

		string strLocFormat;  

		strLocFormat = "###,###,##0.00###";

		Fld_Number objField = new Fld_Number();//createObject("CtlHtml.Fld_Number");
		objField.Init(2, "valore", v, null, null, strLocFormat, false);
		objField.sepDecimal = session["SEP_DECIMALI"];
		v = objField.TxtValue();

		return v;
	}

	//'--restituisce la forma visuale di un attributo a dominio
	//dynamic DOC_FIELD_Dominio(string Dominio, dynamic Valore)
	//{
	//	//on error goto 0

	//	dynToReturn = Valore;

	//	//dim objLib
	//	EprocNext.BizDB.LibDBDomains objLib = new LibDBDomains();//createobject("CTLDB.Lib_dbDomains")

	//	//dim objdom
	//	var objdom = objLib.GetFilteredDomExt(cstr(Dominio), cstr(session["I"]), clng(session(-1)), cstr(""), CInt(0), cstr(ApplicationCommon.Application["ConnectionString"]), session);

	//	//'response.write cstr( session("Session")(11)) & "<br>"
	//	//'response.write cstr( session("Session")(2)) & "<br>"
	//	//'response.write Application("ConnectionString") & "<br>"
	//	//'response.write cstr( session("Session")(8)) & "<br>"

	//	var DomElem = objdom.FindCode(cstr(Valore));
	//	dynToReturn = DomElem.Desc;
	//	return dynToReturn;
	//	//set DomElem = nothing
	//	//Set objdom = nothing
	//	//set objLib = nothing

	//}



	htmlToReturn.Write($@"</body>
	</html>");
	
}
@Html.Raw(htmlToReturn.Out())