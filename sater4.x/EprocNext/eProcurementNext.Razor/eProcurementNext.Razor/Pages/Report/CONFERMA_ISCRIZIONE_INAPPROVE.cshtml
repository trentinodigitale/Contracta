@page "/Report/CONFERMA_ISCRIZIONE_INAPPROVE.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using Microsoft.VisualBasic
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.print_documentModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using static eProcurementNext.Razor.Pages.Report.CONFERMA_ISCRIZIONE_INAPPROVEModel;
@model eProcurementNext.Razor.Pages.Report.CONFERMA_ISCRIZIONE_INAPPROVEModel
@using static eProcurementNext.Session.SessionMiddleware
@{
    CommonDbFunctions cdf = new();
    LoadSession(HttpContext, session);
    EprocResponse htmlToReturn = new();

    var sqlParams = new Dictionary<string, object?>();
    string id = GetParamURL(Request.QueryString.ToString(), "IDDOC");
    string LanguageSuffix = GetParamURL(Request.QueryString.ToString(), "LanguageSuffix");
    validate("IDDOC", id, TIPO_PARAMETRO_INT, SOTTO_TIPO_VUOTO, "", 1, HttpContext, session);
    validate("LanguageSuffix", LanguageSuffix, TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_PAROLASINGOLA, "", 0, HttpContext, session);
    htmlToReturn.Write("<html>");
    htmlToReturn.Write("<head>");
    addMetaTag(htmlToReturn);
    htmlToReturn.Write("</head>");

    htmlToReturn.Write($@"<body style=""margin-left:50px; margin-right:50px; margin-top:10px; margin-bottom:10px"">");

    htmlToReturn.Write($@"<table height=""100%"" width=""100%"" border=""0"" style=""height: 1390px;"">");

    htmlToReturn.Write("<tr>");
    htmlToReturn.Write($@"<td align=""center"">");

    htmlToReturn.Write($@"<table  width=""100%"" style=""margin-top:0px"" align=""center"">");
    htmlToReturn.Write("<tr>");
    htmlToReturn.Write($@"<td style=""border:0px;"" align=""center"">");
    htmlToReturn.Write($@"<table style=""font-weight:bold; align:center"">");
    htmlToReturn.Write("<tr>");
    htmlToReturn.Write($@"<td align=""center"" style=""border:0px; align:cent"">");
    string imgHeader = ApplicationCommon.CNV("HEADER_STAMPE");
    if (imgHeader.Contains("???", StringComparison.Ordinal))
    {
        htmlToReturn.Write($@"<img height=""50px"" src=""logo_new.gif"" border=""0"" alt=""" + ApplicationCommon.CNV("ALT LOGO") + $@""" />");
    }
    else
    {
        htmlToReturn.Write(imgHeader);
    }
    htmlToReturn.Write("</td>");
    htmlToReturn.Write("</tr>");
    htmlToReturn.Write("<tr>");
    htmlToReturn.Write($@"<td style=""font-size:9px"">");
    htmlToReturn.Write(ApplicationCommon.CNV("HEADER_DATI_REGISTRAZIONE_FORNITORE"));
    htmlToReturn.Write("</td>");
    htmlToReturn.Write("</tr>");
    htmlToReturn.Write("</table>");
    htmlToReturn.Write("</td>");
    htmlToReturn.Write("</tr>");
    htmlToReturn.Write("</table>");

    htmlToReturn.Write("</td>");
    htmlToReturn.Write("</tr>");
    htmlToReturn.Write("<tr>");

    htmlToReturn.Write($@"<td height=""100%"" align=""top"" valign=""top"">");

    htmlToReturn.Write("<br/><br/><br/><br/><br/>");

    string tipologia = "Accettazione";
    sqlParams.Add("@id", CInt(id));

    string strSql = "select pfu.pfuNomeUtente + ' ' + pfu.pfuCognome as Responsabile , " + Environment.NewLine;
    strSql = strSql + " bando.Titolo, pfu2.pfuNomeUtente + ' ' + pfu2.pfuCognome as Dest,  " + Environment.NewLine;
    strSql = strSql + " isnull(pfu2.pfuTitolo,'') as PfuTitolo,  " + Environment.NewLine;
    strSql = strSql + " azidest.aziRagioneSociale,  " + Environment.NewLine;
    strSql = strSql + " azidest.aziE_Mail, " + Environment.NewLine;
    strSql = strSql + " attr1.attValue as UfficioDiAppartenenza, " + Environment.NewLine;
    strSql = strSql + " isnull(d.body,'') as OggettoComunicazione, " + Environment.NewLine;
    strSql = strSql + " isnull(d.note,'') as Comunicazione, " + Environment.NewLine;
    strSql = strSql + "d.LinkedDoc as Istanza " + Environment.NewLine;
    strSql = strSql + " FROM CTL_DOC  d with(nolock)  " + Environment.NewLine;
    strSql = strSql + " inner join CTL_DOC i with(nolock) on d.LinkedDoc = i.id  " + Environment.NewLine;
    strSql = strSql + " left join CTL_DOC_VIEW bando ON bando.id = i.LinkedDoc  " + Environment.NewLine;
    strSql = strSql + " left join profiliutente pfu with(nolock) ON pfu.idpfu = bando.ResponsabileProcedimento  " + Environment.NewLine;
    strSql = strSql + " left join ProfiliUtenteAttrib attr1 with(nolock) ON pfu.idpfu = attr1.IdPfu and attr1.dztNome = 'AreaDiAppartenenza' and isnull(attr1.attValue,'') <> '' " + Environment.NewLine;
    strSql = strSql + " left join profiliutente pfu2 with(nolock) ON pfu2.idpfu = i.idpfu  " + Environment.NewLine;
    strSql = strSql + " left join aziende aziDest with(nolock) ON aziDest.idazi = i.Azienda  " + Environment.NewLine;
    strSql = strSql + "where d.id = @id";



    int istanza = 0;
    string nomeBando = string.Empty;
    string nomeResponsabile = string.Empty;
    string UfficioDiAppartenenza = string.Empty;
    string utenteDestinatario = string.Empty;
    string aziDestRagSoc = string.Empty;
    string aziDestEmailPec = string.Empty;
    string pfuTitolo = string.Empty;
    string oggetto = string.Empty;
    string comunicazione = string.Empty;

    TSRecordSet? rsDominio = null;

    TSRecordSet? rs = cdf.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, sqlParams);
    if (rs is not null && rs.RecordCount > 0)
    {
        rs.MoveFirst();
        istanza = CInt(rs["Istanza"]!);
        nomeBando = Myhtmlencode(CStr(rs["Titolo"]));
        nomeResponsabile = Myhtmlencode(CStr(rs["Responsabile"]));// '"Alessia Orsi"
        UfficioDiAppartenenza = Myhtmlencode(CStr(rs["UfficioDiAppartenenza"]));// 'Area ICT
        utenteDestinatario = Myhtmlencode(CStr(rs["Dest"]));
        aziDestRagSoc = Myhtmlencode(CStr(rs["aziRagioneSociale"]));
        aziDestEmailPec = Myhtmlencode(CStr(rs["aziE_Mail"]));
        pfuTitolo = string.Empty;
        oggetto = Myhtmlencode(CStr(rs["OggettoComunicazione"]));
        comunicazione = Myhtmlencode(CStr(rs["Comunicazione"]));
    }
    else
    {
        HttpContext.Response.StatusCode = StatusCodes.Status500InternalServerError;
        throw new ResponseEndException(htmlToReturn.Out(), Response, "");
    }

    string stringa = string.Empty;
    string[] arr = null;

    //'response.write "select value from CTL_DOC_Value where dse_id = 'DISPLAY_ABILITAZIONI' and DZT_Name  = 'ClasseIscriz' and isnull(Value,'') <> '' and idHeader = " & cstr(clng(istanza))
    //'response.end
    sqlParams.Clear();
    sqlParams.Add("@language", LanguageSuffix);
    string strsql = "	declare @classi nvarchar(max) " +
                                "set @classi='' " +
                                "select @classi=value " +
                                    "from CTL_DOC_Value with(nolock)					" +
                                    "where dse_id = 'CLASSI' and DZT_Name  = 'ClasseIscriz' and isnull(Value,'') <> '' and idHeader =" + CStr(CLng(id)) +
                                    "SELECT  DMV_DescML , DMV_Cod  " +
                                    "	FROM  ClasseIscriz_MLNG " +
                                    "		inner join dbo.split(@classi,'###') on items=dmv_cod " +
                                    "	where ML_LNG=@language";
    TSRecordSet? rsCatMerc = cdf.GetRSReadFromQuery_(strsql, ApplicationCommon.Application.ConnectionString, sqlParams);
    string listaCategorie = string.Empty;
    if (rsCatMerc is not null && rsCatMerc.RecordCount > 0)
    {
        rsCatMerc.MoveFirst();
        for (int i = 1; i < rsCatMerc.RecordCount; i++)
        {
            stringa = CStr(rsCatMerc["DMV_DescML"]);
            //'listaCategorie = listaCategorie & "<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" & getClasseIscrizione(arr(i))
            listaCategorie = $"{listaCategorie}<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{stringa}";
            rsCatMerc.MoveNext();
        }
        listaCategorie = $"{listaCategorie}<br/>";
    }
    //'response.write ":::" & listaCategorie
    comunicazione = comunicazione.Replace(Environment.NewLine, "<br/>");
    comunicazione = comunicazione.Replace("[Classi di Iscrizione]", listaCategorie);

    sqlParams.Clear();
    sqlParams.Add("@id", CInt(id));
    TSRecordSet? rs_attivita = cdf.GetRSReadFromQuery_("select value from CTL_DOC_Value with(nolock) where dse_id = 'CLASSI' and DZT_Name  = 'AttivitaProfessionale' and isnull(Value,'') <> '' and idHeader = @id", ApplicationCommon.Application.ConnectionString, sqlParams);
    string listaAttivita = string.Empty;

    if (rs_attivita is not null && rs_attivita.RecordCount > 0)
    {
        rs_attivita.MoveFirst();
        stringa = CStr(rs_attivita["value"]);
        arr = stringa.Split("###");
        for (int i = 1; i < arr.Length - 1; i++)
        {
            listaAttivita = $"{listaAttivita}<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{getAttivitaprofessionale(arr[i])}";
        }
        listaAttivita = $"{listaAttivita}<br/>";

    }
    comunicazione = comunicazione.Replace("[Attivit&#224; Professionali]", listaAttivita);
    htmlToReturn.Write($@"<table width=""100%"">");

    htmlToReturn.Write("<tr>");

    htmlToReturn.Write($@"<td colspan=""2"" align=""left"">");
    htmlToReturn.Write(UfficioDiAppartenenza + "<br/>");
    htmlToReturn.Write("<strong>" + nomeResponsabile + "</strong> <br/>");

    htmlToReturn.Write("<br/>");
    <!--
    Reg.&nbsp;&nbsp;CFR. FILE SEGNATURA.XML<br/>
    Del&nbsp;&nbsp;&nbsp;CFR. FILE SEGNATURA.XML<br/>
    -->
    htmlToReturn.Write("</td>");

    htmlToReturn.Write("</tr>");

    htmlToReturn.Write("<tr>");
    htmlToReturn.Write($@"<td colspan=""2"" align=""right"">");
    htmlToReturn.Write(ApplicationCommon.CNV("PRN_CONFERMA_ISCRIZIONE - Spett.le Ditta") + "<br/>");
    htmlToReturn.Write(aziDestRagSoc + "<br/>");
    htmlToReturn.Write("Indirizzo PEC " + aziDestEmailPec + "<br/>");
    htmlToReturn.Write("<strong>NOTIFICATO TRAMITE PEC</strong><br/>");
    htmlToReturn.Write("</td>");

    htmlToReturn.Write("</tr>");
    htmlToReturn.Write("</table>");
    htmlToReturn.Write("<br/><br/>");
    htmlToReturn.Write("<strong>Oggetto:" + oggetto + "</strong> <br/>");

    htmlToReturn.Write("<br/><br/>");

    htmlToReturn.Write("Egr. " + pfuTitolo + " " + utenteDestinatario);

    htmlToReturn.Write("<br/><br/>");

    htmlToReturn.Write(comunicazione);
    htmlToReturn.Write("<br/><br/><br/>");

    if ((CStr(GetParamURL(Request.QueryString.ToString(), "CONFERMA_AUTOMATICA"))).ToUpper() != "YES")
    {
        htmlToReturn.Write($@"<table width=""100%"">");
        htmlToReturn.Write("<tr>");
        htmlToReturn.Write($@"<td align=""right"">");
        string param_mostra_nome = CStr(Get_Func_Property("CONFERMA_ISCRIZIONE_INAPPROVE", "nomeResponsabile", "HIDE", "0", CInt("-1")));
        if (param_mostra_nome.ToUpper() == "0")
        {
            htmlToReturn.Write(nomeResponsabile + "<br/>");
        }
        htmlToReturn.Write("Firmato digitalmente");
        htmlToReturn.Write("</td>");
        htmlToReturn.Write("</tr>");
        htmlToReturn.Write("</table>");
    }
    htmlToReturn.Write("</td>");
    htmlToReturn.Write("</tr>");
    htmlToReturn.Write("<tr>");
    htmlToReturn.Write("<td>");
    htmlToReturn.Write($@"<table border=""0"" height=""50%"" width=""100%"" style=""vertical-align: text-bottom; margin-bottom: 0px"">");
    htmlToReturn.Write("<tr>");
    string sLogo = "";
    bool bShowLogo;
    sLogo = CStr(ApplicationCommon.CNV("footer_stampe_td_custom_logo")).Trim();
    bShowLogo = false;

    if (Strings.InStr(sLogo, "footer_stampe_td_custom_logo") == 0 && !string.IsNullOrEmpty(sLogo))
    {
        bShowLogo = true;
    }
    if (bShowLogo)
    {
        htmlToReturn.Write(sLogo);
    }
    htmlToReturn.Write($@"<td align=""center"" style=""vertical-align: bottom;"">");
    htmlToReturn.Write(ApplicationCommon.CNV("footer_stampe_custom_1") + "<br/>");
    htmlToReturn.Write(ApplicationCommon.CNV("footer_stampe_custom_2"));
    htmlToReturn.Write("</td>");
    htmlToReturn.Write("</tr>");


    string nascondiFooterTitolario = CStr(Get_Func_Property("PARAMETRI_STAMPE", "Titolario", "HIDE", "0", -1));
    sqlParams.Clear();
    sqlParams.Add("@tipoDoc", "CONFERMA_ISCRIZIONE");
    strSql = "select indiceTitolario, titolario from Document_protocollo_docER with(nolock) where tipoDoc = @tipoDoc";
    rs = cdf.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, sqlParams);
    if (rs.RecordCount > 0 && nascondiFooterTitolario == "0")
    {
        rs.MoveFirst();

        string indice = CStr(rs["indiceTitolario"]);
        string titolario = CStr(rs["titolario"]);

        string lvl1 = titolario;
        string lvl2 = "";
        string lvl3 = "";
        string lvl4 = "";
        string lvl5 = "";

        try
        {
            arr = titolario.Split(".");
            lvl1 = arr[0];
            lvl2 = arr[1];
            lvl3 = arr[2];
            lvl4 = arr[3];
            lvl5 = arr[4];
        }
        catch
        {

        }
        htmlToReturn.Write("<tr>");
        htmlToReturn.Write($@"<td align=""center"" style=""vertical-align: bottom;font-size:7""");
        if (bShowLogo)
        {
            htmlToReturn.Write($@" colspan=""2"" ");

        }
        htmlToReturn.Write($@"<table width=""30%"" style=""font-size:10; padding: 0px;text-align:center; border-spacing: 0; border-collapse: collapse"" align=""center"">");
        htmlToReturn.Write("<tr>");
        htmlToReturn.Write("<td>");
        htmlToReturn.Write("</td>");

        htmlToReturn.Write("<td>");
        htmlToReturn.Write("LIV.1");
        htmlToReturn.Write("</td>");
        htmlToReturn.Write("<td>");
        htmlToReturn.Write("LIV.2");
        htmlToReturn.Write("</td>");
        htmlToReturn.Write("<td>");
        htmlToReturn.Write("LIV.3");
        htmlToReturn.Write("</td>");

        htmlToReturn.Write("</tr>");
        htmlToReturn.Write("<tr>");
        htmlToReturn.Write("<td>");
        htmlToReturn.Write("Classif.");
        htmlToReturn.Write("</td>");

        htmlToReturn.Write($@"<td style=""border: 1px solid black;"">");
        htmlToReturn.Write(lvl1);


        htmlToReturn.Write("</td>");
        htmlToReturn.Write($@"<td style=""border: 1px solid black;"">");
        htmlToReturn.Write(lvl2);
        htmlToReturn.Write("</td>");
        htmlToReturn.Write($@"<td style=""border: 1px solid black;"">");
        htmlToReturn.Write(lvl3);
        htmlToReturn.Write("</td>");
        htmlToReturn.Write("</tr>");
        htmlToReturn.Write("</table>");
        htmlToReturn.Write("</td>");
        htmlToReturn.Write("</tr>");
    }
    htmlToReturn.Write("</table>");

    htmlToReturn.Write("</td>");
    htmlToReturn.Write("</tr>");
    htmlToReturn.Write("</table>");

    htmlToReturn.Write("</body>");
    htmlToReturn.Write("</html>");
    TSRecordSet? rsclassiiscrizione = null;
    string getClasseIscrizione(string cod)
    {
        string _getClasseIscrizione = string.Empty;
        try
        {
            if (rsclassiiscrizione is null)
            {
                sqlParams.Clear();
                sqlParams.Add("@language", LanguageSuffix);
                rsclassiiscrizione = cdf.GetRSReadFromQuery_("SELECT  DMV_DescML , DMV_Cod  FROM  ClasseIscriz_MLNG where ML_LNG=@language", ApplicationCommon.Application.ConnectionString, sqlParams);
            }
        }
        catch
        {

        }
        rsclassiiscrizione.Filter("DMV_Cod = '" + cod + "'");
        if (!(rsclassiiscrizione.EOF) && !(rsclassiiscrizione.BOF))
        {
            _getClasseIscrizione = CStr(rsclassiiscrizione["DMV_DescML"]);
        }
        return _getClasseIscrizione;
    }
    string getAttivitaprofessionale(string cod)
    {
        string _getAttivitaprofessionale = string.Empty;

        //Se il recordSet del dominio è stato già caricato non rifaccio la select
        if (rsDominio is null)
        {
            sqlParams.Clear();
            sqlParams.Add("@ml_lng", LanguageSuffix);
            rsDominio = cdf.GetRSReadFromQuery_("SELECT  DMV_DescML , DMV_Cod  FROM  GESTIONE_DOMINIO_TipologiaIncarico_ML_LNG where ML_LNG=@ml_lng", ApplicationCommon.Application.ConnectionString, sqlParams);
        }

        rsDominio.Filter("DMV_Cod = '" + cod + "'");
        if (!(rsDominio.EOF && rs.BOF))
        {
            _getAttivitaprofessionale = CStr(rsDominio["DMV_DescML"]);
        }
        return _getAttivitaprofessionale;
    }

    //'-- Testo aggiunto in automatico per liberare la memoria dei nuovi report
    try
    {
        FreeMemDocument(session);
    }
    catch
    {

    }
}@Html.Raw(htmlToReturn.Out())