@page "/CustomDoc/DASHBOARD_VIEW_OE_ALBO.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.verificaBrowserModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.trace_in_log_utenteModel;
@using static eProcurementNext.Razor.Pages.CustomDoc.DASHBOARD_VIEW_ALBOModel;
@using Microsoft.VisualBasic;
@model eProcurementNext.Razor.Pages.CustomDoc.DASHBOARD_VIEW_ALBOModel
@using static eProcurementNext.Session.SessionMiddleware
@{
	CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new();
	var sqlParams = new Dictionary<string, object?>();

	//'exec dashboard_sp_dashboard_view_oe_albo 45094 , 'aziRagioneSociale#@#aziE_Mail#@#ClasseIscriz' , '''%forn%''#@#''%f%''#@#''###6###11###''' , ' like #@# like #@# = ' , 'idheader=77215' , 'idrow asc' , 20, 1 
	string FilterHide = "";
	string doc_to_upd = "";
	string filtro = "";
	string[] alistvalue = null;
	string attrib = "";
	string val = "";
	string oper = "";
	string strSQL;
	strSQL = "";

	FilterHide = GetParamURL(Request.QueryString.ToString(), "FilterHide");
	doc_to_upd = GetParamURL(Request.QueryString.ToString(), "doc_to_upd");
	filtro = GetParamURL(Request.QueryString.ToString(), "filtro");

	//'-------------------------------------
	//'-- VALIDAZIONE DELL'INPUT UTENTE  --- cstr(clng(session("IdPfu")))
	//'-------------------------------------

	validate("FilterHide", FilterHide, TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_FILTROSQL, "", 1, HttpContext, session);
	validate("doc_to_upd", doc_to_upd, TIPO_PARAMETRO_INT, SOTTO_TIPO_VUOTO, "", 1, HttpContext, session);
	validate("filtro", filtro, TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_FILTROSQL, "", 0, HttpContext, session);

	if(!string.IsNullOrEmpty(filtro))
	{
		alistvalue = filtro.Split("#~#");

		attrib = alistvalue[0];
		val = alistvalue[1];
		oper = alistvalue[2];
	}
	if(!string.IsNullOrEmpty(attrib))
	{
		attrib = attrib + "#@#doc_to_upd";
	}
	else
	{
		attrib = "doc_to_upd";
	}

	if(!string.IsNullOrEmpty(val))
	{
		val = val + "#@#'" + doc_to_upd + "'";
	}
	else
	{
		val = "'" + doc_to_upd + "'";
	}

	if(!string.IsNullOrEmpty(oper))
	{
		oper = oper + "#@# =";
	}
	else
	{
		oper = "=";
	}

	strSQL = " exec dashboard_sp_dashboard_view_oe_albo " + CStr(CLng(session["IdPfu"])) + ", '" + Strings.Replace(attrib, "'", "''") + "' , '" + Strings.Replace(val, "'", "''") + "' , ' " + Strings.Replace(oper, "'", "''") + " ' , '" + Strings.Replace(FilterHide, "'", "''") + "' , '' ,0,0";

	TSRecordSet? rs = null;
	rs = cdf.GetRSReadFromQuery_(strSQL, ApplicationCommon.Application.ConnectionString, sqlParams);
	if(rs!= null && rs.RecordCount > 0)
	{
		rs.MoveFirst();
		htmlToReturn.Write(CStr(rs.Fields["esito"]));
	}
	//throw new ResponseEndException(htmlToReturn.Out(), Response, "");

}
@Html.Raw(htmlToReturn.Out())