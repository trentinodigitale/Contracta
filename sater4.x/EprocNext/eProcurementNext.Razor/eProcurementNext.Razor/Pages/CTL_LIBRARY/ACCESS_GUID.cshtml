@page "/CTL_LIBRARY/ACCESS_GUID.asp"
@using eProcurementNext.Application
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using Microsoft.VisualBasic;
@using eProcurementNext.Razor.Pages.CTL_LIBRARY.functions
@model eProcurementNext.Razor.Pages.CTL_LIBRARY.ACCESS_GUIDModel
@using static eProcurementNext.CommonModule.Basic;
@inject eProcurementNext.Session.ISession session;
@inject eProcurementNext.CommonModule.IEprocResponse response;
@using static eProcurementNext.Session.SessionMiddleware
@{
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
	CommonDbFunctions cdf = new();
	var sqlParams = new Dictionary<string, object?>();

	dynamic guid;
	bool attivaBlocco = true;

	//'-- Se si � superato il numero massimo di tentativi
	if (attivaBlocco && CLng(session["guid-errate"]) > 2)
	{
		htmlToReturn.Write("<h2>Accesso bloccato</h2>");
		throw new ResponseEndException(htmlToReturn.Out(), Response, "Accesso bloccato");
	}

	//'-- validazione dell'input utente
	guid = GetParamURL(Request.QueryString, "GUID");
	guid = Replace(guid, "{", "");
	guid = Replace(guid, "}", "");
	guid = Replace(guid, "-", "");

	//'-- Versione
	//'-- se vuota faccio come prima altrimenti 
	//'-- 1 carico il documento nella versione lo=base
	string Versione = "1";

	securityModel.validate("GUID", guid, securityModel.TIPO_PARAMETRO_STRING, securityModel.SOTTO_TIPO_PARAMETRO_PAROLASINGOLA, "", 1, HttpContext, session);
	securityModel.validate("Versione", Versione, securityModel.TIPO_PARAMETRO_STRING, securityModel.SOTTO_TIPO_PARAMETRO_PAROLASINGOLA, "", 1, HttpContext, session);

	string sitoCliente = CStr(ApplicationCommon.Application["URLESTERNOCLIENTE"]);
	string sitoAFS = CStr(ApplicationCommon.Application["SITOAFS"]);

	if (!string.IsNullOrEmpty(sitoAFS))
	{
		if (Strings.Right(sitoAFS, 6).ToUpper() != "HTTP://")
		{
			sitoAFS = "http://" + sitoAFS;
		}
	}

	if(string.IsNullOrEmpty(Versione))
	{
		htmlToReturn.Write($@"
            <html>
		    <head>
			    <meta http-equiv=""content-type"" content=""text/html; charset=UTF-8"">

			    <style type=""text/css"">

				     @charset ""utf-8"";
				     html,body{{font-size:12px; font-family:Arial, Helvetica, sans-serif; color:#333;}}
				    .mainbanner{{ height:147px; background:url(../images/bg.jpg) top left repeat-x; position:relative; margin:auto; min-width:1000px;}}
				    .left{{ float:left; height:137px; width:500px; background:url(../images/left.jpg) top left no-repeat;}}
				    .right{{ float:right; height:137px; width:500px; height:137px; background:url(../images/right.jpg) top right no-repeat;}}
				    .logo1 {{ display:block;width:250px; height:70px; margin-top:30px;margin-left:20px;}}
				    .logo2 {{ display:block;width:180px; height:50px; margin-top:40px;margin-right:60px; float:right;}}


				    #LOGO {{
					    width: 100%;
					    height: 137px;
					    border: none;
				    }}
				    #DOCUMENTO_ASS {{
					    width: 100%;
					    height: 100%;
					    border: none;
				    }}

				    .errore  {{ font-size:16; font-weight:bold;width:100%; height:100%;}}

			    </style>

	    </head>

	    <body >


		    <table width=""100%"" height=""100%"" border=""0"" cellspacing=""0"" cellpadding=""0"">
			    <tr>
				    <td width=""100%"" height=""20%"">	

					    <!--<iframe id=""LOGO"" name=""LOGO""  src=""default.asp#mainbanner"" >	-->
						    <div class=""mainbanner"">
							    <div class=""left"">
							    <a href=""" + sitoCliente + $@""" class=""logo1""></a>
							    </div>
							    <div class=""right"">
							    <a href=""" + sitoAFS + $@""" class=""logo2""></a>
							    </div>
						    </div>									
					    <!--</iframe>-->
				    </td>
			    </tr>
			    <tr>
					    <td width=""100%"" height=""100%"">

        ");
	}

	//'-------------CONTROLLO PARAMETRI PASSATI PER CONSENTIRE ACCESSO SOLO CON LOGIN DI SISTEMA (LOGIN WEB)
	if (GetParamURL(Request.QueryString.ToString(), "GUID") != "")
	{
		//'--verificare con sabato se va bene la query 
		//'--cosa va a fare sulle lingue?
		sqlParams.Clear();
		sqlParams.Add("@GUID", GetParamURL(Request.QueryString.ToString(), "GUID"));
		TSRecordSet rs = cdf.GetRSReadFromQuery_("select * from CTL_DOC with (nolock) inner join ProfiliUtente with (nolock) on CTL_DOC.IdPfu=ProfiliUtente.IdPfu inner join Aziende with (nolock) on IdAzi=pfuIdAzi inner join Lingue with (nolock) on pfuIdLng = IdLng where GUID = @GUID ", ApplicationCommon.Application.ConnectionString, sqlParams);

		if (rs.RecordCount == 0)
		{
			if (attivaBlocco)
			{
				//'-- Se � il primo tentativo errato di accesso tramite guid
				if (IsEmpty(session["guid-errate"]))
				{
					session["guid-errate"] = CLng(1);
				}
				else
				{
					//'-- Incremento di 1 il numero di tentativi errati
					session["guid-errate"] = CLng(session["guid-errate"]) + 1;
				}
			}

			//'--tracciamo nella BLACK LIST IL TENTATIVO
			htmlToReturn.Write($@"
				<div class=""errore""> 
					ERRORE: I parametri passati sono errati.
				</div>
			");
		}
		else
		{
			//'--condiziono questo controlla alla versione (se vuota come prima)
			//'--nella nuova versione faccio sempre la redirect al documento se presente

			if (CStr(rs["StatoDoc"]) == "Sended" && string.IsNullOrEmpty(Versione))
			{
				htmlToReturn.Write($@"
					<div class=""errore""> 
						" + ApplicationCommon.CNV("Questionario Inviato") + $@"
					</div>
				");
			}
			else
			{
				//'-- Se l'utente non era gia loggato nell'applicazione
				if (IsEmpty(session["IdPfu"]) || CLng(session["IdPfu"]) < 0 )
				{
					session["IdPfu"] = CLng(rs["idPfu"]!);
					session["Funzionalita"] = CStr(rs["pfuFunzionalita"]);
					session["strSuffLing"] = CStr(rs["lngSuffisso"]);
					session["IdMP"] = 0;
					session["IDAZI"] = CInt(rs["pfuIdAzi"]!);
					session["pfuNome"] = CStr(rs["pfuNome"]);
					session["IDAZI_Master"] = 0;
					session["UserName"] = CStr(rs["pfuNome"]);
					session["RagSociale"]= CStr(rs["aziragionesociale"]);
					//'--metto in sessione il GUID arrivato
					session["ACCESS_GUID"] =  GetParamURL(Request.QueryString.ToString(), "GUID");

					//'-- avvalora variabili per il funzionamento dei moduli CTL
					//dim ObjSession
					//ObjSession = session("Session")
					//ObjSession(2) = session("IdPfu")
					//ObjSession(10) = session("Funzionalita")
					//ObjSession(11) = session("strSuffLing")
					//ObjSession(12) = session("IdMP")
					//set ObjSession(13) = objNewDizMlng("MultiLinguismo")
					//ObjSession(14) = session("IDAZI")
					//ObjSession(15) = session("IDAZI_Master")
					//session("Session") = ObjSession		
				}

				//'--se versione vuota come prima carico in un iframe con un javascript specifico
				if (string.IsNullOrEmpty(Versione))
				{
					string strURL = "document/document.asp?JScript=" + CStr(rs["TipoDoc"]) + "_MAIL&DOCUMENT=" + CStr(rs["TipoDoc"]) + "&MODE=OPEN&IDDOC=" + CStr(rs["Id"]);
					htmlToReturn.Write($@"
						<iframe id=""DOCUMENTO_ASS"" name=""DOCUMENTO_ASS""  src=""" + strURL + $@""" height=""100%"" width=""100%"">	

						</iframe>
					");

				}
				else
				{
					//'--nuova versione

					//'--metto il documento con deleted=0
					//'--questo perch� le offerte sono state create con deleted a 1
					sqlParams.Clear();
					sqlParams.Add("@Id", CStr(rs["Id"]));
					cdf.Execute("update CTL_DOC set Deleted=0 where Id = @Id", ApplicationCommon.Application.ConnectionString, parCollection: sqlParams);

					//'--recupero il nome del file javascript dalla configurazione del documento
					sqlParams.Clear();
					sqlParams.Add("@TipoDoc", CStr(rs["TipoDoc"]));
					TSRecordSet rsInfoDoc = cdf.GetRSReadFromQuery_("select dbo.GetValue('JSCRIPT',convert(varchar(MAX),DOC_Param)) as JSCRIPT from LIB_Documents with (nolock)  where doc_id = @TipoDoc  ", ApplicationCommon.Application.ConnectionString, sqlParams);

					if (rsInfoDoc.RecordCount > 0)
					{
						rsInfoDoc.MoveFirst();

						string strJSCRIPT = CStr(rsInfoDoc["JSCRIPT"]);

						//'--se non espressamente indicato utilizzo il nome del documento come javascript
						if (string.IsNullOrEmpty(strJSCRIPT))
						{
							strJSCRIPT = CStr(rs["TipoDoc"]);
						}

						string strURL =	"document/document.asp?JScript=" + strJSCRIPT + "&DOCUMENT=" + CStr(rs["TipoDoc"]) + "&MODE=OPEN&IDDOC=" + CStr(rs["Id"]) + "&lo=base";

						throw new ResponseRedirectException(strURL, Response);	
						//response.redirect strURL
					}
				}
			}
		}
	}
	else
	{
		htmlToReturn.Write($@"
			<div class=""errore""> 
				ERRORE: I parametri passati sono errati.
			</div>
		");

	}

		if (string.IsNullOrEmpty(Versione))
		{
			htmlToReturn.Write($@"

							</td>
							</tr>




					</table>	


				</body>
			</html>	
			");
		}


}@Html.Raw(htmlToReturn.Out())