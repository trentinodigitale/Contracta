@page "/CTL_LIBRARY/DOCUMENT/serverVariable.asp"
@inject eProcurementNext.Session.ISession session;
@inject ITabManage _tabManage;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.VisualBasic;
@model eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.serverVariableModel
@using static eProcurementNext.Session.SessionMiddleware
@{
    CommonDbFunctions cdf = new CommonDbFunctions();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new EprocResponse();
}
@{
    //strPath = Request.ServerVariables("PATH_INFO");

    //strPath = mid(strPath, 2, len(strPath));

    //nPos = instr(strPath, "/");

    //strVD = "/" + left(strPath, nPos - 1);

    //htmlToReturn.Write( strPath + $@"< br >");
    //htmlToReturn.Write(strVD);
    var httpConnectionFeature = HttpContext.Features.Get<IHttpConnectionFeature>();
    var localIpAddress = httpConnectionFeature?.LocalIpAddress;
    htmlToReturn.Write(localIpAddress != null ? localIpAddress.ToString() : "localIpAddress not found");

    throw new ResponseEndException(htmlToReturn.Out(), Response, "");

    //response.write Request.ServerVariables("LOCAL_ADDR")
    //response.end


}
@Html.Raw(htmlToReturn.Out())