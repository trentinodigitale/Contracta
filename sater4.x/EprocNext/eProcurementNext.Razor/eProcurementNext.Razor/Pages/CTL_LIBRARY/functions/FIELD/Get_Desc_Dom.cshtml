@page "/CTL_LIBRARY/functions/FIELD/Get_Desc_Dom.asp"
@inject eProcurementNext.Session.ISession session;
@using eProcurementNext.CommonDB
@using eProcurementNext.Core.Storage
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonModule.Basic;
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.HTML.BasicFunction;
@using Microsoft.Extensions.Primitives;
@using Microsoft.VisualBasic;
@using System.Collections.Specialized
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel
@using static eProcurementNext.Session.SessionMiddleware
@{
    CommonDbFunctions cdf = new();
	LoadSession(HttpContext, session);
	EprocResponse htmlToReturn = new(GetParamURL(HttpContext.Request.QueryString.ToString(), "XML_ATTACH_TYPE"));
}
@{
	string stringEsito = string.Empty;

	string qsDominio = GetParamURL(HttpContext.Request.QueryString.ToString(), "Dominio");
	string elemDominio = GetParamURL(HttpContext.Request.QueryString.ToString(), "ElemDominio");

	validate("Dominio", qsDominio, TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_PAROLASINGOLA, "", 0, HttpContext, session);
	validate( "ElemDominio", elemDominio , TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_FILTROSQL, "", 0, HttpContext, session);

	if (!string.IsNullOrEmpty(qsDominio) && !string.IsNullOrEmpty(elemDominio)) 
	{
		var sqlParams = new Dictionary<string, object?>();
		sqlParams.Add("@qsDominio", qsDominio);
		sqlParams.Add("@elemDominio", elemDominio);
		string strSql = "exec Get_Desc_Dom @qsDominio, @elemDominio, 'I'";

		TSRecordSet rs = cdf.GetRSReadFromQuery_(strSql, ApplicationCommon.Application.ConnectionString, sqlParams);

		if (rs.RecordCount > 0)
		{
			rs.MoveFirst();
			while (!rs.EOF) 
			{
				stringEsito = $"{stringEsito}{CStr(rs["Descrizione"])}</br>";
				rs.MoveNext();
			}
		}
	}

	htmlToReturn.Write(stringEsito);
}
@Html.Raw(htmlToReturn.Out());