@page "/SITAR/SITAR_XML_ESITO.asp"
@inject eProcurementNext.Session.ISession session;
@using System.IO;
@using eProcurementNext.CommonDB
@using eProcurementNext.CommonModule;
@using static eProcurementNext.CommonDB.Basic;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.ctl_profiler
@using eProcurementNext.BizDB;
@using eProcurementNext.HTML;
@using eProcurementNext.Application;
@using static eProcurementNext.HTML.BasicFunction;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.securityModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.functions.logModel;
@using static eProcurementNext.Razor.Pages.CTL_LIBRARY.DOCUMENT.CommonModel;
@using static eProcurementNext.CommonModule.Basic;
@using static eProcurementNext.Razor.Pages.SITAR.SITAR_XML_DOCUMENTAZIONEModel;
@using eProcurementNext.CtlProcess;
@using static eProcurementNext.Session.SessionMiddleware
@model eProcurementNext.Razor.Pages.SITAR.SITAR_XML_ESITOModel
@{
    LoadSession(HttpContext, session);
    EprocResponse response = new();
    CommonDbFunctions cdf = new();

    HttpContext.Response.ContentType = "TEXT/XML";
    if (CStr(GetParamURL(Request.QueryString.ToString(), "VIDEO")) != "1")
    {
        HttpContext.Response.Headers.Add("Content-Disposition", "attachment; filename=SITAR_XML_ESITO.XML");
    }

    string vbTab = string.Empty;
    string RUP_Login = string.Empty;
    string RUP_CF = string.Empty;
    string RUP_Pwd = string.Empty;
    string CF_Ente = string.Empty;
    string g_ID_DOC = string.Empty; // '-- ID della GARA
    string g_id_PDA = string.Empty;
    string g_SQLfilter = string.Empty;
    string OPERATION = string.Empty;
    string cfRapLeg = string.Empty;
    string STRsql = string.Empty;
    string FILE_ALLEGATO = string.Empty;

    var sqlParams = new Dictionary<string, object?>();

    //'-- init
    vbTab = "    ";

    string SOVRASCR = "true";

    g_ID_DOC = GetParamURL(Request.QueryString.ToString(), "IDDOC");
    OPERATION = GetParamURL(Request.QueryString.ToString(), "OPERATION");

    validate("IDDOC", g_ID_DOC, TIPO_PARAMETRO_INT, 0, "", 1, HttpContext, session);
    validate("OPERATION", OPERATION, TIPO_PARAMETRO_STRING, SOTTO_TIPO_PARAMETRO_TABLE, "", 0, HttpContext, session);

    TSRecordSet rs_pwd = new TSRecordSet();
    TSRecordSet rsEsiti = new TSRecordSet();
    TSRecordSet rs_Lotti = new TSRecordSet();
    TSRecordSet rs_Lotti_PDA = new TSRecordSet();
    TSRecordSet rs_Gara = new TSRecordSet();
    TSRecordSet rs_ComAggiudic = new TSRecordSet();
    TSRecordSet rs_Aziende = new TSRecordSet();
    TSRecordSet rs_RapLeg = new TSRecordSet();

    sqlParams.Add("@RUP_Login", RUP_Login);
    rs_pwd = GetRS("select dbo.OCP_getPasswordWS(@RUP_Login) as account", sqlParams);
    rs_pwd.MoveFirst();

    string sitar_account = CStr(rs_pwd["account"]);
    string[] arr = sitar_account.Split("@@@");

    string SITAR_LOGIN = arr[0];
    string SITAR_PASSWORD = arr[1];

    //'-- se è stato richiesto l'invio a lotti
    sqlParams.Clear();
    sqlParams.Add("@ID_DOC", CInt(g_ID_DOC));
    if (OPERATION.ToUpper() == "ISTANZIAESITOLOTTI") 
    {
        STRsql = "select * from SITAR_XML_LOTTI_ESITO where idRow = @ID_DOC";
        rsEsiti = GetRS(STRsql, sqlParams);

        //'-- se è stato chiesto un ISTANZIAAGGIUDICAZIONELOTTI vuol dire che sicuramente ci sarà il lotto. altrimenti la stored richiedente schedula l'operazione classica per l'intera procedura

        rsEsiti.MoveFirst();
        g_ID_DOC = CStr(rsEsiti["idHeader"]);
        sqlParams.Clear();
        sqlParams.Add("@ID_DOC", CInt(g_ID_DOC));
    }
    else
    {
        STRsql = "select * from SITAR_XML_LOTTI_ESITO where idheader = @ID_DOC";
        rsEsiti = GetRS(STRsql, sqlParams);
    }

    rs_Gara = GetRS("select CFEIN from SITAR_XML_DATI_GARA with(nolock) where idHeader = @ID_DOC", sqlParams);
    CF_Ente = CStr(rs_Gara["CFEIN"]);

    response.Write(@"<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:bean='http://beans.ws.vigilanza.sil.eldasoft.it'>
	<soapenv:Header/>
	<soapenv:Body>
		<bean:istanziaEsito>
			<bean:login>
				<bean:login>" + SITAR_LOGIN + @"</bean:login>
				<bean:password>" + SITAR_PASSWORD + @"</bean:password>
			</bean:login>
			<bean:esito>
				<bean:testata>
					<bean:CFEIN>" + CF_Ente + @"</bean:CFEIN>
					<bean:SOVRASCR>" + SOVRASCR + @"</bean:SOVRASCR>
				</bean:testata>
				<bean:oggettoXML>
    <![CDATA[
    <bean:richiestaSincrona_IstanzaEsito test='false' xmlns:bean='http://beans.vigilanza.sil.eldasoft.it' >");

    if (rsEsiti.RecordCount > 0) 
    {
        rsEsiti.MoveFirst();

        //'-- Ciclo sui lotti
        while (!rsEsiti.EOF) 
        {
            response.Write(@"<bean:listaLottiEsito>
		<bean:W3CIG>" + encodeXML(CStr(rsEsiti["W3CIG"])) + @"</bean:W3CIG>
		<bean:esito>
		  <bean:W9LOESIPROC>" + CStr(rsEsiti["W9LOESIPROC"]) + @"</bean:W9LOESIPROC>");

            // l'utilità deòla roba qui sotto non la capisco ma mi adeguo

            //'FILE_ALLEGATO = rsEsiti.fields("FILE_ALLEGATO").value
            FILE_ALLEGATO = ""; //'-- lato sitar il file è stato considerato deprecato. va passato nel giro di istanzia documentazione

            if (!string.IsNullOrEmpty(FILE_ALLEGATO)) 
            {
                response.Write(@"<bean:FILE_ALLEGATO>" + cdf.base64attach(FILE_ALLEGATO) + @"</bean:FILE_ALLEGATO>");
            }

            response.Write(@"</bean:esito>
	  </bean:listaLottiEsito>");

            rsEsiti.MoveNext();
        }
    }

    response.Write(@"</bean:richiestaSincrona_IstanzaEsito>
    ]]>				
                    </bean:oggettoXML>
                </bean:esito>

            </bean:istanziaEsito>
        </soapenv:Body>
    </soapenv:Envelope>");

}
@Html.Raw(response.Out())